
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `WorkComicVersion` model and its related types.
 *
 * üü¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model WorkComicVersion
 * Êº´ÁîªÁâàÊú¨Ë°®ÔºàÁî®‰∫éÁÆ°ÁêÜ‰∏çÂêåËØ≠Ë®ÄÁâàÊú¨„ÄÅÊ±âÂåñÁªÑÁ≠âÔºâ
 */
export type WorkComicVersionModel = runtime.Types.Result.DefaultSelection<Prisma.$WorkComicVersionPayload>

export type AggregateWorkComicVersion = {
  _count: WorkComicVersionCountAggregateOutputType | null
  _avg: WorkComicVersionAvgAggregateOutputType | null
  _sum: WorkComicVersionSumAggregateOutputType | null
  _min: WorkComicVersionMinAggregateOutputType | null
  _max: WorkComicVersionMaxAggregateOutputType | null
}

export type WorkComicVersionAvgAggregateOutputType = {
  id: number | null
  comicId: number | null
  totalViews: number | null
  favoriteCount: number | null
  likeCount: number | null
  rating: number | null
  ratingCount: number | null
  readRule: number | null
  purchaseAmount: number | null
  sortOrder: number | null
}

export type WorkComicVersionSumAggregateOutputType = {
  id: number | null
  comicId: number | null
  totalViews: number | null
  favoriteCount: number | null
  likeCount: number | null
  rating: number | null
  ratingCount: number | null
  readRule: number | null
  purchaseAmount: number | null
  sortOrder: number | null
}

export type WorkComicVersionMinAggregateOutputType = {
  id: number | null
  comicId: number | null
  versionName: string | null
  language: string | null
  translatorGroup: string | null
  description: string | null
  isRecommended: boolean | null
  isPublished: boolean | null
  publishAt: Date | null
  lastUpdated: Date | null
  totalViews: number | null
  favoriteCount: number | null
  likeCount: number | null
  rating: number | null
  ratingCount: number | null
  readRule: number | null
  purchaseAmount: number | null
  copyright: string | null
  disclaimer: string | null
  remark: string | null
  sortOrder: number | null
  deletedAt: Date | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type WorkComicVersionMaxAggregateOutputType = {
  id: number | null
  comicId: number | null
  versionName: string | null
  language: string | null
  translatorGroup: string | null
  description: string | null
  isRecommended: boolean | null
  isPublished: boolean | null
  publishAt: Date | null
  lastUpdated: Date | null
  totalViews: number | null
  favoriteCount: number | null
  likeCount: number | null
  rating: number | null
  ratingCount: number | null
  readRule: number | null
  purchaseAmount: number | null
  copyright: string | null
  disclaimer: string | null
  remark: string | null
  sortOrder: number | null
  deletedAt: Date | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type WorkComicVersionCountAggregateOutputType = {
  id: number
  comicId: number
  versionName: number
  language: number
  translatorGroup: number
  description: number
  isRecommended: number
  isPublished: number
  publishAt: number
  lastUpdated: number
  totalViews: number
  favoriteCount: number
  likeCount: number
  rating: number
  ratingCount: number
  readRule: number
  purchaseAmount: number
  copyright: number
  disclaimer: number
  remark: number
  sortOrder: number
  deletedAt: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type WorkComicVersionAvgAggregateInputType = {
  id?: true
  comicId?: true
  totalViews?: true
  favoriteCount?: true
  likeCount?: true
  rating?: true
  ratingCount?: true
  readRule?: true
  purchaseAmount?: true
  sortOrder?: true
}

export type WorkComicVersionSumAggregateInputType = {
  id?: true
  comicId?: true
  totalViews?: true
  favoriteCount?: true
  likeCount?: true
  rating?: true
  ratingCount?: true
  readRule?: true
  purchaseAmount?: true
  sortOrder?: true
}

export type WorkComicVersionMinAggregateInputType = {
  id?: true
  comicId?: true
  versionName?: true
  language?: true
  translatorGroup?: true
  description?: true
  isRecommended?: true
  isPublished?: true
  publishAt?: true
  lastUpdated?: true
  totalViews?: true
  favoriteCount?: true
  likeCount?: true
  rating?: true
  ratingCount?: true
  readRule?: true
  purchaseAmount?: true
  copyright?: true
  disclaimer?: true
  remark?: true
  sortOrder?: true
  deletedAt?: true
  createdAt?: true
  updatedAt?: true
}

export type WorkComicVersionMaxAggregateInputType = {
  id?: true
  comicId?: true
  versionName?: true
  language?: true
  translatorGroup?: true
  description?: true
  isRecommended?: true
  isPublished?: true
  publishAt?: true
  lastUpdated?: true
  totalViews?: true
  favoriteCount?: true
  likeCount?: true
  rating?: true
  ratingCount?: true
  readRule?: true
  purchaseAmount?: true
  copyright?: true
  disclaimer?: true
  remark?: true
  sortOrder?: true
  deletedAt?: true
  createdAt?: true
  updatedAt?: true
}

export type WorkComicVersionCountAggregateInputType = {
  id?: true
  comicId?: true
  versionName?: true
  language?: true
  translatorGroup?: true
  description?: true
  isRecommended?: true
  isPublished?: true
  publishAt?: true
  lastUpdated?: true
  totalViews?: true
  favoriteCount?: true
  likeCount?: true
  rating?: true
  ratingCount?: true
  readRule?: true
  purchaseAmount?: true
  copyright?: true
  disclaimer?: true
  remark?: true
  sortOrder?: true
  deletedAt?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type WorkComicVersionAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which WorkComicVersion to aggregate.
   */
  where?: Prisma.WorkComicVersionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WorkComicVersions to fetch.
   */
  orderBy?: Prisma.WorkComicVersionOrderByWithRelationInput | Prisma.WorkComicVersionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.WorkComicVersionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `¬±n` WorkComicVersions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WorkComicVersions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned WorkComicVersions
  **/
  _count?: true | WorkComicVersionCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: WorkComicVersionAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: WorkComicVersionSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: WorkComicVersionMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: WorkComicVersionMaxAggregateInputType
}

export type GetWorkComicVersionAggregateType<T extends WorkComicVersionAggregateArgs> = {
      [P in keyof T & keyof AggregateWorkComicVersion]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWorkComicVersion[P]>
    : Prisma.GetScalarType<T[P], AggregateWorkComicVersion[P]>
}




export type WorkComicVersionGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WorkComicVersionWhereInput
  orderBy?: Prisma.WorkComicVersionOrderByWithAggregationInput | Prisma.WorkComicVersionOrderByWithAggregationInput[]
  by: Prisma.WorkComicVersionScalarFieldEnum[] | Prisma.WorkComicVersionScalarFieldEnum
  having?: Prisma.WorkComicVersionScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: WorkComicVersionCountAggregateInputType | true
  _avg?: WorkComicVersionAvgAggregateInputType
  _sum?: WorkComicVersionSumAggregateInputType
  _min?: WorkComicVersionMinAggregateInputType
  _max?: WorkComicVersionMaxAggregateInputType
}

export type WorkComicVersionGroupByOutputType = {
  id: number
  comicId: number
  versionName: string
  language: string
  translatorGroup: string | null
  description: string | null
  isRecommended: boolean
  isPublished: boolean
  publishAt: Date | null
  lastUpdated: Date | null
  totalViews: number
  favoriteCount: number
  likeCount: number
  rating: number | null
  ratingCount: number
  readRule: number
  purchaseAmount: number
  copyright: string | null
  disclaimer: string | null
  remark: string | null
  sortOrder: number
  deletedAt: Date | null
  createdAt: Date
  updatedAt: Date
  _count: WorkComicVersionCountAggregateOutputType | null
  _avg: WorkComicVersionAvgAggregateOutputType | null
  _sum: WorkComicVersionSumAggregateOutputType | null
  _min: WorkComicVersionMinAggregateOutputType | null
  _max: WorkComicVersionMaxAggregateOutputType | null
}

type GetWorkComicVersionGroupByPayload<T extends WorkComicVersionGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<WorkComicVersionGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof WorkComicVersionGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], WorkComicVersionGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], WorkComicVersionGroupByOutputType[P]>
      }
    >
  >



export type WorkComicVersionWhereInput = {
  AND?: Prisma.WorkComicVersionWhereInput | Prisma.WorkComicVersionWhereInput[]
  OR?: Prisma.WorkComicVersionWhereInput[]
  NOT?: Prisma.WorkComicVersionWhereInput | Prisma.WorkComicVersionWhereInput[]
  id?: Prisma.IntFilter<"WorkComicVersion"> | number
  comicId?: Prisma.IntFilter<"WorkComicVersion"> | number
  versionName?: Prisma.StringFilter<"WorkComicVersion"> | string
  language?: Prisma.StringFilter<"WorkComicVersion"> | string
  translatorGroup?: Prisma.StringNullableFilter<"WorkComicVersion"> | string | null
  description?: Prisma.StringNullableFilter<"WorkComicVersion"> | string | null
  isRecommended?: Prisma.BoolFilter<"WorkComicVersion"> | boolean
  isPublished?: Prisma.BoolFilter<"WorkComicVersion"> | boolean
  publishAt?: Prisma.DateTimeNullableFilter<"WorkComicVersion"> | Date | string | null
  lastUpdated?: Prisma.DateTimeNullableFilter<"WorkComicVersion"> | Date | string | null
  totalViews?: Prisma.IntFilter<"WorkComicVersion"> | number
  favoriteCount?: Prisma.IntFilter<"WorkComicVersion"> | number
  likeCount?: Prisma.IntFilter<"WorkComicVersion"> | number
  rating?: Prisma.FloatNullableFilter<"WorkComicVersion"> | number | null
  ratingCount?: Prisma.IntFilter<"WorkComicVersion"> | number
  readRule?: Prisma.IntFilter<"WorkComicVersion"> | number
  purchaseAmount?: Prisma.IntFilter<"WorkComicVersion"> | number
  copyright?: Prisma.StringNullableFilter<"WorkComicVersion"> | string | null
  disclaimer?: Prisma.StringNullableFilter<"WorkComicVersion"> | string | null
  remark?: Prisma.StringNullableFilter<"WorkComicVersion"> | string | null
  sortOrder?: Prisma.IntFilter<"WorkComicVersion"> | number
  deletedAt?: Prisma.DateTimeNullableFilter<"WorkComicVersion"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"WorkComicVersion"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"WorkComicVersion"> | Date | string
  comic?: Prisma.XOR<Prisma.WorkComicScalarRelationFilter, Prisma.WorkComicWhereInput>
  chapters?: Prisma.WorkComicChapterListRelationFilter
}

export type WorkComicVersionOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  comicId?: Prisma.SortOrder
  versionName?: Prisma.SortOrder
  language?: Prisma.SortOrder
  translatorGroup?: Prisma.SortOrderInput | Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  isRecommended?: Prisma.SortOrder
  isPublished?: Prisma.SortOrder
  publishAt?: Prisma.SortOrderInput | Prisma.SortOrder
  lastUpdated?: Prisma.SortOrderInput | Prisma.SortOrder
  totalViews?: Prisma.SortOrder
  favoriteCount?: Prisma.SortOrder
  likeCount?: Prisma.SortOrder
  rating?: Prisma.SortOrderInput | Prisma.SortOrder
  ratingCount?: Prisma.SortOrder
  readRule?: Prisma.SortOrder
  purchaseAmount?: Prisma.SortOrder
  copyright?: Prisma.SortOrderInput | Prisma.SortOrder
  disclaimer?: Prisma.SortOrderInput | Prisma.SortOrder
  remark?: Prisma.SortOrderInput | Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  comic?: Prisma.WorkComicOrderByWithRelationInput
  chapters?: Prisma.WorkComicChapterOrderByRelationAggregateInput
}

export type WorkComicVersionWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  comicId_language_versionName?: Prisma.WorkComicVersionComicIdLanguageVersionNameCompoundUniqueInput
  AND?: Prisma.WorkComicVersionWhereInput | Prisma.WorkComicVersionWhereInput[]
  OR?: Prisma.WorkComicVersionWhereInput[]
  NOT?: Prisma.WorkComicVersionWhereInput | Prisma.WorkComicVersionWhereInput[]
  comicId?: Prisma.IntFilter<"WorkComicVersion"> | number
  versionName?: Prisma.StringFilter<"WorkComicVersion"> | string
  language?: Prisma.StringFilter<"WorkComicVersion"> | string
  translatorGroup?: Prisma.StringNullableFilter<"WorkComicVersion"> | string | null
  description?: Prisma.StringNullableFilter<"WorkComicVersion"> | string | null
  isRecommended?: Prisma.BoolFilter<"WorkComicVersion"> | boolean
  isPublished?: Prisma.BoolFilter<"WorkComicVersion"> | boolean
  publishAt?: Prisma.DateTimeNullableFilter<"WorkComicVersion"> | Date | string | null
  lastUpdated?: Prisma.DateTimeNullableFilter<"WorkComicVersion"> | Date | string | null
  totalViews?: Prisma.IntFilter<"WorkComicVersion"> | number
  favoriteCount?: Prisma.IntFilter<"WorkComicVersion"> | number
  likeCount?: Prisma.IntFilter<"WorkComicVersion"> | number
  rating?: Prisma.FloatNullableFilter<"WorkComicVersion"> | number | null
  ratingCount?: Prisma.IntFilter<"WorkComicVersion"> | number
  readRule?: Prisma.IntFilter<"WorkComicVersion"> | number
  purchaseAmount?: Prisma.IntFilter<"WorkComicVersion"> | number
  copyright?: Prisma.StringNullableFilter<"WorkComicVersion"> | string | null
  disclaimer?: Prisma.StringNullableFilter<"WorkComicVersion"> | string | null
  remark?: Prisma.StringNullableFilter<"WorkComicVersion"> | string | null
  sortOrder?: Prisma.IntFilter<"WorkComicVersion"> | number
  deletedAt?: Prisma.DateTimeNullableFilter<"WorkComicVersion"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"WorkComicVersion"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"WorkComicVersion"> | Date | string
  comic?: Prisma.XOR<Prisma.WorkComicScalarRelationFilter, Prisma.WorkComicWhereInput>
  chapters?: Prisma.WorkComicChapterListRelationFilter
}, "id" | "comicId_language_versionName">

export type WorkComicVersionOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  comicId?: Prisma.SortOrder
  versionName?: Prisma.SortOrder
  language?: Prisma.SortOrder
  translatorGroup?: Prisma.SortOrderInput | Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  isRecommended?: Prisma.SortOrder
  isPublished?: Prisma.SortOrder
  publishAt?: Prisma.SortOrderInput | Prisma.SortOrder
  lastUpdated?: Prisma.SortOrderInput | Prisma.SortOrder
  totalViews?: Prisma.SortOrder
  favoriteCount?: Prisma.SortOrder
  likeCount?: Prisma.SortOrder
  rating?: Prisma.SortOrderInput | Prisma.SortOrder
  ratingCount?: Prisma.SortOrder
  readRule?: Prisma.SortOrder
  purchaseAmount?: Prisma.SortOrder
  copyright?: Prisma.SortOrderInput | Prisma.SortOrder
  disclaimer?: Prisma.SortOrderInput | Prisma.SortOrder
  remark?: Prisma.SortOrderInput | Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.WorkComicVersionCountOrderByAggregateInput
  _avg?: Prisma.WorkComicVersionAvgOrderByAggregateInput
  _max?: Prisma.WorkComicVersionMaxOrderByAggregateInput
  _min?: Prisma.WorkComicVersionMinOrderByAggregateInput
  _sum?: Prisma.WorkComicVersionSumOrderByAggregateInput
}

export type WorkComicVersionScalarWhereWithAggregatesInput = {
  AND?: Prisma.WorkComicVersionScalarWhereWithAggregatesInput | Prisma.WorkComicVersionScalarWhereWithAggregatesInput[]
  OR?: Prisma.WorkComicVersionScalarWhereWithAggregatesInput[]
  NOT?: Prisma.WorkComicVersionScalarWhereWithAggregatesInput | Prisma.WorkComicVersionScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"WorkComicVersion"> | number
  comicId?: Prisma.IntWithAggregatesFilter<"WorkComicVersion"> | number
  versionName?: Prisma.StringWithAggregatesFilter<"WorkComicVersion"> | string
  language?: Prisma.StringWithAggregatesFilter<"WorkComicVersion"> | string
  translatorGroup?: Prisma.StringNullableWithAggregatesFilter<"WorkComicVersion"> | string | null
  description?: Prisma.StringNullableWithAggregatesFilter<"WorkComicVersion"> | string | null
  isRecommended?: Prisma.BoolWithAggregatesFilter<"WorkComicVersion"> | boolean
  isPublished?: Prisma.BoolWithAggregatesFilter<"WorkComicVersion"> | boolean
  publishAt?: Prisma.DateTimeNullableWithAggregatesFilter<"WorkComicVersion"> | Date | string | null
  lastUpdated?: Prisma.DateTimeNullableWithAggregatesFilter<"WorkComicVersion"> | Date | string | null
  totalViews?: Prisma.IntWithAggregatesFilter<"WorkComicVersion"> | number
  favoriteCount?: Prisma.IntWithAggregatesFilter<"WorkComicVersion"> | number
  likeCount?: Prisma.IntWithAggregatesFilter<"WorkComicVersion"> | number
  rating?: Prisma.FloatNullableWithAggregatesFilter<"WorkComicVersion"> | number | null
  ratingCount?: Prisma.IntWithAggregatesFilter<"WorkComicVersion"> | number
  readRule?: Prisma.IntWithAggregatesFilter<"WorkComicVersion"> | number
  purchaseAmount?: Prisma.IntWithAggregatesFilter<"WorkComicVersion"> | number
  copyright?: Prisma.StringNullableWithAggregatesFilter<"WorkComicVersion"> | string | null
  disclaimer?: Prisma.StringNullableWithAggregatesFilter<"WorkComicVersion"> | string | null
  remark?: Prisma.StringNullableWithAggregatesFilter<"WorkComicVersion"> | string | null
  sortOrder?: Prisma.IntWithAggregatesFilter<"WorkComicVersion"> | number
  deletedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"WorkComicVersion"> | Date | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"WorkComicVersion"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"WorkComicVersion"> | Date | string
}

export type WorkComicVersionCreateInput = {
  versionName: string
  language: string
  translatorGroup?: string | null
  description?: string | null
  isRecommended?: boolean
  isPublished?: boolean
  publishAt?: Date | string | null
  lastUpdated?: Date | string | null
  totalViews?: number
  favoriteCount?: number
  likeCount?: number
  rating?: number | null
  ratingCount?: number
  readRule?: number
  purchaseAmount?: number
  copyright?: string | null
  disclaimer?: string | null
  remark?: string | null
  sortOrder?: number
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  comic: Prisma.WorkComicCreateNestedOneWithoutComicVersionsInput
  chapters?: Prisma.WorkComicChapterCreateNestedManyWithoutRelatedVersionInput
}

export type WorkComicVersionUncheckedCreateInput = {
  id?: number
  comicId: number
  versionName: string
  language: string
  translatorGroup?: string | null
  description?: string | null
  isRecommended?: boolean
  isPublished?: boolean
  publishAt?: Date | string | null
  lastUpdated?: Date | string | null
  totalViews?: number
  favoriteCount?: number
  likeCount?: number
  rating?: number | null
  ratingCount?: number
  readRule?: number
  purchaseAmount?: number
  copyright?: string | null
  disclaimer?: string | null
  remark?: string | null
  sortOrder?: number
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  chapters?: Prisma.WorkComicChapterUncheckedCreateNestedManyWithoutRelatedVersionInput
}

export type WorkComicVersionUpdateInput = {
  versionName?: Prisma.StringFieldUpdateOperationsInput | string
  language?: Prisma.StringFieldUpdateOperationsInput | string
  translatorGroup?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  publishAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastUpdated?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number
  readRule?: Prisma.IntFieldUpdateOperationsInput | number
  purchaseAmount?: Prisma.IntFieldUpdateOperationsInput | number
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  comic?: Prisma.WorkComicUpdateOneRequiredWithoutComicVersionsNestedInput
  chapters?: Prisma.WorkComicChapterUpdateManyWithoutRelatedVersionNestedInput
}

export type WorkComicVersionUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  comicId?: Prisma.IntFieldUpdateOperationsInput | number
  versionName?: Prisma.StringFieldUpdateOperationsInput | string
  language?: Prisma.StringFieldUpdateOperationsInput | string
  translatorGroup?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  publishAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastUpdated?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number
  readRule?: Prisma.IntFieldUpdateOperationsInput | number
  purchaseAmount?: Prisma.IntFieldUpdateOperationsInput | number
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  chapters?: Prisma.WorkComicChapterUncheckedUpdateManyWithoutRelatedVersionNestedInput
}

export type WorkComicVersionCreateManyInput = {
  id?: number
  comicId: number
  versionName: string
  language: string
  translatorGroup?: string | null
  description?: string | null
  isRecommended?: boolean
  isPublished?: boolean
  publishAt?: Date | string | null
  lastUpdated?: Date | string | null
  totalViews?: number
  favoriteCount?: number
  likeCount?: number
  rating?: number | null
  ratingCount?: number
  readRule?: number
  purchaseAmount?: number
  copyright?: string | null
  disclaimer?: string | null
  remark?: string | null
  sortOrder?: number
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type WorkComicVersionUpdateManyMutationInput = {
  versionName?: Prisma.StringFieldUpdateOperationsInput | string
  language?: Prisma.StringFieldUpdateOperationsInput | string
  translatorGroup?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  publishAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastUpdated?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number
  readRule?: Prisma.IntFieldUpdateOperationsInput | number
  purchaseAmount?: Prisma.IntFieldUpdateOperationsInput | number
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WorkComicVersionUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  comicId?: Prisma.IntFieldUpdateOperationsInput | number
  versionName?: Prisma.StringFieldUpdateOperationsInput | string
  language?: Prisma.StringFieldUpdateOperationsInput | string
  translatorGroup?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  publishAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastUpdated?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number
  readRule?: Prisma.IntFieldUpdateOperationsInput | number
  purchaseAmount?: Prisma.IntFieldUpdateOperationsInput | number
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WorkComicVersionNullableScalarRelationFilter = {
  is?: Prisma.WorkComicVersionWhereInput | null
  isNot?: Prisma.WorkComicVersionWhereInput | null
}

export type WorkComicVersionComicIdLanguageVersionNameCompoundUniqueInput = {
  comicId: number
  language: string
  versionName: string
}

export type WorkComicVersionCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  comicId?: Prisma.SortOrder
  versionName?: Prisma.SortOrder
  language?: Prisma.SortOrder
  translatorGroup?: Prisma.SortOrder
  description?: Prisma.SortOrder
  isRecommended?: Prisma.SortOrder
  isPublished?: Prisma.SortOrder
  publishAt?: Prisma.SortOrder
  lastUpdated?: Prisma.SortOrder
  totalViews?: Prisma.SortOrder
  favoriteCount?: Prisma.SortOrder
  likeCount?: Prisma.SortOrder
  rating?: Prisma.SortOrder
  ratingCount?: Prisma.SortOrder
  readRule?: Prisma.SortOrder
  purchaseAmount?: Prisma.SortOrder
  copyright?: Prisma.SortOrder
  disclaimer?: Prisma.SortOrder
  remark?: Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type WorkComicVersionAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  comicId?: Prisma.SortOrder
  totalViews?: Prisma.SortOrder
  favoriteCount?: Prisma.SortOrder
  likeCount?: Prisma.SortOrder
  rating?: Prisma.SortOrder
  ratingCount?: Prisma.SortOrder
  readRule?: Prisma.SortOrder
  purchaseAmount?: Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
}

export type WorkComicVersionMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  comicId?: Prisma.SortOrder
  versionName?: Prisma.SortOrder
  language?: Prisma.SortOrder
  translatorGroup?: Prisma.SortOrder
  description?: Prisma.SortOrder
  isRecommended?: Prisma.SortOrder
  isPublished?: Prisma.SortOrder
  publishAt?: Prisma.SortOrder
  lastUpdated?: Prisma.SortOrder
  totalViews?: Prisma.SortOrder
  favoriteCount?: Prisma.SortOrder
  likeCount?: Prisma.SortOrder
  rating?: Prisma.SortOrder
  ratingCount?: Prisma.SortOrder
  readRule?: Prisma.SortOrder
  purchaseAmount?: Prisma.SortOrder
  copyright?: Prisma.SortOrder
  disclaimer?: Prisma.SortOrder
  remark?: Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type WorkComicVersionMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  comicId?: Prisma.SortOrder
  versionName?: Prisma.SortOrder
  language?: Prisma.SortOrder
  translatorGroup?: Prisma.SortOrder
  description?: Prisma.SortOrder
  isRecommended?: Prisma.SortOrder
  isPublished?: Prisma.SortOrder
  publishAt?: Prisma.SortOrder
  lastUpdated?: Prisma.SortOrder
  totalViews?: Prisma.SortOrder
  favoriteCount?: Prisma.SortOrder
  likeCount?: Prisma.SortOrder
  rating?: Prisma.SortOrder
  ratingCount?: Prisma.SortOrder
  readRule?: Prisma.SortOrder
  purchaseAmount?: Prisma.SortOrder
  copyright?: Prisma.SortOrder
  disclaimer?: Prisma.SortOrder
  remark?: Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type WorkComicVersionSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  comicId?: Prisma.SortOrder
  totalViews?: Prisma.SortOrder
  favoriteCount?: Prisma.SortOrder
  likeCount?: Prisma.SortOrder
  rating?: Prisma.SortOrder
  ratingCount?: Prisma.SortOrder
  readRule?: Prisma.SortOrder
  purchaseAmount?: Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
}

export type WorkComicVersionListRelationFilter = {
  every?: Prisma.WorkComicVersionWhereInput
  some?: Prisma.WorkComicVersionWhereInput
  none?: Prisma.WorkComicVersionWhereInput
}

export type WorkComicVersionOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type WorkComicVersionCreateNestedOneWithoutChaptersInput = {
  create?: Prisma.XOR<Prisma.WorkComicVersionCreateWithoutChaptersInput, Prisma.WorkComicVersionUncheckedCreateWithoutChaptersInput>
  connectOrCreate?: Prisma.WorkComicVersionCreateOrConnectWithoutChaptersInput
  connect?: Prisma.WorkComicVersionWhereUniqueInput
}

export type WorkComicVersionUpdateOneWithoutChaptersNestedInput = {
  create?: Prisma.XOR<Prisma.WorkComicVersionCreateWithoutChaptersInput, Prisma.WorkComicVersionUncheckedCreateWithoutChaptersInput>
  connectOrCreate?: Prisma.WorkComicVersionCreateOrConnectWithoutChaptersInput
  upsert?: Prisma.WorkComicVersionUpsertWithoutChaptersInput
  disconnect?: Prisma.WorkComicVersionWhereInput | boolean
  delete?: Prisma.WorkComicVersionWhereInput | boolean
  connect?: Prisma.WorkComicVersionWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.WorkComicVersionUpdateToOneWithWhereWithoutChaptersInput, Prisma.WorkComicVersionUpdateWithoutChaptersInput>, Prisma.WorkComicVersionUncheckedUpdateWithoutChaptersInput>
}

export type NullableFloatFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type WorkComicVersionCreateNestedManyWithoutComicInput = {
  create?: Prisma.XOR<Prisma.WorkComicVersionCreateWithoutComicInput, Prisma.WorkComicVersionUncheckedCreateWithoutComicInput> | Prisma.WorkComicVersionCreateWithoutComicInput[] | Prisma.WorkComicVersionUncheckedCreateWithoutComicInput[]
  connectOrCreate?: Prisma.WorkComicVersionCreateOrConnectWithoutComicInput | Prisma.WorkComicVersionCreateOrConnectWithoutComicInput[]
  createMany?: Prisma.WorkComicVersionCreateManyComicInputEnvelope
  connect?: Prisma.WorkComicVersionWhereUniqueInput | Prisma.WorkComicVersionWhereUniqueInput[]
}

export type WorkComicVersionUncheckedCreateNestedManyWithoutComicInput = {
  create?: Prisma.XOR<Prisma.WorkComicVersionCreateWithoutComicInput, Prisma.WorkComicVersionUncheckedCreateWithoutComicInput> | Prisma.WorkComicVersionCreateWithoutComicInput[] | Prisma.WorkComicVersionUncheckedCreateWithoutComicInput[]
  connectOrCreate?: Prisma.WorkComicVersionCreateOrConnectWithoutComicInput | Prisma.WorkComicVersionCreateOrConnectWithoutComicInput[]
  createMany?: Prisma.WorkComicVersionCreateManyComicInputEnvelope
  connect?: Prisma.WorkComicVersionWhereUniqueInput | Prisma.WorkComicVersionWhereUniqueInput[]
}

export type WorkComicVersionUpdateManyWithoutComicNestedInput = {
  create?: Prisma.XOR<Prisma.WorkComicVersionCreateWithoutComicInput, Prisma.WorkComicVersionUncheckedCreateWithoutComicInput> | Prisma.WorkComicVersionCreateWithoutComicInput[] | Prisma.WorkComicVersionUncheckedCreateWithoutComicInput[]
  connectOrCreate?: Prisma.WorkComicVersionCreateOrConnectWithoutComicInput | Prisma.WorkComicVersionCreateOrConnectWithoutComicInput[]
  upsert?: Prisma.WorkComicVersionUpsertWithWhereUniqueWithoutComicInput | Prisma.WorkComicVersionUpsertWithWhereUniqueWithoutComicInput[]
  createMany?: Prisma.WorkComicVersionCreateManyComicInputEnvelope
  set?: Prisma.WorkComicVersionWhereUniqueInput | Prisma.WorkComicVersionWhereUniqueInput[]
  disconnect?: Prisma.WorkComicVersionWhereUniqueInput | Prisma.WorkComicVersionWhereUniqueInput[]
  delete?: Prisma.WorkComicVersionWhereUniqueInput | Prisma.WorkComicVersionWhereUniqueInput[]
  connect?: Prisma.WorkComicVersionWhereUniqueInput | Prisma.WorkComicVersionWhereUniqueInput[]
  update?: Prisma.WorkComicVersionUpdateWithWhereUniqueWithoutComicInput | Prisma.WorkComicVersionUpdateWithWhereUniqueWithoutComicInput[]
  updateMany?: Prisma.WorkComicVersionUpdateManyWithWhereWithoutComicInput | Prisma.WorkComicVersionUpdateManyWithWhereWithoutComicInput[]
  deleteMany?: Prisma.WorkComicVersionScalarWhereInput | Prisma.WorkComicVersionScalarWhereInput[]
}

export type WorkComicVersionUncheckedUpdateManyWithoutComicNestedInput = {
  create?: Prisma.XOR<Prisma.WorkComicVersionCreateWithoutComicInput, Prisma.WorkComicVersionUncheckedCreateWithoutComicInput> | Prisma.WorkComicVersionCreateWithoutComicInput[] | Prisma.WorkComicVersionUncheckedCreateWithoutComicInput[]
  connectOrCreate?: Prisma.WorkComicVersionCreateOrConnectWithoutComicInput | Prisma.WorkComicVersionCreateOrConnectWithoutComicInput[]
  upsert?: Prisma.WorkComicVersionUpsertWithWhereUniqueWithoutComicInput | Prisma.WorkComicVersionUpsertWithWhereUniqueWithoutComicInput[]
  createMany?: Prisma.WorkComicVersionCreateManyComicInputEnvelope
  set?: Prisma.WorkComicVersionWhereUniqueInput | Prisma.WorkComicVersionWhereUniqueInput[]
  disconnect?: Prisma.WorkComicVersionWhereUniqueInput | Prisma.WorkComicVersionWhereUniqueInput[]
  delete?: Prisma.WorkComicVersionWhereUniqueInput | Prisma.WorkComicVersionWhereUniqueInput[]
  connect?: Prisma.WorkComicVersionWhereUniqueInput | Prisma.WorkComicVersionWhereUniqueInput[]
  update?: Prisma.WorkComicVersionUpdateWithWhereUniqueWithoutComicInput | Prisma.WorkComicVersionUpdateWithWhereUniqueWithoutComicInput[]
  updateMany?: Prisma.WorkComicVersionUpdateManyWithWhereWithoutComicInput | Prisma.WorkComicVersionUpdateManyWithWhereWithoutComicInput[]
  deleteMany?: Prisma.WorkComicVersionScalarWhereInput | Prisma.WorkComicVersionScalarWhereInput[]
}

export type WorkComicVersionCreateWithoutChaptersInput = {
  versionName: string
  language: string
  translatorGroup?: string | null
  description?: string | null
  isRecommended?: boolean
  isPublished?: boolean
  publishAt?: Date | string | null
  lastUpdated?: Date | string | null
  totalViews?: number
  favoriteCount?: number
  likeCount?: number
  rating?: number | null
  ratingCount?: number
  readRule?: number
  purchaseAmount?: number
  copyright?: string | null
  disclaimer?: string | null
  remark?: string | null
  sortOrder?: number
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  comic: Prisma.WorkComicCreateNestedOneWithoutComicVersionsInput
}

export type WorkComicVersionUncheckedCreateWithoutChaptersInput = {
  id?: number
  comicId: number
  versionName: string
  language: string
  translatorGroup?: string | null
  description?: string | null
  isRecommended?: boolean
  isPublished?: boolean
  publishAt?: Date | string | null
  lastUpdated?: Date | string | null
  totalViews?: number
  favoriteCount?: number
  likeCount?: number
  rating?: number | null
  ratingCount?: number
  readRule?: number
  purchaseAmount?: number
  copyright?: string | null
  disclaimer?: string | null
  remark?: string | null
  sortOrder?: number
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type WorkComicVersionCreateOrConnectWithoutChaptersInput = {
  where: Prisma.WorkComicVersionWhereUniqueInput
  create: Prisma.XOR<Prisma.WorkComicVersionCreateWithoutChaptersInput, Prisma.WorkComicVersionUncheckedCreateWithoutChaptersInput>
}

export type WorkComicVersionUpsertWithoutChaptersInput = {
  update: Prisma.XOR<Prisma.WorkComicVersionUpdateWithoutChaptersInput, Prisma.WorkComicVersionUncheckedUpdateWithoutChaptersInput>
  create: Prisma.XOR<Prisma.WorkComicVersionCreateWithoutChaptersInput, Prisma.WorkComicVersionUncheckedCreateWithoutChaptersInput>
  where?: Prisma.WorkComicVersionWhereInput
}

export type WorkComicVersionUpdateToOneWithWhereWithoutChaptersInput = {
  where?: Prisma.WorkComicVersionWhereInput
  data: Prisma.XOR<Prisma.WorkComicVersionUpdateWithoutChaptersInput, Prisma.WorkComicVersionUncheckedUpdateWithoutChaptersInput>
}

export type WorkComicVersionUpdateWithoutChaptersInput = {
  versionName?: Prisma.StringFieldUpdateOperationsInput | string
  language?: Prisma.StringFieldUpdateOperationsInput | string
  translatorGroup?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  publishAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastUpdated?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number
  readRule?: Prisma.IntFieldUpdateOperationsInput | number
  purchaseAmount?: Prisma.IntFieldUpdateOperationsInput | number
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  comic?: Prisma.WorkComicUpdateOneRequiredWithoutComicVersionsNestedInput
}

export type WorkComicVersionUncheckedUpdateWithoutChaptersInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  comicId?: Prisma.IntFieldUpdateOperationsInput | number
  versionName?: Prisma.StringFieldUpdateOperationsInput | string
  language?: Prisma.StringFieldUpdateOperationsInput | string
  translatorGroup?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  publishAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastUpdated?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number
  readRule?: Prisma.IntFieldUpdateOperationsInput | number
  purchaseAmount?: Prisma.IntFieldUpdateOperationsInput | number
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WorkComicVersionCreateWithoutComicInput = {
  versionName: string
  language: string
  translatorGroup?: string | null
  description?: string | null
  isRecommended?: boolean
  isPublished?: boolean
  publishAt?: Date | string | null
  lastUpdated?: Date | string | null
  totalViews?: number
  favoriteCount?: number
  likeCount?: number
  rating?: number | null
  ratingCount?: number
  readRule?: number
  purchaseAmount?: number
  copyright?: string | null
  disclaimer?: string | null
  remark?: string | null
  sortOrder?: number
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  chapters?: Prisma.WorkComicChapterCreateNestedManyWithoutRelatedVersionInput
}

export type WorkComicVersionUncheckedCreateWithoutComicInput = {
  id?: number
  versionName: string
  language: string
  translatorGroup?: string | null
  description?: string | null
  isRecommended?: boolean
  isPublished?: boolean
  publishAt?: Date | string | null
  lastUpdated?: Date | string | null
  totalViews?: number
  favoriteCount?: number
  likeCount?: number
  rating?: number | null
  ratingCount?: number
  readRule?: number
  purchaseAmount?: number
  copyright?: string | null
  disclaimer?: string | null
  remark?: string | null
  sortOrder?: number
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  chapters?: Prisma.WorkComicChapterUncheckedCreateNestedManyWithoutRelatedVersionInput
}

export type WorkComicVersionCreateOrConnectWithoutComicInput = {
  where: Prisma.WorkComicVersionWhereUniqueInput
  create: Prisma.XOR<Prisma.WorkComicVersionCreateWithoutComicInput, Prisma.WorkComicVersionUncheckedCreateWithoutComicInput>
}

export type WorkComicVersionCreateManyComicInputEnvelope = {
  data: Prisma.WorkComicVersionCreateManyComicInput | Prisma.WorkComicVersionCreateManyComicInput[]
  skipDuplicates?: boolean
}

export type WorkComicVersionUpsertWithWhereUniqueWithoutComicInput = {
  where: Prisma.WorkComicVersionWhereUniqueInput
  update: Prisma.XOR<Prisma.WorkComicVersionUpdateWithoutComicInput, Prisma.WorkComicVersionUncheckedUpdateWithoutComicInput>
  create: Prisma.XOR<Prisma.WorkComicVersionCreateWithoutComicInput, Prisma.WorkComicVersionUncheckedCreateWithoutComicInput>
}

export type WorkComicVersionUpdateWithWhereUniqueWithoutComicInput = {
  where: Prisma.WorkComicVersionWhereUniqueInput
  data: Prisma.XOR<Prisma.WorkComicVersionUpdateWithoutComicInput, Prisma.WorkComicVersionUncheckedUpdateWithoutComicInput>
}

export type WorkComicVersionUpdateManyWithWhereWithoutComicInput = {
  where: Prisma.WorkComicVersionScalarWhereInput
  data: Prisma.XOR<Prisma.WorkComicVersionUpdateManyMutationInput, Prisma.WorkComicVersionUncheckedUpdateManyWithoutComicInput>
}

export type WorkComicVersionScalarWhereInput = {
  AND?: Prisma.WorkComicVersionScalarWhereInput | Prisma.WorkComicVersionScalarWhereInput[]
  OR?: Prisma.WorkComicVersionScalarWhereInput[]
  NOT?: Prisma.WorkComicVersionScalarWhereInput | Prisma.WorkComicVersionScalarWhereInput[]
  id?: Prisma.IntFilter<"WorkComicVersion"> | number
  comicId?: Prisma.IntFilter<"WorkComicVersion"> | number
  versionName?: Prisma.StringFilter<"WorkComicVersion"> | string
  language?: Prisma.StringFilter<"WorkComicVersion"> | string
  translatorGroup?: Prisma.StringNullableFilter<"WorkComicVersion"> | string | null
  description?: Prisma.StringNullableFilter<"WorkComicVersion"> | string | null
  isRecommended?: Prisma.BoolFilter<"WorkComicVersion"> | boolean
  isPublished?: Prisma.BoolFilter<"WorkComicVersion"> | boolean
  publishAt?: Prisma.DateTimeNullableFilter<"WorkComicVersion"> | Date | string | null
  lastUpdated?: Prisma.DateTimeNullableFilter<"WorkComicVersion"> | Date | string | null
  totalViews?: Prisma.IntFilter<"WorkComicVersion"> | number
  favoriteCount?: Prisma.IntFilter<"WorkComicVersion"> | number
  likeCount?: Prisma.IntFilter<"WorkComicVersion"> | number
  rating?: Prisma.FloatNullableFilter<"WorkComicVersion"> | number | null
  ratingCount?: Prisma.IntFilter<"WorkComicVersion"> | number
  readRule?: Prisma.IntFilter<"WorkComicVersion"> | number
  purchaseAmount?: Prisma.IntFilter<"WorkComicVersion"> | number
  copyright?: Prisma.StringNullableFilter<"WorkComicVersion"> | string | null
  disclaimer?: Prisma.StringNullableFilter<"WorkComicVersion"> | string | null
  remark?: Prisma.StringNullableFilter<"WorkComicVersion"> | string | null
  sortOrder?: Prisma.IntFilter<"WorkComicVersion"> | number
  deletedAt?: Prisma.DateTimeNullableFilter<"WorkComicVersion"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"WorkComicVersion"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"WorkComicVersion"> | Date | string
}

export type WorkComicVersionCreateManyComicInput = {
  id?: number
  versionName: string
  language: string
  translatorGroup?: string | null
  description?: string | null
  isRecommended?: boolean
  isPublished?: boolean
  publishAt?: Date | string | null
  lastUpdated?: Date | string | null
  totalViews?: number
  favoriteCount?: number
  likeCount?: number
  rating?: number | null
  ratingCount?: number
  readRule?: number
  purchaseAmount?: number
  copyright?: string | null
  disclaimer?: string | null
  remark?: string | null
  sortOrder?: number
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type WorkComicVersionUpdateWithoutComicInput = {
  versionName?: Prisma.StringFieldUpdateOperationsInput | string
  language?: Prisma.StringFieldUpdateOperationsInput | string
  translatorGroup?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  publishAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastUpdated?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number
  readRule?: Prisma.IntFieldUpdateOperationsInput | number
  purchaseAmount?: Prisma.IntFieldUpdateOperationsInput | number
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  chapters?: Prisma.WorkComicChapterUpdateManyWithoutRelatedVersionNestedInput
}

export type WorkComicVersionUncheckedUpdateWithoutComicInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  versionName?: Prisma.StringFieldUpdateOperationsInput | string
  language?: Prisma.StringFieldUpdateOperationsInput | string
  translatorGroup?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  publishAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastUpdated?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number
  readRule?: Prisma.IntFieldUpdateOperationsInput | number
  purchaseAmount?: Prisma.IntFieldUpdateOperationsInput | number
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  chapters?: Prisma.WorkComicChapterUncheckedUpdateManyWithoutRelatedVersionNestedInput
}

export type WorkComicVersionUncheckedUpdateManyWithoutComicInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  versionName?: Prisma.StringFieldUpdateOperationsInput | string
  language?: Prisma.StringFieldUpdateOperationsInput | string
  translatorGroup?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  publishAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastUpdated?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number
  readRule?: Prisma.IntFieldUpdateOperationsInput | number
  purchaseAmount?: Prisma.IntFieldUpdateOperationsInput | number
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type WorkComicVersionCountOutputType
 */

export type WorkComicVersionCountOutputType = {
  chapters: number
}

export type WorkComicVersionCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  chapters?: boolean | WorkComicVersionCountOutputTypeCountChaptersArgs
}

/**
 * WorkComicVersionCountOutputType without action
 */
export type WorkComicVersionCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkComicVersionCountOutputType
   */
  select?: Prisma.WorkComicVersionCountOutputTypeSelect<ExtArgs> | null
}

/**
 * WorkComicVersionCountOutputType without action
 */
export type WorkComicVersionCountOutputTypeCountChaptersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WorkComicChapterWhereInput
}


export type WorkComicVersionSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  comicId?: boolean
  versionName?: boolean
  language?: boolean
  translatorGroup?: boolean
  description?: boolean
  isRecommended?: boolean
  isPublished?: boolean
  publishAt?: boolean
  lastUpdated?: boolean
  totalViews?: boolean
  favoriteCount?: boolean
  likeCount?: boolean
  rating?: boolean
  ratingCount?: boolean
  readRule?: boolean
  purchaseAmount?: boolean
  copyright?: boolean
  disclaimer?: boolean
  remark?: boolean
  sortOrder?: boolean
  deletedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  comic?: boolean | Prisma.WorkComicDefaultArgs<ExtArgs>
  chapters?: boolean | Prisma.WorkComicVersion$chaptersArgs<ExtArgs>
  _count?: boolean | Prisma.WorkComicVersionCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["workComicVersion"]>

export type WorkComicVersionSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  comicId?: boolean
  versionName?: boolean
  language?: boolean
  translatorGroup?: boolean
  description?: boolean
  isRecommended?: boolean
  isPublished?: boolean
  publishAt?: boolean
  lastUpdated?: boolean
  totalViews?: boolean
  favoriteCount?: boolean
  likeCount?: boolean
  rating?: boolean
  ratingCount?: boolean
  readRule?: boolean
  purchaseAmount?: boolean
  copyright?: boolean
  disclaimer?: boolean
  remark?: boolean
  sortOrder?: boolean
  deletedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  comic?: boolean | Prisma.WorkComicDefaultArgs<ExtArgs>
}, ExtArgs["result"]["workComicVersion"]>

export type WorkComicVersionSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  comicId?: boolean
  versionName?: boolean
  language?: boolean
  translatorGroup?: boolean
  description?: boolean
  isRecommended?: boolean
  isPublished?: boolean
  publishAt?: boolean
  lastUpdated?: boolean
  totalViews?: boolean
  favoriteCount?: boolean
  likeCount?: boolean
  rating?: boolean
  ratingCount?: boolean
  readRule?: boolean
  purchaseAmount?: boolean
  copyright?: boolean
  disclaimer?: boolean
  remark?: boolean
  sortOrder?: boolean
  deletedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  comic?: boolean | Prisma.WorkComicDefaultArgs<ExtArgs>
}, ExtArgs["result"]["workComicVersion"]>

export type WorkComicVersionSelectScalar = {
  id?: boolean
  comicId?: boolean
  versionName?: boolean
  language?: boolean
  translatorGroup?: boolean
  description?: boolean
  isRecommended?: boolean
  isPublished?: boolean
  publishAt?: boolean
  lastUpdated?: boolean
  totalViews?: boolean
  favoriteCount?: boolean
  likeCount?: boolean
  rating?: boolean
  ratingCount?: boolean
  readRule?: boolean
  purchaseAmount?: boolean
  copyright?: boolean
  disclaimer?: boolean
  remark?: boolean
  sortOrder?: boolean
  deletedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type WorkComicVersionOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "comicId" | "versionName" | "language" | "translatorGroup" | "description" | "isRecommended" | "isPublished" | "publishAt" | "lastUpdated" | "totalViews" | "favoriteCount" | "likeCount" | "rating" | "ratingCount" | "readRule" | "purchaseAmount" | "copyright" | "disclaimer" | "remark" | "sortOrder" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["workComicVersion"]>
export type WorkComicVersionInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  comic?: boolean | Prisma.WorkComicDefaultArgs<ExtArgs>
  chapters?: boolean | Prisma.WorkComicVersion$chaptersArgs<ExtArgs>
  _count?: boolean | Prisma.WorkComicVersionCountOutputTypeDefaultArgs<ExtArgs>
}
export type WorkComicVersionIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  comic?: boolean | Prisma.WorkComicDefaultArgs<ExtArgs>
}
export type WorkComicVersionIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  comic?: boolean | Prisma.WorkComicDefaultArgs<ExtArgs>
}

export type $WorkComicVersionPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "WorkComicVersion"
  objects: {
    /**
     * ÂÖ≥ËÅîÁöÑÂéüÂßãÊº´Áîª
     */
    comic: Prisma.$WorkComicPayload<ExtArgs>
    /**
     * ÁâàÊú¨Á´†ËäÇÂÖ≥Á≥ªÔºàÁªü‰∏ÄÁ´†ËäÇË°®Ôºâ
     */
    chapters: Prisma.$WorkComicChapterPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    /**
     * ‰∏ªÈîÆID
     */
    id: number
    /**
     * ÂÖ≥ËÅîÁöÑÂéüÂßãÊº´ÁîªID
     */
    comicId: number
    /**
     * ÁâàÊú¨ÂêçÁß∞ÔºàÂ¶ÇÔºöËã±ËØ≠Áâà„ÄÅÊó•ËØ≠Áâà„ÄÅXXÊ±âÂåñÁªÑÁ≠âÔºâ
     */
    versionName: string
    /**
     * ËØ≠Ë®Ä‰ª£Á†ÅÔºàÂ¶ÇÔºözh-CN, en-US, ja-JPÔºâ
     */
    language: string
    /**
     * ÁøªËØëÁªÑ/Ê±âÂåñÁªÑÂêçÁß∞
     */
    translatorGroup: string | null
    /**
     * ÁâàÊú¨ÊèèËø∞
     */
    description: string | null
    /**
     * ÊòØÂê¶‰∏∫Êé®ËçêÁâàÊú¨
     */
    isRecommended: boolean
    /**
     * ÂèëÂ∏ÉÁä∂ÊÄÅ
     */
    isPublished: boolean
    /**
     * ÂèëÂ∏ÉÊó∂Èó¥
     */
    publishAt: Date | null
    /**
     * ÊúÄÂêéÊõ¥Êñ∞Êó∂Èó¥
     */
    lastUpdated: Date | null
    /**
     * ÊÄªÈòÖËØªÊ¨°Êï∞
     */
    totalViews: number
    /**
     * Êî∂ËóèÊï∞
     */
    favoriteCount: number
    /**
     * ÁÇπËµûÊï∞
     */
    likeCount: number
    /**
     * ËØÑÂàÜÔºà1-10ÂàÜÔºå‰øùÁïô‰∏Ä‰ΩçÂ∞èÊï∞Ôºâ
     */
    rating: number | null
    /**
     * ËØÑÂàÜ‰∫∫Êï∞
     */
    ratingCount: number
    /**
     * Êü•ÁúãËßÑÂàôÔºà0=ÊâÄÊúâ‰∫∫, 1=ÁôªÂΩïÁî®Êà∑, 2=‰ºöÂëò, 3=ÁßØÂàÜË¥≠‰π∞Ôºâ
     */
    readRule: number
    /**
     * Ë¥≠‰π∞ÈúÄË¶ÅÊ∂àËÄóÁöÑÁßØÂàÜ
     */
    purchaseAmount: number
    /**
     * ÁâàÊùÉ‰ø°ÊÅØ
     */
    copyright: string | null
    /**
     * ÂÖçË¥£Â£∞Êòé
     */
    disclaimer: string | null
    /**
     * Â§áÊ≥®ÔºàÂÜÖÈÉ®‰ΩøÁî®Ôºâ
     */
    remark: string | null
    /**
     * ÊéíÂ∫èÊùÉÈáçÔºàÁî®‰∫éÁâàÊú¨ÂàóË°®ÊéíÂ∫èÔºâ
     */
    sortOrder: number
    /**
     * ËΩØÂà†Èô§Êó∂Èó¥ÔºàÁî®‰∫éÊï∞ÊçÆÊÅ¢Â§çÊàñÂΩíÊ°£Ôºâ
     */
    deletedAt: Date | null
    /**
     * ÂàõÂª∫Êó∂Èó¥
     */
    createdAt: Date
    /**
     * Êõ¥Êñ∞Êó∂Èó¥
     */
    updatedAt: Date
  }, ExtArgs["result"]["workComicVersion"]>
  composites: {}
}

export type WorkComicVersionGetPayload<S extends boolean | null | undefined | WorkComicVersionDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$WorkComicVersionPayload, S>

export type WorkComicVersionCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<WorkComicVersionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
    select?: WorkComicVersionCountAggregateInputType | true
  }

export interface WorkComicVersionDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WorkComicVersion'], meta: { name: 'WorkComicVersion' } }
  /**
   * Find zero or one WorkComicVersion that matches the filter.
   * @param {WorkComicVersionFindUniqueArgs} args - Arguments to find a WorkComicVersion
   * @example
   * // Get one WorkComicVersion
   * const workComicVersion = await prisma.workComicVersion.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends WorkComicVersionFindUniqueArgs>(args: Prisma.SelectSubset<T, WorkComicVersionFindUniqueArgs<ExtArgs>>): Prisma.Prisma__WorkComicVersionClient<runtime.Types.Result.GetResult<Prisma.$WorkComicVersionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one WorkComicVersion that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {WorkComicVersionFindUniqueOrThrowArgs} args - Arguments to find a WorkComicVersion
   * @example
   * // Get one WorkComicVersion
   * const workComicVersion = await prisma.workComicVersion.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends WorkComicVersionFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, WorkComicVersionFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__WorkComicVersionClient<runtime.Types.Result.GetResult<Prisma.$WorkComicVersionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first WorkComicVersion that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkComicVersionFindFirstArgs} args - Arguments to find a WorkComicVersion
   * @example
   * // Get one WorkComicVersion
   * const workComicVersion = await prisma.workComicVersion.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends WorkComicVersionFindFirstArgs>(args?: Prisma.SelectSubset<T, WorkComicVersionFindFirstArgs<ExtArgs>>): Prisma.Prisma__WorkComicVersionClient<runtime.Types.Result.GetResult<Prisma.$WorkComicVersionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first WorkComicVersion that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkComicVersionFindFirstOrThrowArgs} args - Arguments to find a WorkComicVersion
   * @example
   * // Get one WorkComicVersion
   * const workComicVersion = await prisma.workComicVersion.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends WorkComicVersionFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, WorkComicVersionFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__WorkComicVersionClient<runtime.Types.Result.GetResult<Prisma.$WorkComicVersionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more WorkComicVersions that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkComicVersionFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all WorkComicVersions
   * const workComicVersions = await prisma.workComicVersion.findMany()
   * 
   * // Get first 10 WorkComicVersions
   * const workComicVersions = await prisma.workComicVersion.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const workComicVersionWithIdOnly = await prisma.workComicVersion.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends WorkComicVersionFindManyArgs>(args?: Prisma.SelectSubset<T, WorkComicVersionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WorkComicVersionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a WorkComicVersion.
   * @param {WorkComicVersionCreateArgs} args - Arguments to create a WorkComicVersion.
   * @example
   * // Create one WorkComicVersion
   * const WorkComicVersion = await prisma.workComicVersion.create({
   *   data: {
   *     // ... data to create a WorkComicVersion
   *   }
   * })
   * 
   */
  create<T extends WorkComicVersionCreateArgs>(args: Prisma.SelectSubset<T, WorkComicVersionCreateArgs<ExtArgs>>): Prisma.Prisma__WorkComicVersionClient<runtime.Types.Result.GetResult<Prisma.$WorkComicVersionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many WorkComicVersions.
   * @param {WorkComicVersionCreateManyArgs} args - Arguments to create many WorkComicVersions.
   * @example
   * // Create many WorkComicVersions
   * const workComicVersion = await prisma.workComicVersion.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends WorkComicVersionCreateManyArgs>(args?: Prisma.SelectSubset<T, WorkComicVersionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many WorkComicVersions and returns the data saved in the database.
   * @param {WorkComicVersionCreateManyAndReturnArgs} args - Arguments to create many WorkComicVersions.
   * @example
   * // Create many WorkComicVersions
   * const workComicVersion = await prisma.workComicVersion.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many WorkComicVersions and only return the `id`
   * const workComicVersionWithIdOnly = await prisma.workComicVersion.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends WorkComicVersionCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, WorkComicVersionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WorkComicVersionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a WorkComicVersion.
   * @param {WorkComicVersionDeleteArgs} args - Arguments to delete one WorkComicVersion.
   * @example
   * // Delete one WorkComicVersion
   * const WorkComicVersion = await prisma.workComicVersion.delete({
   *   where: {
   *     // ... filter to delete one WorkComicVersion
   *   }
   * })
   * 
   */
  delete<T extends WorkComicVersionDeleteArgs>(args: Prisma.SelectSubset<T, WorkComicVersionDeleteArgs<ExtArgs>>): Prisma.Prisma__WorkComicVersionClient<runtime.Types.Result.GetResult<Prisma.$WorkComicVersionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one WorkComicVersion.
   * @param {WorkComicVersionUpdateArgs} args - Arguments to update one WorkComicVersion.
   * @example
   * // Update one WorkComicVersion
   * const workComicVersion = await prisma.workComicVersion.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends WorkComicVersionUpdateArgs>(args: Prisma.SelectSubset<T, WorkComicVersionUpdateArgs<ExtArgs>>): Prisma.Prisma__WorkComicVersionClient<runtime.Types.Result.GetResult<Prisma.$WorkComicVersionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more WorkComicVersions.
   * @param {WorkComicVersionDeleteManyArgs} args - Arguments to filter WorkComicVersions to delete.
   * @example
   * // Delete a few WorkComicVersions
   * const { count } = await prisma.workComicVersion.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends WorkComicVersionDeleteManyArgs>(args?: Prisma.SelectSubset<T, WorkComicVersionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more WorkComicVersions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkComicVersionUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many WorkComicVersions
   * const workComicVersion = await prisma.workComicVersion.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends WorkComicVersionUpdateManyArgs>(args: Prisma.SelectSubset<T, WorkComicVersionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more WorkComicVersions and returns the data updated in the database.
   * @param {WorkComicVersionUpdateManyAndReturnArgs} args - Arguments to update many WorkComicVersions.
   * @example
   * // Update many WorkComicVersions
   * const workComicVersion = await prisma.workComicVersion.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more WorkComicVersions and only return the `id`
   * const workComicVersionWithIdOnly = await prisma.workComicVersion.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends WorkComicVersionUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, WorkComicVersionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WorkComicVersionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one WorkComicVersion.
   * @param {WorkComicVersionUpsertArgs} args - Arguments to update or create a WorkComicVersion.
   * @example
   * // Update or create a WorkComicVersion
   * const workComicVersion = await prisma.workComicVersion.upsert({
   *   create: {
   *     // ... data to create a WorkComicVersion
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the WorkComicVersion we want to update
   *   }
   * })
   */
  upsert<T extends WorkComicVersionUpsertArgs>(args: Prisma.SelectSubset<T, WorkComicVersionUpsertArgs<ExtArgs>>): Prisma.Prisma__WorkComicVersionClient<runtime.Types.Result.GetResult<Prisma.$WorkComicVersionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of WorkComicVersions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkComicVersionCountArgs} args - Arguments to filter WorkComicVersions to count.
   * @example
   * // Count the number of WorkComicVersions
   * const count = await prisma.workComicVersion.count({
   *   where: {
   *     // ... the filter for the WorkComicVersions we want to count
   *   }
   * })
  **/
  count<T extends WorkComicVersionCountArgs>(
    args?: Prisma.Subset<T, WorkComicVersionCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], WorkComicVersionCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a WorkComicVersion.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkComicVersionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends WorkComicVersionAggregateArgs>(args: Prisma.Subset<T, WorkComicVersionAggregateArgs>): Prisma.PrismaPromise<GetWorkComicVersionAggregateType<T>>

  /**
   * Group by WorkComicVersion.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkComicVersionGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends WorkComicVersionGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: WorkComicVersionGroupByArgs['orderBy'] }
      : { orderBy?: WorkComicVersionGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, WorkComicVersionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkComicVersionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the WorkComicVersion model
 */
readonly fields: WorkComicVersionFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for WorkComicVersion.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__WorkComicVersionClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  comic<T extends Prisma.WorkComicDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.WorkComicDefaultArgs<ExtArgs>>): Prisma.Prisma__WorkComicClient<runtime.Types.Result.GetResult<Prisma.$WorkComicPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  chapters<T extends Prisma.WorkComicVersion$chaptersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.WorkComicVersion$chaptersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WorkComicChapterPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the WorkComicVersion model
 */
export interface WorkComicVersionFieldRefs {
  readonly id: Prisma.FieldRef<"WorkComicVersion", 'Int'>
  readonly comicId: Prisma.FieldRef<"WorkComicVersion", 'Int'>
  readonly versionName: Prisma.FieldRef<"WorkComicVersion", 'String'>
  readonly language: Prisma.FieldRef<"WorkComicVersion", 'String'>
  readonly translatorGroup: Prisma.FieldRef<"WorkComicVersion", 'String'>
  readonly description: Prisma.FieldRef<"WorkComicVersion", 'String'>
  readonly isRecommended: Prisma.FieldRef<"WorkComicVersion", 'Boolean'>
  readonly isPublished: Prisma.FieldRef<"WorkComicVersion", 'Boolean'>
  readonly publishAt: Prisma.FieldRef<"WorkComicVersion", 'DateTime'>
  readonly lastUpdated: Prisma.FieldRef<"WorkComicVersion", 'DateTime'>
  readonly totalViews: Prisma.FieldRef<"WorkComicVersion", 'Int'>
  readonly favoriteCount: Prisma.FieldRef<"WorkComicVersion", 'Int'>
  readonly likeCount: Prisma.FieldRef<"WorkComicVersion", 'Int'>
  readonly rating: Prisma.FieldRef<"WorkComicVersion", 'Float'>
  readonly ratingCount: Prisma.FieldRef<"WorkComicVersion", 'Int'>
  readonly readRule: Prisma.FieldRef<"WorkComicVersion", 'Int'>
  readonly purchaseAmount: Prisma.FieldRef<"WorkComicVersion", 'Int'>
  readonly copyright: Prisma.FieldRef<"WorkComicVersion", 'String'>
  readonly disclaimer: Prisma.FieldRef<"WorkComicVersion", 'String'>
  readonly remark: Prisma.FieldRef<"WorkComicVersion", 'String'>
  readonly sortOrder: Prisma.FieldRef<"WorkComicVersion", 'Int'>
  readonly deletedAt: Prisma.FieldRef<"WorkComicVersion", 'DateTime'>
  readonly createdAt: Prisma.FieldRef<"WorkComicVersion", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"WorkComicVersion", 'DateTime'>
}
    

// Custom InputTypes
/**
 * WorkComicVersion findUnique
 */
export type WorkComicVersionFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkComicVersion
   */
  select?: Prisma.WorkComicVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkComicVersion
   */
  omit?: Prisma.WorkComicVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicVersionInclude<ExtArgs> | null
  /**
   * Filter, which WorkComicVersion to fetch.
   */
  where: Prisma.WorkComicVersionWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * WorkComicVersion findUniqueOrThrow
 */
export type WorkComicVersionFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkComicVersion
   */
  select?: Prisma.WorkComicVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkComicVersion
   */
  omit?: Prisma.WorkComicVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicVersionInclude<ExtArgs> | null
  /**
   * Filter, which WorkComicVersion to fetch.
   */
  where: Prisma.WorkComicVersionWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * WorkComicVersion findFirst
 */
export type WorkComicVersionFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkComicVersion
   */
  select?: Prisma.WorkComicVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkComicVersion
   */
  omit?: Prisma.WorkComicVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicVersionInclude<ExtArgs> | null
  /**
   * Filter, which WorkComicVersion to fetch.
   */
  where?: Prisma.WorkComicVersionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WorkComicVersions to fetch.
   */
  orderBy?: Prisma.WorkComicVersionOrderByWithRelationInput | Prisma.WorkComicVersionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for WorkComicVersions.
   */
  cursor?: Prisma.WorkComicVersionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `¬±n` WorkComicVersions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WorkComicVersions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of WorkComicVersions.
   */
  distinct?: Prisma.WorkComicVersionScalarFieldEnum | Prisma.WorkComicVersionScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * WorkComicVersion findFirstOrThrow
 */
export type WorkComicVersionFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkComicVersion
   */
  select?: Prisma.WorkComicVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkComicVersion
   */
  omit?: Prisma.WorkComicVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicVersionInclude<ExtArgs> | null
  /**
   * Filter, which WorkComicVersion to fetch.
   */
  where?: Prisma.WorkComicVersionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WorkComicVersions to fetch.
   */
  orderBy?: Prisma.WorkComicVersionOrderByWithRelationInput | Prisma.WorkComicVersionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for WorkComicVersions.
   */
  cursor?: Prisma.WorkComicVersionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `¬±n` WorkComicVersions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WorkComicVersions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of WorkComicVersions.
   */
  distinct?: Prisma.WorkComicVersionScalarFieldEnum | Prisma.WorkComicVersionScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * WorkComicVersion findMany
 */
export type WorkComicVersionFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkComicVersion
   */
  select?: Prisma.WorkComicVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkComicVersion
   */
  omit?: Prisma.WorkComicVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicVersionInclude<ExtArgs> | null
  /**
   * Filter, which WorkComicVersions to fetch.
   */
  where?: Prisma.WorkComicVersionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WorkComicVersions to fetch.
   */
  orderBy?: Prisma.WorkComicVersionOrderByWithRelationInput | Prisma.WorkComicVersionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing WorkComicVersions.
   */
  cursor?: Prisma.WorkComicVersionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `¬±n` WorkComicVersions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WorkComicVersions.
   */
  skip?: number
  distinct?: Prisma.WorkComicVersionScalarFieldEnum | Prisma.WorkComicVersionScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * WorkComicVersion create
 */
export type WorkComicVersionCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkComicVersion
   */
  select?: Prisma.WorkComicVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkComicVersion
   */
  omit?: Prisma.WorkComicVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicVersionInclude<ExtArgs> | null
  /**
   * The data needed to create a WorkComicVersion.
   */
  data: Prisma.XOR<Prisma.WorkComicVersionCreateInput, Prisma.WorkComicVersionUncheckedCreateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * WorkComicVersion createMany
 */
export type WorkComicVersionCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many WorkComicVersions.
   */
  data: Prisma.WorkComicVersionCreateManyInput | Prisma.WorkComicVersionCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * WorkComicVersion createManyAndReturn
 */
export type WorkComicVersionCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkComicVersion
   */
  select?: Prisma.WorkComicVersionSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the WorkComicVersion
   */
  omit?: Prisma.WorkComicVersionOmit<ExtArgs> | null
  /**
   * The data used to create many WorkComicVersions.
   */
  data: Prisma.WorkComicVersionCreateManyInput | Prisma.WorkComicVersionCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicVersionIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * WorkComicVersion update
 */
export type WorkComicVersionUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkComicVersion
   */
  select?: Prisma.WorkComicVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkComicVersion
   */
  omit?: Prisma.WorkComicVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicVersionInclude<ExtArgs> | null
  /**
   * The data needed to update a WorkComicVersion.
   */
  data: Prisma.XOR<Prisma.WorkComicVersionUpdateInput, Prisma.WorkComicVersionUncheckedUpdateInput>
  /**
   * Choose, which WorkComicVersion to update.
   */
  where: Prisma.WorkComicVersionWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * WorkComicVersion updateMany
 */
export type WorkComicVersionUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update WorkComicVersions.
   */
  data: Prisma.XOR<Prisma.WorkComicVersionUpdateManyMutationInput, Prisma.WorkComicVersionUncheckedUpdateManyInput>
  /**
   * Filter which WorkComicVersions to update
   */
  where?: Prisma.WorkComicVersionWhereInput
  /**
   * Limit how many WorkComicVersions to update.
   */
  limit?: number
}

/**
 * WorkComicVersion updateManyAndReturn
 */
export type WorkComicVersionUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkComicVersion
   */
  select?: Prisma.WorkComicVersionSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the WorkComicVersion
   */
  omit?: Prisma.WorkComicVersionOmit<ExtArgs> | null
  /**
   * The data used to update WorkComicVersions.
   */
  data: Prisma.XOR<Prisma.WorkComicVersionUpdateManyMutationInput, Prisma.WorkComicVersionUncheckedUpdateManyInput>
  /**
   * Filter which WorkComicVersions to update
   */
  where?: Prisma.WorkComicVersionWhereInput
  /**
   * Limit how many WorkComicVersions to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicVersionIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * WorkComicVersion upsert
 */
export type WorkComicVersionUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkComicVersion
   */
  select?: Prisma.WorkComicVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkComicVersion
   */
  omit?: Prisma.WorkComicVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicVersionInclude<ExtArgs> | null
  /**
   * The filter to search for the WorkComicVersion to update in case it exists.
   */
  where: Prisma.WorkComicVersionWhereUniqueInput
  /**
   * In case the WorkComicVersion found by the `where` argument doesn't exist, create a new WorkComicVersion with this data.
   */
  create: Prisma.XOR<Prisma.WorkComicVersionCreateInput, Prisma.WorkComicVersionUncheckedCreateInput>
  /**
   * In case the WorkComicVersion was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.WorkComicVersionUpdateInput, Prisma.WorkComicVersionUncheckedUpdateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * WorkComicVersion delete
 */
export type WorkComicVersionDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkComicVersion
   */
  select?: Prisma.WorkComicVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkComicVersion
   */
  omit?: Prisma.WorkComicVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicVersionInclude<ExtArgs> | null
  /**
   * Filter which WorkComicVersion to delete.
   */
  where: Prisma.WorkComicVersionWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * WorkComicVersion deleteMany
 */
export type WorkComicVersionDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which WorkComicVersions to delete
   */
  where?: Prisma.WorkComicVersionWhereInput
  /**
   * Limit how many WorkComicVersions to delete.
   */
  limit?: number
}

/**
 * WorkComicVersion.chapters
 */
export type WorkComicVersion$chaptersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkComicChapter
   */
  select?: Prisma.WorkComicChapterSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkComicChapter
   */
  omit?: Prisma.WorkComicChapterOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicChapterInclude<ExtArgs> | null
  where?: Prisma.WorkComicChapterWhereInput
  orderBy?: Prisma.WorkComicChapterOrderByWithRelationInput | Prisma.WorkComicChapterOrderByWithRelationInput[]
  cursor?: Prisma.WorkComicChapterWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.WorkComicChapterScalarFieldEnum | Prisma.WorkComicChapterScalarFieldEnum[]
}

/**
 * WorkComicVersion without action
 */
export type WorkComicVersionDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkComicVersion
   */
  select?: Prisma.WorkComicVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkComicVersion
   */
  omit?: Prisma.WorkComicVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicVersionInclude<ExtArgs> | null
}

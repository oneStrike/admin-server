/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `SystemRequestLog` model and its related types.
 *
 * üü¢ You can import this file directly.
 */
import * as runtime from '@prisma/client/runtime/client';
import type * as $Enums from '../enums';
import type * as Prisma from '../internal/prismaNamespace';

/**
 * Model SystemRequestLog
 * Á≥ªÁªüÊìç‰ΩúÊó•ÂøóË°®
 */
export type SystemRequestLogModel =
  runtime.Types.Result.DefaultSelection<Prisma.$SystemRequestLogPayload>;

export type AggregateSystemRequestLog = {
  _count: SystemRequestLogCountAggregateOutputType | null;
  _avg: SystemRequestLogAvgAggregateOutputType | null;
  _sum: SystemRequestLogSumAggregateOutputType | null;
  _min: SystemRequestLogMinAggregateOutputType | null;
  _max: SystemRequestLogMaxAggregateOutputType | null;
};

export type SystemRequestLogAvgAggregateOutputType = {
  id: number | null;
  userId: number | null;
  responseCode: number | null;
  duration: number | null;
};

export type SystemRequestLogSumAggregateOutputType = {
  id: number | null;
  userId: number | null;
  responseCode: number | null;
  duration: number | null;
};

export type SystemRequestLogMinAggregateOutputType = {
  id: number | null;
  username: string | null;
  userId: number | null;
  ipAddress: string | null;
  ipLocation: string | null;
  responseCode: number | null;
  responseMessage: string | null;
  httpMethod: string | null;
  requestPath: string | null;
  operationDescription: string | null;
  duration: number | null;
  userAgent: string | null;
  requestParams: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type SystemRequestLogMaxAggregateOutputType = {
  id: number | null;
  username: string | null;
  userId: number | null;
  ipAddress: string | null;
  ipLocation: string | null;
  responseCode: number | null;
  responseMessage: string | null;
  httpMethod: string | null;
  requestPath: string | null;
  operationDescription: string | null;
  duration: number | null;
  userAgent: string | null;
  requestParams: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type SystemRequestLogCountAggregateOutputType = {
  id: number;
  username: number;
  userId: number;
  ipAddress: number;
  ipLocation: number;
  responseCode: number;
  responseMessage: number;
  httpMethod: number;
  requestPath: number;
  operationDescription: number;
  duration: number;
  userAgent: number;
  requestParams: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type SystemRequestLogAvgAggregateInputType = {
  id?: true;
  userId?: true;
  responseCode?: true;
  duration?: true;
};

export type SystemRequestLogSumAggregateInputType = {
  id?: true;
  userId?: true;
  responseCode?: true;
  duration?: true;
};

export type SystemRequestLogMinAggregateInputType = {
  id?: true;
  username?: true;
  userId?: true;
  ipAddress?: true;
  ipLocation?: true;
  responseCode?: true;
  responseMessage?: true;
  httpMethod?: true;
  requestPath?: true;
  operationDescription?: true;
  duration?: true;
  userAgent?: true;
  requestParams?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type SystemRequestLogMaxAggregateInputType = {
  id?: true;
  username?: true;
  userId?: true;
  ipAddress?: true;
  ipLocation?: true;
  responseCode?: true;
  responseMessage?: true;
  httpMethod?: true;
  requestPath?: true;
  operationDescription?: true;
  duration?: true;
  userAgent?: true;
  requestParams?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type SystemRequestLogCountAggregateInputType = {
  id?: true;
  username?: true;
  userId?: true;
  ipAddress?: true;
  ipLocation?: true;
  responseCode?: true;
  responseMessage?: true;
  httpMethod?: true;
  requestPath?: true;
  operationDescription?: true;
  duration?: true;
  userAgent?: true;
  requestParams?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type SystemRequestLogAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which SystemRequestLog to aggregate.
   */
  where?: Prisma.SystemRequestLogWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SystemRequestLogs to fetch.
   */
  orderBy?:
    | Prisma.SystemRequestLogOrderByWithRelationInput
    | Prisma.SystemRequestLogOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.SystemRequestLogWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `¬±n` SystemRequestLogs from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SystemRequestLogs.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned SystemRequestLogs
   **/
  _count?: true | SystemRequestLogCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: SystemRequestLogAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: SystemRequestLogSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: SystemRequestLogMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: SystemRequestLogMaxAggregateInputType;
};

export type GetSystemRequestLogAggregateType<
  T extends SystemRequestLogAggregateArgs,
> = {
  [P in keyof T & keyof AggregateSystemRequestLog]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateSystemRequestLog[P]>
    : Prisma.GetScalarType<T[P], AggregateSystemRequestLog[P]>;
};

export type SystemRequestLogGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SystemRequestLogWhereInput;
  orderBy?:
    | Prisma.SystemRequestLogOrderByWithAggregationInput
    | Prisma.SystemRequestLogOrderByWithAggregationInput[];
  by:
    | Prisma.SystemRequestLogScalarFieldEnum[]
    | Prisma.SystemRequestLogScalarFieldEnum;
  having?: Prisma.SystemRequestLogScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: SystemRequestLogCountAggregateInputType | true;
  _avg?: SystemRequestLogAvgAggregateInputType;
  _sum?: SystemRequestLogSumAggregateInputType;
  _min?: SystemRequestLogMinAggregateInputType;
  _max?: SystemRequestLogMaxAggregateInputType;
};

export type SystemRequestLogGroupByOutputType = {
  id: number;
  username: string | null;
  userId: number | null;
  ipAddress: string;
  ipLocation: string;
  responseCode: number;
  responseMessage: string;
  httpMethod: string;
  requestPath: string;
  operationDescription: string;
  duration: number;
  userAgent: string;
  requestParams: string | null;
  createdAt: Date;
  updatedAt: Date;
  _count: SystemRequestLogCountAggregateOutputType | null;
  _avg: SystemRequestLogAvgAggregateOutputType | null;
  _sum: SystemRequestLogSumAggregateOutputType | null;
  _min: SystemRequestLogMinAggregateOutputType | null;
  _max: SystemRequestLogMaxAggregateOutputType | null;
};

type GetSystemRequestLogGroupByPayload<T extends SystemRequestLogGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<SystemRequestLogGroupByOutputType, T['by']> & {
        [P in keyof T &
          keyof SystemRequestLogGroupByOutputType]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], SystemRequestLogGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], SystemRequestLogGroupByOutputType[P]>;
      }
    >
  >;

export type SystemRequestLogWhereInput = {
  AND?: Prisma.SystemRequestLogWhereInput | Prisma.SystemRequestLogWhereInput[];
  OR?: Prisma.SystemRequestLogWhereInput[];
  NOT?: Prisma.SystemRequestLogWhereInput | Prisma.SystemRequestLogWhereInput[];
  id?: Prisma.IntFilter<'SystemRequestLog'> | number;
  username?: Prisma.StringNullableFilter<'SystemRequestLog'> | string | null;
  userId?: Prisma.IntNullableFilter<'SystemRequestLog'> | number | null;
  ipAddress?: Prisma.StringFilter<'SystemRequestLog'> | string;
  ipLocation?: Prisma.StringFilter<'SystemRequestLog'> | string;
  responseCode?: Prisma.IntFilter<'SystemRequestLog'> | number;
  responseMessage?: Prisma.StringFilter<'SystemRequestLog'> | string;
  httpMethod?: Prisma.StringFilter<'SystemRequestLog'> | string;
  requestPath?: Prisma.StringFilter<'SystemRequestLog'> | string;
  operationDescription?: Prisma.StringFilter<'SystemRequestLog'> | string;
  duration?: Prisma.IntFilter<'SystemRequestLog'> | number;
  userAgent?: Prisma.StringFilter<'SystemRequestLog'> | string;
  requestParams?:
    | Prisma.StringNullableFilter<'SystemRequestLog'>
    | string
    | null;
  createdAt?: Prisma.DateTimeFilter<'SystemRequestLog'> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<'SystemRequestLog'> | Date | string;
};

export type SystemRequestLogOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  username?: Prisma.SortOrderInput | Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  ipAddress?: Prisma.SortOrder;
  ipLocation?: Prisma.SortOrder;
  responseCode?: Prisma.SortOrder;
  responseMessage?: Prisma.SortOrder;
  httpMethod?: Prisma.SortOrder;
  requestPath?: Prisma.SortOrder;
  operationDescription?: Prisma.SortOrder;
  duration?: Prisma.SortOrder;
  userAgent?: Prisma.SortOrder;
  requestParams?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type SystemRequestLogWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    AND?:
      | Prisma.SystemRequestLogWhereInput
      | Prisma.SystemRequestLogWhereInput[];
    OR?: Prisma.SystemRequestLogWhereInput[];
    NOT?:
      | Prisma.SystemRequestLogWhereInput
      | Prisma.SystemRequestLogWhereInput[];
    username?: Prisma.StringNullableFilter<'SystemRequestLog'> | string | null;
    userId?: Prisma.IntNullableFilter<'SystemRequestLog'> | number | null;
    ipAddress?: Prisma.StringFilter<'SystemRequestLog'> | string;
    ipLocation?: Prisma.StringFilter<'SystemRequestLog'> | string;
    responseCode?: Prisma.IntFilter<'SystemRequestLog'> | number;
    responseMessage?: Prisma.StringFilter<'SystemRequestLog'> | string;
    httpMethod?: Prisma.StringFilter<'SystemRequestLog'> | string;
    requestPath?: Prisma.StringFilter<'SystemRequestLog'> | string;
    operationDescription?: Prisma.StringFilter<'SystemRequestLog'> | string;
    duration?: Prisma.IntFilter<'SystemRequestLog'> | number;
    userAgent?: Prisma.StringFilter<'SystemRequestLog'> | string;
    requestParams?:
      | Prisma.StringNullableFilter<'SystemRequestLog'>
      | string
      | null;
    createdAt?: Prisma.DateTimeFilter<'SystemRequestLog'> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<'SystemRequestLog'> | Date | string;
  },
  'id'
>;

export type SystemRequestLogOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  username?: Prisma.SortOrderInput | Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  ipAddress?: Prisma.SortOrder;
  ipLocation?: Prisma.SortOrder;
  responseCode?: Prisma.SortOrder;
  responseMessage?: Prisma.SortOrder;
  httpMethod?: Prisma.SortOrder;
  requestPath?: Prisma.SortOrder;
  operationDescription?: Prisma.SortOrder;
  duration?: Prisma.SortOrder;
  userAgent?: Prisma.SortOrder;
  requestParams?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.SystemRequestLogCountOrderByAggregateInput;
  _avg?: Prisma.SystemRequestLogAvgOrderByAggregateInput;
  _max?: Prisma.SystemRequestLogMaxOrderByAggregateInput;
  _min?: Prisma.SystemRequestLogMinOrderByAggregateInput;
  _sum?: Prisma.SystemRequestLogSumOrderByAggregateInput;
};

export type SystemRequestLogScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.SystemRequestLogScalarWhereWithAggregatesInput
    | Prisma.SystemRequestLogScalarWhereWithAggregatesInput[];
  OR?: Prisma.SystemRequestLogScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.SystemRequestLogScalarWhereWithAggregatesInput
    | Prisma.SystemRequestLogScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<'SystemRequestLog'> | number;
  username?:
    | Prisma.StringNullableWithAggregatesFilter<'SystemRequestLog'>
    | string
    | null;
  userId?:
    | Prisma.IntNullableWithAggregatesFilter<'SystemRequestLog'>
    | number
    | null;
  ipAddress?: Prisma.StringWithAggregatesFilter<'SystemRequestLog'> | string;
  ipLocation?: Prisma.StringWithAggregatesFilter<'SystemRequestLog'> | string;
  responseCode?: Prisma.IntWithAggregatesFilter<'SystemRequestLog'> | number;
  responseMessage?:
    | Prisma.StringWithAggregatesFilter<'SystemRequestLog'>
    | string;
  httpMethod?: Prisma.StringWithAggregatesFilter<'SystemRequestLog'> | string;
  requestPath?: Prisma.StringWithAggregatesFilter<'SystemRequestLog'> | string;
  operationDescription?:
    | Prisma.StringWithAggregatesFilter<'SystemRequestLog'>
    | string;
  duration?: Prisma.IntWithAggregatesFilter<'SystemRequestLog'> | number;
  userAgent?: Prisma.StringWithAggregatesFilter<'SystemRequestLog'> | string;
  requestParams?:
    | Prisma.StringNullableWithAggregatesFilter<'SystemRequestLog'>
    | string
    | null;
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<'SystemRequestLog'>
    | Date
    | string;
  updatedAt?:
    | Prisma.DateTimeWithAggregatesFilter<'SystemRequestLog'>
    | Date
    | string;
};

export type SystemRequestLogCreateInput = {
  username?: string | null;
  userId?: number | null;
  ipAddress: string;
  ipLocation: string;
  responseCode: number;
  responseMessage: string;
  httpMethod: string;
  requestPath: string;
  operationDescription: string;
  duration: number;
  userAgent: string;
  requestParams?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type SystemRequestLogUncheckedCreateInput = {
  id?: number;
  username?: string | null;
  userId?: number | null;
  ipAddress: string;
  ipLocation: string;
  responseCode: number;
  responseMessage: string;
  httpMethod: string;
  requestPath: string;
  operationDescription: string;
  duration: number;
  userAgent: string;
  requestParams?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type SystemRequestLogUpdateInput = {
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  ipAddress?: Prisma.StringFieldUpdateOperationsInput | string;
  ipLocation?: Prisma.StringFieldUpdateOperationsInput | string;
  responseCode?: Prisma.IntFieldUpdateOperationsInput | number;
  responseMessage?: Prisma.StringFieldUpdateOperationsInput | string;
  httpMethod?: Prisma.StringFieldUpdateOperationsInput | string;
  requestPath?: Prisma.StringFieldUpdateOperationsInput | string;
  operationDescription?: Prisma.StringFieldUpdateOperationsInput | string;
  duration?: Prisma.IntFieldUpdateOperationsInput | number;
  userAgent?: Prisma.StringFieldUpdateOperationsInput | string;
  requestParams?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type SystemRequestLogUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  ipAddress?: Prisma.StringFieldUpdateOperationsInput | string;
  ipLocation?: Prisma.StringFieldUpdateOperationsInput | string;
  responseCode?: Prisma.IntFieldUpdateOperationsInput | number;
  responseMessage?: Prisma.StringFieldUpdateOperationsInput | string;
  httpMethod?: Prisma.StringFieldUpdateOperationsInput | string;
  requestPath?: Prisma.StringFieldUpdateOperationsInput | string;
  operationDescription?: Prisma.StringFieldUpdateOperationsInput | string;
  duration?: Prisma.IntFieldUpdateOperationsInput | number;
  userAgent?: Prisma.StringFieldUpdateOperationsInput | string;
  requestParams?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type SystemRequestLogCreateManyInput = {
  id?: number;
  username?: string | null;
  userId?: number | null;
  ipAddress: string;
  ipLocation: string;
  responseCode: number;
  responseMessage: string;
  httpMethod: string;
  requestPath: string;
  operationDescription: string;
  duration: number;
  userAgent: string;
  requestParams?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type SystemRequestLogUpdateManyMutationInput = {
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  ipAddress?: Prisma.StringFieldUpdateOperationsInput | string;
  ipLocation?: Prisma.StringFieldUpdateOperationsInput | string;
  responseCode?: Prisma.IntFieldUpdateOperationsInput | number;
  responseMessage?: Prisma.StringFieldUpdateOperationsInput | string;
  httpMethod?: Prisma.StringFieldUpdateOperationsInput | string;
  requestPath?: Prisma.StringFieldUpdateOperationsInput | string;
  operationDescription?: Prisma.StringFieldUpdateOperationsInput | string;
  duration?: Prisma.IntFieldUpdateOperationsInput | number;
  userAgent?: Prisma.StringFieldUpdateOperationsInput | string;
  requestParams?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type SystemRequestLogUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  ipAddress?: Prisma.StringFieldUpdateOperationsInput | string;
  ipLocation?: Prisma.StringFieldUpdateOperationsInput | string;
  responseCode?: Prisma.IntFieldUpdateOperationsInput | number;
  responseMessage?: Prisma.StringFieldUpdateOperationsInput | string;
  httpMethod?: Prisma.StringFieldUpdateOperationsInput | string;
  requestPath?: Prisma.StringFieldUpdateOperationsInput | string;
  operationDescription?: Prisma.StringFieldUpdateOperationsInput | string;
  duration?: Prisma.IntFieldUpdateOperationsInput | number;
  userAgent?: Prisma.StringFieldUpdateOperationsInput | string;
  requestParams?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type SystemRequestLogCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  username?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  ipAddress?: Prisma.SortOrder;
  ipLocation?: Prisma.SortOrder;
  responseCode?: Prisma.SortOrder;
  responseMessage?: Prisma.SortOrder;
  httpMethod?: Prisma.SortOrder;
  requestPath?: Prisma.SortOrder;
  operationDescription?: Prisma.SortOrder;
  duration?: Prisma.SortOrder;
  userAgent?: Prisma.SortOrder;
  requestParams?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type SystemRequestLogAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  responseCode?: Prisma.SortOrder;
  duration?: Prisma.SortOrder;
};

export type SystemRequestLogMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  username?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  ipAddress?: Prisma.SortOrder;
  ipLocation?: Prisma.SortOrder;
  responseCode?: Prisma.SortOrder;
  responseMessage?: Prisma.SortOrder;
  httpMethod?: Prisma.SortOrder;
  requestPath?: Prisma.SortOrder;
  operationDescription?: Prisma.SortOrder;
  duration?: Prisma.SortOrder;
  userAgent?: Prisma.SortOrder;
  requestParams?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type SystemRequestLogMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  username?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  ipAddress?: Prisma.SortOrder;
  ipLocation?: Prisma.SortOrder;
  responseCode?: Prisma.SortOrder;
  responseMessage?: Prisma.SortOrder;
  httpMethod?: Prisma.SortOrder;
  requestPath?: Prisma.SortOrder;
  operationDescription?: Prisma.SortOrder;
  duration?: Prisma.SortOrder;
  userAgent?: Prisma.SortOrder;
  requestParams?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type SystemRequestLogSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  responseCode?: Prisma.SortOrder;
  duration?: Prisma.SortOrder;
};

export type SystemRequestLogSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    username?: boolean;
    userId?: boolean;
    ipAddress?: boolean;
    ipLocation?: boolean;
    responseCode?: boolean;
    responseMessage?: boolean;
    httpMethod?: boolean;
    requestPath?: boolean;
    operationDescription?: boolean;
    duration?: boolean;
    userAgent?: boolean;
    requestParams?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
  },
  ExtArgs['result']['systemRequestLog']
>;

export type SystemRequestLogSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    username?: boolean;
    userId?: boolean;
    ipAddress?: boolean;
    ipLocation?: boolean;
    responseCode?: boolean;
    responseMessage?: boolean;
    httpMethod?: boolean;
    requestPath?: boolean;
    operationDescription?: boolean;
    duration?: boolean;
    userAgent?: boolean;
    requestParams?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
  },
  ExtArgs['result']['systemRequestLog']
>;

export type SystemRequestLogSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    username?: boolean;
    userId?: boolean;
    ipAddress?: boolean;
    ipLocation?: boolean;
    responseCode?: boolean;
    responseMessage?: boolean;
    httpMethod?: boolean;
    requestPath?: boolean;
    operationDescription?: boolean;
    duration?: boolean;
    userAgent?: boolean;
    requestParams?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
  },
  ExtArgs['result']['systemRequestLog']
>;

export type SystemRequestLogSelectScalar = {
  id?: boolean;
  username?: boolean;
  userId?: boolean;
  ipAddress?: boolean;
  ipLocation?: boolean;
  responseCode?: boolean;
  responseMessage?: boolean;
  httpMethod?: boolean;
  requestPath?: boolean;
  operationDescription?: boolean;
  duration?: boolean;
  userAgent?: boolean;
  requestParams?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type SystemRequestLogOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'username'
  | 'userId'
  | 'ipAddress'
  | 'ipLocation'
  | 'responseCode'
  | 'responseMessage'
  | 'httpMethod'
  | 'requestPath'
  | 'operationDescription'
  | 'duration'
  | 'userAgent'
  | 'requestParams'
  | 'createdAt'
  | 'updatedAt',
  ExtArgs['result']['systemRequestLog']
>;

export type $SystemRequestLogPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'SystemRequestLog';
  objects: {};
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      /**
       * ‰∏ªÈîÆid
       */
      id: number;
      /**
       * Áî®Êà∑Âêç
       */
      username: string | null;
      /**
       * Áî®Êà∑‰∏ªÈîÆId
       */
      userId: number | null;
      /**
       * Ë∞ÉÁî®ip
       */
      ipAddress: string;
      /**
       * ipÊò†Â∞ÑÂú∞ÂùÄ
       */
      ipLocation: string;
      /**
       * ÂìçÂ∫îÁä∂ÊÄÅÁ†Å
       */
      responseCode: number;
      /**
       * ÂìçÂ∫îÊèèËø∞
       */
      responseMessage: string;
      /**
       * ËØ∑Ê±ÇÁ±ªÂûã
       */
      httpMethod: string;
      /**
       * ËØ∑Ê±ÇÂú∞ÂùÄ
       */
      requestPath: string;
      /**
       * ËØ∑Ê±ÇÂú∞ÂùÄÊèèËø∞‰ø°ÊÅØ
       */
      operationDescription: string;
      /**
       * ËØ∑Ê±ÇËÄóÊó∂
       */
      duration: number;
      /**
       * ÊµèËßàÂô®‰ø°ÊÅØÊ†áËØÜ
       */
      userAgent: string;
      /**
       * ËØ∑Ê±ÇÂèÇÊï∞
       */
      requestParams: string | null;
      /**
       * ÂàõÂª∫Êó∂Èó¥
       */
      createdAt: Date;
      /**
       * Êõ¥Êñ∞Êó∂Èó¥
       */
      updatedAt: Date;
    },
    ExtArgs['result']['systemRequestLog']
  >;
  composites: {};
};

export type SystemRequestLogGetPayload<
  S extends boolean | null | undefined | SystemRequestLogDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$SystemRequestLogPayload, S>;

export type SystemRequestLogCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  SystemRequestLogFindManyArgs,
  'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'
> & {
  select?: SystemRequestLogCountAggregateInputType | true;
};

export interface SystemRequestLogDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['SystemRequestLog'];
    meta: { name: 'SystemRequestLog' };
  };
  /**
   * Find zero or one SystemRequestLog that matches the filter.
   * @param {SystemRequestLogFindUniqueArgs} args - Arguments to find a SystemRequestLog
   * @example
   * // Get one SystemRequestLog
   * const systemRequestLog = await prisma.systemRequestLog.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends SystemRequestLogFindUniqueArgs>(
    args: Prisma.SelectSubset<T, SystemRequestLogFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__SystemRequestLogClient<
    runtime.Types.Result.GetResult<
      Prisma.$SystemRequestLogPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one SystemRequestLog that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {SystemRequestLogFindUniqueOrThrowArgs} args - Arguments to find a SystemRequestLog
   * @example
   * // Get one SystemRequestLog
   * const systemRequestLog = await prisma.systemRequestLog.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends SystemRequestLogFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, SystemRequestLogFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__SystemRequestLogClient<
    runtime.Types.Result.GetResult<
      Prisma.$SystemRequestLogPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first SystemRequestLog that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SystemRequestLogFindFirstArgs} args - Arguments to find a SystemRequestLog
   * @example
   * // Get one SystemRequestLog
   * const systemRequestLog = await prisma.systemRequestLog.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends SystemRequestLogFindFirstArgs>(
    args?: Prisma.SelectSubset<T, SystemRequestLogFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__SystemRequestLogClient<
    runtime.Types.Result.GetResult<
      Prisma.$SystemRequestLogPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first SystemRequestLog that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SystemRequestLogFindFirstOrThrowArgs} args - Arguments to find a SystemRequestLog
   * @example
   * // Get one SystemRequestLog
   * const systemRequestLog = await prisma.systemRequestLog.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends SystemRequestLogFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, SystemRequestLogFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__SystemRequestLogClient<
    runtime.Types.Result.GetResult<
      Prisma.$SystemRequestLogPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more SystemRequestLogs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SystemRequestLogFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all SystemRequestLogs
   * const systemRequestLogs = await prisma.systemRequestLog.findMany()
   *
   * // Get first 10 SystemRequestLogs
   * const systemRequestLogs = await prisma.systemRequestLog.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const systemRequestLogWithIdOnly = await prisma.systemRequestLog.findMany({ select: { id: true } })
   *
   */
  findMany<T extends SystemRequestLogFindManyArgs>(
    args?: Prisma.SelectSubset<T, SystemRequestLogFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$SystemRequestLogPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >;

  /**
   * Create a SystemRequestLog.
   * @param {SystemRequestLogCreateArgs} args - Arguments to create a SystemRequestLog.
   * @example
   * // Create one SystemRequestLog
   * const SystemRequestLog = await prisma.systemRequestLog.create({
   *   data: {
   *     // ... data to create a SystemRequestLog
   *   }
   * })
   *
   */
  create<T extends SystemRequestLogCreateArgs>(
    args: Prisma.SelectSubset<T, SystemRequestLogCreateArgs<ExtArgs>>
  ): Prisma.Prisma__SystemRequestLogClient<
    runtime.Types.Result.GetResult<
      Prisma.$SystemRequestLogPayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many SystemRequestLogs.
   * @param {SystemRequestLogCreateManyArgs} args - Arguments to create many SystemRequestLogs.
   * @example
   * // Create many SystemRequestLogs
   * const systemRequestLog = await prisma.systemRequestLog.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends SystemRequestLogCreateManyArgs>(
    args?: Prisma.SelectSubset<T, SystemRequestLogCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many SystemRequestLogs and returns the data saved in the database.
   * @param {SystemRequestLogCreateManyAndReturnArgs} args - Arguments to create many SystemRequestLogs.
   * @example
   * // Create many SystemRequestLogs
   * const systemRequestLog = await prisma.systemRequestLog.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many SystemRequestLogs and only return the `id`
   * const systemRequestLogWithIdOnly = await prisma.systemRequestLog.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends SystemRequestLogCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<
      T,
      SystemRequestLogCreateManyAndReturnArgs<ExtArgs>
    >
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$SystemRequestLogPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a SystemRequestLog.
   * @param {SystemRequestLogDeleteArgs} args - Arguments to delete one SystemRequestLog.
   * @example
   * // Delete one SystemRequestLog
   * const SystemRequestLog = await prisma.systemRequestLog.delete({
   *   where: {
   *     // ... filter to delete one SystemRequestLog
   *   }
   * })
   *
   */
  delete<T extends SystemRequestLogDeleteArgs>(
    args: Prisma.SelectSubset<T, SystemRequestLogDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__SystemRequestLogClient<
    runtime.Types.Result.GetResult<
      Prisma.$SystemRequestLogPayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one SystemRequestLog.
   * @param {SystemRequestLogUpdateArgs} args - Arguments to update one SystemRequestLog.
   * @example
   * // Update one SystemRequestLog
   * const systemRequestLog = await prisma.systemRequestLog.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends SystemRequestLogUpdateArgs>(
    args: Prisma.SelectSubset<T, SystemRequestLogUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__SystemRequestLogClient<
    runtime.Types.Result.GetResult<
      Prisma.$SystemRequestLogPayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more SystemRequestLogs.
   * @param {SystemRequestLogDeleteManyArgs} args - Arguments to filter SystemRequestLogs to delete.
   * @example
   * // Delete a few SystemRequestLogs
   * const { count } = await prisma.systemRequestLog.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends SystemRequestLogDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, SystemRequestLogDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more SystemRequestLogs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SystemRequestLogUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many SystemRequestLogs
   * const systemRequestLog = await prisma.systemRequestLog.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends SystemRequestLogUpdateManyArgs>(
    args: Prisma.SelectSubset<T, SystemRequestLogUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more SystemRequestLogs and returns the data updated in the database.
   * @param {SystemRequestLogUpdateManyAndReturnArgs} args - Arguments to update many SystemRequestLogs.
   * @example
   * // Update many SystemRequestLogs
   * const systemRequestLog = await prisma.systemRequestLog.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more SystemRequestLogs and only return the `id`
   * const systemRequestLogWithIdOnly = await prisma.systemRequestLog.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends SystemRequestLogUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<
      T,
      SystemRequestLogUpdateManyAndReturnArgs<ExtArgs>
    >
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$SystemRequestLogPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one SystemRequestLog.
   * @param {SystemRequestLogUpsertArgs} args - Arguments to update or create a SystemRequestLog.
   * @example
   * // Update or create a SystemRequestLog
   * const systemRequestLog = await prisma.systemRequestLog.upsert({
   *   create: {
   *     // ... data to create a SystemRequestLog
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the SystemRequestLog we want to update
   *   }
   * })
   */
  upsert<T extends SystemRequestLogUpsertArgs>(
    args: Prisma.SelectSubset<T, SystemRequestLogUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__SystemRequestLogClient<
    runtime.Types.Result.GetResult<
      Prisma.$SystemRequestLogPayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of SystemRequestLogs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SystemRequestLogCountArgs} args - Arguments to filter SystemRequestLogs to count.
   * @example
   * // Count the number of SystemRequestLogs
   * const count = await prisma.systemRequestLog.count({
   *   where: {
   *     // ... the filter for the SystemRequestLogs we want to count
   *   }
   * })
   **/
  count<T extends SystemRequestLogCountArgs>(
    args?: Prisma.Subset<T, SystemRequestLogCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<
            T['select'],
            SystemRequestLogCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a SystemRequestLog.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SystemRequestLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends SystemRequestLogAggregateArgs>(
    args: Prisma.Subset<T, SystemRequestLogAggregateArgs>
  ): Prisma.PrismaPromise<GetSystemRequestLogAggregateType<T>>;

  /**
   * Group by SystemRequestLog.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SystemRequestLogGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends SystemRequestLogGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: SystemRequestLogGroupByArgs['orderBy'] }
      : { orderBy?: SystemRequestLogGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<
      T,
      SystemRequestLogGroupByArgs,
      OrderByArg
    > &
      InputErrors
  ): {} extends InputErrors
    ? GetSystemRequestLogGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the SystemRequestLog model
   */
  readonly fields: SystemRequestLogFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for SystemRequestLog.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__SystemRequestLogClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise';
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the SystemRequestLog model
 */
export interface SystemRequestLogFieldRefs {
  readonly id: Prisma.FieldRef<'SystemRequestLog', 'Int'>;
  readonly username: Prisma.FieldRef<'SystemRequestLog', 'String'>;
  readonly userId: Prisma.FieldRef<'SystemRequestLog', 'Int'>;
  readonly ipAddress: Prisma.FieldRef<'SystemRequestLog', 'String'>;
  readonly ipLocation: Prisma.FieldRef<'SystemRequestLog', 'String'>;
  readonly responseCode: Prisma.FieldRef<'SystemRequestLog', 'Int'>;
  readonly responseMessage: Prisma.FieldRef<'SystemRequestLog', 'String'>;
  readonly httpMethod: Prisma.FieldRef<'SystemRequestLog', 'String'>;
  readonly requestPath: Prisma.FieldRef<'SystemRequestLog', 'String'>;
  readonly operationDescription: Prisma.FieldRef<'SystemRequestLog', 'String'>;
  readonly duration: Prisma.FieldRef<'SystemRequestLog', 'Int'>;
  readonly userAgent: Prisma.FieldRef<'SystemRequestLog', 'String'>;
  readonly requestParams: Prisma.FieldRef<'SystemRequestLog', 'String'>;
  readonly createdAt: Prisma.FieldRef<'SystemRequestLog', 'DateTime'>;
  readonly updatedAt: Prisma.FieldRef<'SystemRequestLog', 'DateTime'>;
}

// Custom InputTypes
/**
 * SystemRequestLog findUnique
 */
export type SystemRequestLogFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SystemRequestLog
   */
  select?: Prisma.SystemRequestLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SystemRequestLog
   */
  omit?: Prisma.SystemRequestLogOmit<ExtArgs> | null;
  /**
   * Filter, which SystemRequestLog to fetch.
   */
  where: Prisma.SystemRequestLogWhereUniqueInput;
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * SystemRequestLog findUniqueOrThrow
 */
export type SystemRequestLogFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SystemRequestLog
   */
  select?: Prisma.SystemRequestLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SystemRequestLog
   */
  omit?: Prisma.SystemRequestLogOmit<ExtArgs> | null;
  /**
   * Filter, which SystemRequestLog to fetch.
   */
  where: Prisma.SystemRequestLogWhereUniqueInput;
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * SystemRequestLog findFirst
 */
export type SystemRequestLogFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SystemRequestLog
   */
  select?: Prisma.SystemRequestLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SystemRequestLog
   */
  omit?: Prisma.SystemRequestLogOmit<ExtArgs> | null;
  /**
   * Filter, which SystemRequestLog to fetch.
   */
  where?: Prisma.SystemRequestLogWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SystemRequestLogs to fetch.
   */
  orderBy?:
    | Prisma.SystemRequestLogOrderByWithRelationInput
    | Prisma.SystemRequestLogOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for SystemRequestLogs.
   */
  cursor?: Prisma.SystemRequestLogWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `¬±n` SystemRequestLogs from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SystemRequestLogs.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of SystemRequestLogs.
   */
  distinct?:
    | Prisma.SystemRequestLogScalarFieldEnum
    | Prisma.SystemRequestLogScalarFieldEnum[];
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * SystemRequestLog findFirstOrThrow
 */
export type SystemRequestLogFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SystemRequestLog
   */
  select?: Prisma.SystemRequestLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SystemRequestLog
   */
  omit?: Prisma.SystemRequestLogOmit<ExtArgs> | null;
  /**
   * Filter, which SystemRequestLog to fetch.
   */
  where?: Prisma.SystemRequestLogWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SystemRequestLogs to fetch.
   */
  orderBy?:
    | Prisma.SystemRequestLogOrderByWithRelationInput
    | Prisma.SystemRequestLogOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for SystemRequestLogs.
   */
  cursor?: Prisma.SystemRequestLogWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `¬±n` SystemRequestLogs from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SystemRequestLogs.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of SystemRequestLogs.
   */
  distinct?:
    | Prisma.SystemRequestLogScalarFieldEnum
    | Prisma.SystemRequestLogScalarFieldEnum[];
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * SystemRequestLog findMany
 */
export type SystemRequestLogFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SystemRequestLog
   */
  select?: Prisma.SystemRequestLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SystemRequestLog
   */
  omit?: Prisma.SystemRequestLogOmit<ExtArgs> | null;
  /**
   * Filter, which SystemRequestLogs to fetch.
   */
  where?: Prisma.SystemRequestLogWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SystemRequestLogs to fetch.
   */
  orderBy?:
    | Prisma.SystemRequestLogOrderByWithRelationInput
    | Prisma.SystemRequestLogOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing SystemRequestLogs.
   */
  cursor?: Prisma.SystemRequestLogWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `¬±n` SystemRequestLogs from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SystemRequestLogs.
   */
  skip?: number;
  distinct?:
    | Prisma.SystemRequestLogScalarFieldEnum
    | Prisma.SystemRequestLogScalarFieldEnum[];
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * SystemRequestLog create
 */
export type SystemRequestLogCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SystemRequestLog
   */
  select?: Prisma.SystemRequestLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SystemRequestLog
   */
  omit?: Prisma.SystemRequestLogOmit<ExtArgs> | null;
  /**
   * The data needed to create a SystemRequestLog.
   */
  data: Prisma.XOR<
    Prisma.SystemRequestLogCreateInput,
    Prisma.SystemRequestLogUncheckedCreateInput
  >;
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * SystemRequestLog createMany
 */
export type SystemRequestLogCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many SystemRequestLogs.
   */
  data:
    | Prisma.SystemRequestLogCreateManyInput
    | Prisma.SystemRequestLogCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * SystemRequestLog createManyAndReturn
 */
export type SystemRequestLogCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SystemRequestLog
   */
  select?: Prisma.SystemRequestLogSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the SystemRequestLog
   */
  omit?: Prisma.SystemRequestLogOmit<ExtArgs> | null;
  /**
   * The data used to create many SystemRequestLogs.
   */
  data:
    | Prisma.SystemRequestLogCreateManyInput
    | Prisma.SystemRequestLogCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * SystemRequestLog update
 */
export type SystemRequestLogUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SystemRequestLog
   */
  select?: Prisma.SystemRequestLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SystemRequestLog
   */
  omit?: Prisma.SystemRequestLogOmit<ExtArgs> | null;
  /**
   * The data needed to update a SystemRequestLog.
   */
  data: Prisma.XOR<
    Prisma.SystemRequestLogUpdateInput,
    Prisma.SystemRequestLogUncheckedUpdateInput
  >;
  /**
   * Choose, which SystemRequestLog to update.
   */
  where: Prisma.SystemRequestLogWhereUniqueInput;
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * SystemRequestLog updateMany
 */
export type SystemRequestLogUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update SystemRequestLogs.
   */
  data: Prisma.XOR<
    Prisma.SystemRequestLogUpdateManyMutationInput,
    Prisma.SystemRequestLogUncheckedUpdateManyInput
  >;
  /**
   * Filter which SystemRequestLogs to update
   */
  where?: Prisma.SystemRequestLogWhereInput;
  /**
   * Limit how many SystemRequestLogs to update.
   */
  limit?: number;
};

/**
 * SystemRequestLog updateManyAndReturn
 */
export type SystemRequestLogUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SystemRequestLog
   */
  select?: Prisma.SystemRequestLogSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the SystemRequestLog
   */
  omit?: Prisma.SystemRequestLogOmit<ExtArgs> | null;
  /**
   * The data used to update SystemRequestLogs.
   */
  data: Prisma.XOR<
    Prisma.SystemRequestLogUpdateManyMutationInput,
    Prisma.SystemRequestLogUncheckedUpdateManyInput
  >;
  /**
   * Filter which SystemRequestLogs to update
   */
  where?: Prisma.SystemRequestLogWhereInput;
  /**
   * Limit how many SystemRequestLogs to update.
   */
  limit?: number;
};

/**
 * SystemRequestLog upsert
 */
export type SystemRequestLogUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SystemRequestLog
   */
  select?: Prisma.SystemRequestLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SystemRequestLog
   */
  omit?: Prisma.SystemRequestLogOmit<ExtArgs> | null;
  /**
   * The filter to search for the SystemRequestLog to update in case it exists.
   */
  where: Prisma.SystemRequestLogWhereUniqueInput;
  /**
   * In case the SystemRequestLog found by the `where` argument doesn't exist, create a new SystemRequestLog with this data.
   */
  create: Prisma.XOR<
    Prisma.SystemRequestLogCreateInput,
    Prisma.SystemRequestLogUncheckedCreateInput
  >;
  /**
   * In case the SystemRequestLog was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.SystemRequestLogUpdateInput,
    Prisma.SystemRequestLogUncheckedUpdateInput
  >;
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * SystemRequestLog delete
 */
export type SystemRequestLogDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SystemRequestLog
   */
  select?: Prisma.SystemRequestLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SystemRequestLog
   */
  omit?: Prisma.SystemRequestLogOmit<ExtArgs> | null;
  /**
   * Filter which SystemRequestLog to delete.
   */
  where: Prisma.SystemRequestLogWhereUniqueInput;
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * SystemRequestLog deleteMany
 */
export type SystemRequestLogDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which SystemRequestLogs to delete
   */
  where?: Prisma.SystemRequestLogWhereInput;
  /**
   * Limit how many SystemRequestLogs to delete.
   */
  limit?: number;
};

/**
 * SystemRequestLog without action
 */
export type SystemRequestLogDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SystemRequestLog
   */
  select?: Prisma.SystemRequestLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SystemRequestLog
   */
  omit?: Prisma.SystemRequestLogOmit<ExtArgs> | null;
};

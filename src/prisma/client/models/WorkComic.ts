/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `WorkComic` model and its related types.
 *
 * 🟢 You can import this file directly.
 */
import * as runtime from '@prisma/client/runtime/client';
import type * as $Enums from '../enums';
import type * as Prisma from '../internal/prismaNamespace';

/**
 * Model WorkComic
 *
 */
export type WorkComicModel =
  runtime.Types.Result.DefaultSelection<Prisma.$WorkComicPayload>;

export type AggregateWorkComic = {
  _count: WorkComicCountAggregateOutputType | null;
  _avg: WorkComicAvgAggregateOutputType | null;
  _sum: WorkComicSumAggregateOutputType | null;
  _min: WorkComicMinAggregateOutputType | null;
  _max: WorkComicMaxAggregateOutputType | null;
};

export type WorkComicAvgAggregateOutputType = {
  id: number | null;
  popularity: number | null;
  popularityWeight: number | null;
  serialStatus: number | null;
  totalChapters: number | null;
  totalViews: number | null;
  favoriteCount: number | null;
  commentCount: number | null;
  likeCount: number | null;
  rating: number | null;
  ratingCount: number | null;
  readRule: number | null;
  purchaseAmount: number | null;
  recommendWeight: number | null;
};

export type WorkComicSumAggregateOutputType = {
  id: number | null;
  popularity: number | null;
  popularityWeight: number | null;
  serialStatus: number | null;
  totalChapters: number | null;
  totalViews: number | null;
  favoriteCount: number | null;
  commentCount: number | null;
  likeCount: number | null;
  rating: number | null;
  ratingCount: number | null;
  readRule: number | null;
  purchaseAmount: number | null;
  recommendWeight: number | null;
};

export type WorkComicMinAggregateOutputType = {
  id: number | null;
  name: string | null;
  alias: string | null;
  cover: string | null;
  popularity: number | null;
  popularityWeight: number | null;
  language: string | null;
  region: string | null;
  ageRating: string | null;
  isPublished: boolean | null;
  publishAt: Date | null;
  lastUpdated: Date | null;
  description: string | null;
  publisher: string | null;
  originalSource: string | null;
  serialStatus: number | null;
  totalChapters: number | null;
  totalViews: number | null;
  favoriteCount: number | null;
  commentCount: number | null;
  likeCount: number | null;
  rating: number | null;
  ratingCount: number | null;
  canDownload: boolean | null;
  canComment: boolean | null;
  readRule: number | null;
  purchaseAmount: number | null;
  seoTitle: string | null;
  seoDescription: string | null;
  seoKeywords: string | null;
  recommendWeight: number | null;
  isRecommended: boolean | null;
  isHot: boolean | null;
  isNew: boolean | null;
  copyright: string | null;
  disclaimer: string | null;
  remark: string | null;
  deletedAt: Date | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type WorkComicMaxAggregateOutputType = {
  id: number | null;
  name: string | null;
  alias: string | null;
  cover: string | null;
  popularity: number | null;
  popularityWeight: number | null;
  language: string | null;
  region: string | null;
  ageRating: string | null;
  isPublished: boolean | null;
  publishAt: Date | null;
  lastUpdated: Date | null;
  description: string | null;
  publisher: string | null;
  originalSource: string | null;
  serialStatus: number | null;
  totalChapters: number | null;
  totalViews: number | null;
  favoriteCount: number | null;
  commentCount: number | null;
  likeCount: number | null;
  rating: number | null;
  ratingCount: number | null;
  canDownload: boolean | null;
  canComment: boolean | null;
  readRule: number | null;
  purchaseAmount: number | null;
  seoTitle: string | null;
  seoDescription: string | null;
  seoKeywords: string | null;
  recommendWeight: number | null;
  isRecommended: boolean | null;
  isHot: boolean | null;
  isNew: boolean | null;
  copyright: string | null;
  disclaimer: string | null;
  remark: string | null;
  deletedAt: Date | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type WorkComicCountAggregateOutputType = {
  id: number;
  name: number;
  alias: number;
  cover: number;
  popularity: number;
  popularityWeight: number;
  language: number;
  region: number;
  ageRating: number;
  isPublished: number;
  publishAt: number;
  lastUpdated: number;
  description: number;
  publisher: number;
  originalSource: number;
  serialStatus: number;
  totalChapters: number;
  totalViews: number;
  favoriteCount: number;
  commentCount: number;
  likeCount: number;
  rating: number;
  ratingCount: number;
  canDownload: number;
  canComment: number;
  readRule: number;
  purchaseAmount: number;
  seoTitle: number;
  seoDescription: number;
  seoKeywords: number;
  recommendWeight: number;
  isRecommended: number;
  isHot: number;
  isNew: number;
  copyright: number;
  disclaimer: number;
  remark: number;
  deletedAt: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type WorkComicAvgAggregateInputType = {
  id?: true;
  popularity?: true;
  popularityWeight?: true;
  serialStatus?: true;
  totalChapters?: true;
  totalViews?: true;
  favoriteCount?: true;
  commentCount?: true;
  likeCount?: true;
  rating?: true;
  ratingCount?: true;
  readRule?: true;
  purchaseAmount?: true;
  recommendWeight?: true;
};

export type WorkComicSumAggregateInputType = {
  id?: true;
  popularity?: true;
  popularityWeight?: true;
  serialStatus?: true;
  totalChapters?: true;
  totalViews?: true;
  favoriteCount?: true;
  commentCount?: true;
  likeCount?: true;
  rating?: true;
  ratingCount?: true;
  readRule?: true;
  purchaseAmount?: true;
  recommendWeight?: true;
};

export type WorkComicMinAggregateInputType = {
  id?: true;
  name?: true;
  alias?: true;
  cover?: true;
  popularity?: true;
  popularityWeight?: true;
  language?: true;
  region?: true;
  ageRating?: true;
  isPublished?: true;
  publishAt?: true;
  lastUpdated?: true;
  description?: true;
  publisher?: true;
  originalSource?: true;
  serialStatus?: true;
  totalChapters?: true;
  totalViews?: true;
  favoriteCount?: true;
  commentCount?: true;
  likeCount?: true;
  rating?: true;
  ratingCount?: true;
  canDownload?: true;
  canComment?: true;
  readRule?: true;
  purchaseAmount?: true;
  seoTitle?: true;
  seoDescription?: true;
  seoKeywords?: true;
  recommendWeight?: true;
  isRecommended?: true;
  isHot?: true;
  isNew?: true;
  copyright?: true;
  disclaimer?: true;
  remark?: true;
  deletedAt?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type WorkComicMaxAggregateInputType = {
  id?: true;
  name?: true;
  alias?: true;
  cover?: true;
  popularity?: true;
  popularityWeight?: true;
  language?: true;
  region?: true;
  ageRating?: true;
  isPublished?: true;
  publishAt?: true;
  lastUpdated?: true;
  description?: true;
  publisher?: true;
  originalSource?: true;
  serialStatus?: true;
  totalChapters?: true;
  totalViews?: true;
  favoriteCount?: true;
  commentCount?: true;
  likeCount?: true;
  rating?: true;
  ratingCount?: true;
  canDownload?: true;
  canComment?: true;
  readRule?: true;
  purchaseAmount?: true;
  seoTitle?: true;
  seoDescription?: true;
  seoKeywords?: true;
  recommendWeight?: true;
  isRecommended?: true;
  isHot?: true;
  isNew?: true;
  copyright?: true;
  disclaimer?: true;
  remark?: true;
  deletedAt?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type WorkComicCountAggregateInputType = {
  id?: true;
  name?: true;
  alias?: true;
  cover?: true;
  popularity?: true;
  popularityWeight?: true;
  language?: true;
  region?: true;
  ageRating?: true;
  isPublished?: true;
  publishAt?: true;
  lastUpdated?: true;
  description?: true;
  publisher?: true;
  originalSource?: true;
  serialStatus?: true;
  totalChapters?: true;
  totalViews?: true;
  favoriteCount?: true;
  commentCount?: true;
  likeCount?: true;
  rating?: true;
  ratingCount?: true;
  canDownload?: true;
  canComment?: true;
  readRule?: true;
  purchaseAmount?: true;
  seoTitle?: true;
  seoDescription?: true;
  seoKeywords?: true;
  recommendWeight?: true;
  isRecommended?: true;
  isHot?: true;
  isNew?: true;
  copyright?: true;
  disclaimer?: true;
  remark?: true;
  deletedAt?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type WorkComicAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which WorkComic to aggregate.
   */
  where?: Prisma.WorkComicWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkComics to fetch.
   */
  orderBy?:
    | Prisma.WorkComicOrderByWithRelationInput
    | Prisma.WorkComicOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.WorkComicWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `±n` WorkComics from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkComics.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned WorkComics
   **/
  _count?: true | WorkComicCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: WorkComicAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: WorkComicSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: WorkComicMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: WorkComicMaxAggregateInputType;
};

export type GetWorkComicAggregateType<T extends WorkComicAggregateArgs> = {
  [P in keyof T & keyof AggregateWorkComic]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWorkComic[P]>
    : Prisma.GetScalarType<T[P], AggregateWorkComic[P]>;
};

export type WorkComicGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.WorkComicWhereInput;
  orderBy?:
    | Prisma.WorkComicOrderByWithAggregationInput
    | Prisma.WorkComicOrderByWithAggregationInput[];
  by: Prisma.WorkComicScalarFieldEnum[] | Prisma.WorkComicScalarFieldEnum;
  having?: Prisma.WorkComicScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: WorkComicCountAggregateInputType | true;
  _avg?: WorkComicAvgAggregateInputType;
  _sum?: WorkComicSumAggregateInputType;
  _min?: WorkComicMinAggregateInputType;
  _max?: WorkComicMaxAggregateInputType;
};

export type WorkComicGroupByOutputType = {
  id: number;
  name: string;
  alias: string | null;
  cover: string;
  popularity: number;
  popularityWeight: number;
  language: string;
  region: string;
  ageRating: string | null;
  isPublished: boolean;
  publishAt: Date | null;
  lastUpdated: Date | null;
  description: string;
  publisher: string | null;
  originalSource: string | null;
  serialStatus: number;
  totalChapters: number;
  totalViews: number;
  favoriteCount: number;
  commentCount: number;
  likeCount: number;
  rating: number | null;
  ratingCount: number;
  canDownload: boolean;
  canComment: boolean;
  readRule: number;
  purchaseAmount: number | null;
  seoTitle: string | null;
  seoDescription: string | null;
  seoKeywords: string | null;
  recommendWeight: number;
  isRecommended: boolean;
  isHot: boolean;
  isNew: boolean;
  copyright: string | null;
  disclaimer: string | null;
  remark: string | null;
  deletedAt: Date | null;
  createdAt: Date;
  updatedAt: Date;
  _count: WorkComicCountAggregateOutputType | null;
  _avg: WorkComicAvgAggregateOutputType | null;
  _sum: WorkComicSumAggregateOutputType | null;
  _min: WorkComicMinAggregateOutputType | null;
  _max: WorkComicMaxAggregateOutputType | null;
};

type GetWorkComicGroupByPayload<T extends WorkComicGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<WorkComicGroupByOutputType, T['by']> & {
        [P in keyof T & keyof WorkComicGroupByOutputType]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], WorkComicGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], WorkComicGroupByOutputType[P]>;
      }
    >
  >;

export type WorkComicWhereInput = {
  AND?: Prisma.WorkComicWhereInput | Prisma.WorkComicWhereInput[];
  OR?: Prisma.WorkComicWhereInput[];
  NOT?: Prisma.WorkComicWhereInput | Prisma.WorkComicWhereInput[];
  id?: Prisma.IntFilter<'WorkComic'> | number;
  name?: Prisma.StringFilter<'WorkComic'> | string;
  alias?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
  cover?: Prisma.StringFilter<'WorkComic'> | string;
  popularity?: Prisma.IntFilter<'WorkComic'> | number;
  popularityWeight?: Prisma.IntFilter<'WorkComic'> | number;
  language?: Prisma.StringFilter<'WorkComic'> | string;
  region?: Prisma.StringFilter<'WorkComic'> | string;
  ageRating?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
  isPublished?: Prisma.BoolFilter<'WorkComic'> | boolean;
  publishAt?: Prisma.DateTimeNullableFilter<'WorkComic'> | Date | string | null;
  lastUpdated?:
    | Prisma.DateTimeNullableFilter<'WorkComic'>
    | Date
    | string
    | null;
  description?: Prisma.StringFilter<'WorkComic'> | string;
  publisher?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
  originalSource?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
  serialStatus?: Prisma.IntFilter<'WorkComic'> | number;
  totalChapters?: Prisma.IntFilter<'WorkComic'> | number;
  totalViews?: Prisma.IntFilter<'WorkComic'> | number;
  favoriteCount?: Prisma.IntFilter<'WorkComic'> | number;
  commentCount?: Prisma.IntFilter<'WorkComic'> | number;
  likeCount?: Prisma.IntFilter<'WorkComic'> | number;
  rating?: Prisma.FloatNullableFilter<'WorkComic'> | number | null;
  ratingCount?: Prisma.IntFilter<'WorkComic'> | number;
  canDownload?: Prisma.BoolFilter<'WorkComic'> | boolean;
  canComment?: Prisma.BoolFilter<'WorkComic'> | boolean;
  readRule?: Prisma.IntFilter<'WorkComic'> | number;
  purchaseAmount?: Prisma.IntNullableFilter<'WorkComic'> | number | null;
  seoTitle?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
  seoDescription?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
  seoKeywords?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
  recommendWeight?: Prisma.FloatFilter<'WorkComic'> | number;
  isRecommended?: Prisma.BoolFilter<'WorkComic'> | boolean;
  isHot?: Prisma.BoolFilter<'WorkComic'> | boolean;
  isNew?: Prisma.BoolFilter<'WorkComic'> | boolean;
  copyright?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
  disclaimer?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
  remark?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
  deletedAt?: Prisma.DateTimeNullableFilter<'WorkComic'> | Date | string | null;
  createdAt?: Prisma.DateTimeFilter<'WorkComic'> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<'WorkComic'> | Date | string;
  comicAuthors?: Prisma.WorkComicAuthorListRelationFilter;
  relatedChapters?: Prisma.WorkComicChapterListRelationFilter;
  comicCategories?: Prisma.WorkComicCategoryListRelationFilter;
  comicVersions?: Prisma.WorkComicVersionListRelationFilter;
};

export type WorkComicOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  alias?: Prisma.SortOrderInput | Prisma.SortOrder;
  cover?: Prisma.SortOrder;
  popularity?: Prisma.SortOrder;
  popularityWeight?: Prisma.SortOrder;
  language?: Prisma.SortOrder;
  region?: Prisma.SortOrder;
  ageRating?: Prisma.SortOrderInput | Prisma.SortOrder;
  isPublished?: Prisma.SortOrder;
  publishAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  lastUpdated?: Prisma.SortOrderInput | Prisma.SortOrder;
  description?: Prisma.SortOrder;
  publisher?: Prisma.SortOrderInput | Prisma.SortOrder;
  originalSource?: Prisma.SortOrderInput | Prisma.SortOrder;
  serialStatus?: Prisma.SortOrder;
  totalChapters?: Prisma.SortOrder;
  totalViews?: Prisma.SortOrder;
  favoriteCount?: Prisma.SortOrder;
  commentCount?: Prisma.SortOrder;
  likeCount?: Prisma.SortOrder;
  rating?: Prisma.SortOrderInput | Prisma.SortOrder;
  ratingCount?: Prisma.SortOrder;
  canDownload?: Prisma.SortOrder;
  canComment?: Prisma.SortOrder;
  readRule?: Prisma.SortOrder;
  purchaseAmount?: Prisma.SortOrderInput | Prisma.SortOrder;
  seoTitle?: Prisma.SortOrderInput | Prisma.SortOrder;
  seoDescription?: Prisma.SortOrderInput | Prisma.SortOrder;
  seoKeywords?: Prisma.SortOrderInput | Prisma.SortOrder;
  recommendWeight?: Prisma.SortOrder;
  isRecommended?: Prisma.SortOrder;
  isHot?: Prisma.SortOrder;
  isNew?: Prisma.SortOrder;
  copyright?: Prisma.SortOrderInput | Prisma.SortOrder;
  disclaimer?: Prisma.SortOrderInput | Prisma.SortOrder;
  remark?: Prisma.SortOrderInput | Prisma.SortOrder;
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  comicAuthors?: Prisma.WorkComicAuthorOrderByRelationAggregateInput;
  relatedChapters?: Prisma.WorkComicChapterOrderByRelationAggregateInput;
  comicCategories?: Prisma.WorkComicCategoryOrderByRelationAggregateInput;
  comicVersions?: Prisma.WorkComicVersionOrderByRelationAggregateInput;
};

export type WorkComicWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    AND?: Prisma.WorkComicWhereInput | Prisma.WorkComicWhereInput[];
    OR?: Prisma.WorkComicWhereInput[];
    NOT?: Prisma.WorkComicWhereInput | Prisma.WorkComicWhereInput[];
    name?: Prisma.StringFilter<'WorkComic'> | string;
    alias?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
    cover?: Prisma.StringFilter<'WorkComic'> | string;
    popularity?: Prisma.IntFilter<'WorkComic'> | number;
    popularityWeight?: Prisma.IntFilter<'WorkComic'> | number;
    language?: Prisma.StringFilter<'WorkComic'> | string;
    region?: Prisma.StringFilter<'WorkComic'> | string;
    ageRating?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
    isPublished?: Prisma.BoolFilter<'WorkComic'> | boolean;
    publishAt?:
      | Prisma.DateTimeNullableFilter<'WorkComic'>
      | Date
      | string
      | null;
    lastUpdated?:
      | Prisma.DateTimeNullableFilter<'WorkComic'>
      | Date
      | string
      | null;
    description?: Prisma.StringFilter<'WorkComic'> | string;
    publisher?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
    originalSource?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
    serialStatus?: Prisma.IntFilter<'WorkComic'> | number;
    totalChapters?: Prisma.IntFilter<'WorkComic'> | number;
    totalViews?: Prisma.IntFilter<'WorkComic'> | number;
    favoriteCount?: Prisma.IntFilter<'WorkComic'> | number;
    commentCount?: Prisma.IntFilter<'WorkComic'> | number;
    likeCount?: Prisma.IntFilter<'WorkComic'> | number;
    rating?: Prisma.FloatNullableFilter<'WorkComic'> | number | null;
    ratingCount?: Prisma.IntFilter<'WorkComic'> | number;
    canDownload?: Prisma.BoolFilter<'WorkComic'> | boolean;
    canComment?: Prisma.BoolFilter<'WorkComic'> | boolean;
    readRule?: Prisma.IntFilter<'WorkComic'> | number;
    purchaseAmount?: Prisma.IntNullableFilter<'WorkComic'> | number | null;
    seoTitle?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
    seoDescription?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
    seoKeywords?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
    recommendWeight?: Prisma.FloatFilter<'WorkComic'> | number;
    isRecommended?: Prisma.BoolFilter<'WorkComic'> | boolean;
    isHot?: Prisma.BoolFilter<'WorkComic'> | boolean;
    isNew?: Prisma.BoolFilter<'WorkComic'> | boolean;
    copyright?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
    disclaimer?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
    remark?: Prisma.StringNullableFilter<'WorkComic'> | string | null;
    deletedAt?:
      | Prisma.DateTimeNullableFilter<'WorkComic'>
      | Date
      | string
      | null;
    createdAt?: Prisma.DateTimeFilter<'WorkComic'> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<'WorkComic'> | Date | string;
    comicAuthors?: Prisma.WorkComicAuthorListRelationFilter;
    relatedChapters?: Prisma.WorkComicChapterListRelationFilter;
    comicCategories?: Prisma.WorkComicCategoryListRelationFilter;
    comicVersions?: Prisma.WorkComicVersionListRelationFilter;
  },
  'id'
>;

export type WorkComicOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  alias?: Prisma.SortOrderInput | Prisma.SortOrder;
  cover?: Prisma.SortOrder;
  popularity?: Prisma.SortOrder;
  popularityWeight?: Prisma.SortOrder;
  language?: Prisma.SortOrder;
  region?: Prisma.SortOrder;
  ageRating?: Prisma.SortOrderInput | Prisma.SortOrder;
  isPublished?: Prisma.SortOrder;
  publishAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  lastUpdated?: Prisma.SortOrderInput | Prisma.SortOrder;
  description?: Prisma.SortOrder;
  publisher?: Prisma.SortOrderInput | Prisma.SortOrder;
  originalSource?: Prisma.SortOrderInput | Prisma.SortOrder;
  serialStatus?: Prisma.SortOrder;
  totalChapters?: Prisma.SortOrder;
  totalViews?: Prisma.SortOrder;
  favoriteCount?: Prisma.SortOrder;
  commentCount?: Prisma.SortOrder;
  likeCount?: Prisma.SortOrder;
  rating?: Prisma.SortOrderInput | Prisma.SortOrder;
  ratingCount?: Prisma.SortOrder;
  canDownload?: Prisma.SortOrder;
  canComment?: Prisma.SortOrder;
  readRule?: Prisma.SortOrder;
  purchaseAmount?: Prisma.SortOrderInput | Prisma.SortOrder;
  seoTitle?: Prisma.SortOrderInput | Prisma.SortOrder;
  seoDescription?: Prisma.SortOrderInput | Prisma.SortOrder;
  seoKeywords?: Prisma.SortOrderInput | Prisma.SortOrder;
  recommendWeight?: Prisma.SortOrder;
  isRecommended?: Prisma.SortOrder;
  isHot?: Prisma.SortOrder;
  isNew?: Prisma.SortOrder;
  copyright?: Prisma.SortOrderInput | Prisma.SortOrder;
  disclaimer?: Prisma.SortOrderInput | Prisma.SortOrder;
  remark?: Prisma.SortOrderInput | Prisma.SortOrder;
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.WorkComicCountOrderByAggregateInput;
  _avg?: Prisma.WorkComicAvgOrderByAggregateInput;
  _max?: Prisma.WorkComicMaxOrderByAggregateInput;
  _min?: Prisma.WorkComicMinOrderByAggregateInput;
  _sum?: Prisma.WorkComicSumOrderByAggregateInput;
};

export type WorkComicScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.WorkComicScalarWhereWithAggregatesInput
    | Prisma.WorkComicScalarWhereWithAggregatesInput[];
  OR?: Prisma.WorkComicScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.WorkComicScalarWhereWithAggregatesInput
    | Prisma.WorkComicScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<'WorkComic'> | number;
  name?: Prisma.StringWithAggregatesFilter<'WorkComic'> | string;
  alias?:
    | Prisma.StringNullableWithAggregatesFilter<'WorkComic'>
    | string
    | null;
  cover?: Prisma.StringWithAggregatesFilter<'WorkComic'> | string;
  popularity?: Prisma.IntWithAggregatesFilter<'WorkComic'> | number;
  popularityWeight?: Prisma.IntWithAggregatesFilter<'WorkComic'> | number;
  language?: Prisma.StringWithAggregatesFilter<'WorkComic'> | string;
  region?: Prisma.StringWithAggregatesFilter<'WorkComic'> | string;
  ageRating?:
    | Prisma.StringNullableWithAggregatesFilter<'WorkComic'>
    | string
    | null;
  isPublished?: Prisma.BoolWithAggregatesFilter<'WorkComic'> | boolean;
  publishAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<'WorkComic'>
    | Date
    | string
    | null;
  lastUpdated?:
    | Prisma.DateTimeNullableWithAggregatesFilter<'WorkComic'>
    | Date
    | string
    | null;
  description?: Prisma.StringWithAggregatesFilter<'WorkComic'> | string;
  publisher?:
    | Prisma.StringNullableWithAggregatesFilter<'WorkComic'>
    | string
    | null;
  originalSource?:
    | Prisma.StringNullableWithAggregatesFilter<'WorkComic'>
    | string
    | null;
  serialStatus?: Prisma.IntWithAggregatesFilter<'WorkComic'> | number;
  totalChapters?: Prisma.IntWithAggregatesFilter<'WorkComic'> | number;
  totalViews?: Prisma.IntWithAggregatesFilter<'WorkComic'> | number;
  favoriteCount?: Prisma.IntWithAggregatesFilter<'WorkComic'> | number;
  commentCount?: Prisma.IntWithAggregatesFilter<'WorkComic'> | number;
  likeCount?: Prisma.IntWithAggregatesFilter<'WorkComic'> | number;
  rating?:
    | Prisma.FloatNullableWithAggregatesFilter<'WorkComic'>
    | number
    | null;
  ratingCount?: Prisma.IntWithAggregatesFilter<'WorkComic'> | number;
  canDownload?: Prisma.BoolWithAggregatesFilter<'WorkComic'> | boolean;
  canComment?: Prisma.BoolWithAggregatesFilter<'WorkComic'> | boolean;
  readRule?: Prisma.IntWithAggregatesFilter<'WorkComic'> | number;
  purchaseAmount?:
    | Prisma.IntNullableWithAggregatesFilter<'WorkComic'>
    | number
    | null;
  seoTitle?:
    | Prisma.StringNullableWithAggregatesFilter<'WorkComic'>
    | string
    | null;
  seoDescription?:
    | Prisma.StringNullableWithAggregatesFilter<'WorkComic'>
    | string
    | null;
  seoKeywords?:
    | Prisma.StringNullableWithAggregatesFilter<'WorkComic'>
    | string
    | null;
  recommendWeight?: Prisma.FloatWithAggregatesFilter<'WorkComic'> | number;
  isRecommended?: Prisma.BoolWithAggregatesFilter<'WorkComic'> | boolean;
  isHot?: Prisma.BoolWithAggregatesFilter<'WorkComic'> | boolean;
  isNew?: Prisma.BoolWithAggregatesFilter<'WorkComic'> | boolean;
  copyright?:
    | Prisma.StringNullableWithAggregatesFilter<'WorkComic'>
    | string
    | null;
  disclaimer?:
    | Prisma.StringNullableWithAggregatesFilter<'WorkComic'>
    | string
    | null;
  remark?:
    | Prisma.StringNullableWithAggregatesFilter<'WorkComic'>
    | string
    | null;
  deletedAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<'WorkComic'>
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<'WorkComic'> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<'WorkComic'> | Date | string;
};

export type WorkComicCreateInput = {
  name: string;
  alias?: string | null;
  cover: string;
  popularity?: number;
  popularityWeight?: number;
  language: string;
  region: string;
  ageRating?: string | null;
  isPublished?: boolean;
  publishAt?: Date | string | null;
  lastUpdated?: Date | string | null;
  description: string;
  publisher?: string | null;
  originalSource?: string | null;
  serialStatus?: number;
  totalChapters?: number;
  totalViews?: number;
  favoriteCount?: number;
  commentCount?: number;
  likeCount?: number;
  rating?: number | null;
  ratingCount?: number;
  canDownload?: boolean;
  canComment?: boolean;
  readRule?: number;
  purchaseAmount?: number | null;
  seoTitle?: string | null;
  seoDescription?: string | null;
  seoKeywords?: string | null;
  recommendWeight?: number;
  isRecommended?: boolean;
  isHot?: boolean;
  isNew?: boolean;
  copyright?: string | null;
  disclaimer?: string | null;
  remark?: string | null;
  deletedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  comicAuthors?: Prisma.WorkComicAuthorCreateNestedManyWithoutComicInput;
  relatedChapters?: Prisma.WorkComicChapterCreateNestedManyWithoutRelatedComicInput;
  comicCategories?: Prisma.WorkComicCategoryCreateNestedManyWithoutComicInput;
  comicVersions?: Prisma.WorkComicVersionCreateNestedManyWithoutComicInput;
};

export type WorkComicUncheckedCreateInput = {
  id?: number;
  name: string;
  alias?: string | null;
  cover: string;
  popularity?: number;
  popularityWeight?: number;
  language: string;
  region: string;
  ageRating?: string | null;
  isPublished?: boolean;
  publishAt?: Date | string | null;
  lastUpdated?: Date | string | null;
  description: string;
  publisher?: string | null;
  originalSource?: string | null;
  serialStatus?: number;
  totalChapters?: number;
  totalViews?: number;
  favoriteCount?: number;
  commentCount?: number;
  likeCount?: number;
  rating?: number | null;
  ratingCount?: number;
  canDownload?: boolean;
  canComment?: boolean;
  readRule?: number;
  purchaseAmount?: number | null;
  seoTitle?: string | null;
  seoDescription?: string | null;
  seoKeywords?: string | null;
  recommendWeight?: number;
  isRecommended?: boolean;
  isHot?: boolean;
  isNew?: boolean;
  copyright?: string | null;
  disclaimer?: string | null;
  remark?: string | null;
  deletedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  comicAuthors?: Prisma.WorkComicAuthorUncheckedCreateNestedManyWithoutComicInput;
  relatedChapters?: Prisma.WorkComicChapterUncheckedCreateNestedManyWithoutRelatedComicInput;
  comicCategories?: Prisma.WorkComicCategoryUncheckedCreateNestedManyWithoutComicInput;
  comicVersions?: Prisma.WorkComicVersionUncheckedCreateNestedManyWithoutComicInput;
};

export type WorkComicUpdateInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  alias?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  cover?: Prisma.StringFieldUpdateOperationsInput | string;
  popularity?: Prisma.IntFieldUpdateOperationsInput | number;
  popularityWeight?: Prisma.IntFieldUpdateOperationsInput | number;
  language?: Prisma.StringFieldUpdateOperationsInput | string;
  region?: Prisma.StringFieldUpdateOperationsInput | string;
  ageRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  publishAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastUpdated?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  publisher?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  originalSource?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  serialStatus?: Prisma.IntFieldUpdateOperationsInput | number;
  totalChapters?: Prisma.IntFieldUpdateOperationsInput | number;
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number;
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number;
  commentCount?: Prisma.IntFieldUpdateOperationsInput | number;
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number;
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number;
  canDownload?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  canComment?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  readRule?: Prisma.IntFieldUpdateOperationsInput | number;
  purchaseAmount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  seoTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  seoDescription?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  seoKeywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  recommendWeight?: Prisma.FloatFieldUpdateOperationsInput | number;
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isHot?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  comicAuthors?: Prisma.WorkComicAuthorUpdateManyWithoutComicNestedInput;
  relatedChapters?: Prisma.WorkComicChapterUpdateManyWithoutRelatedComicNestedInput;
  comicCategories?: Prisma.WorkComicCategoryUpdateManyWithoutComicNestedInput;
  comicVersions?: Prisma.WorkComicVersionUpdateManyWithoutComicNestedInput;
};

export type WorkComicUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  alias?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  cover?: Prisma.StringFieldUpdateOperationsInput | string;
  popularity?: Prisma.IntFieldUpdateOperationsInput | number;
  popularityWeight?: Prisma.IntFieldUpdateOperationsInput | number;
  language?: Prisma.StringFieldUpdateOperationsInput | string;
  region?: Prisma.StringFieldUpdateOperationsInput | string;
  ageRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  publishAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastUpdated?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  publisher?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  originalSource?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  serialStatus?: Prisma.IntFieldUpdateOperationsInput | number;
  totalChapters?: Prisma.IntFieldUpdateOperationsInput | number;
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number;
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number;
  commentCount?: Prisma.IntFieldUpdateOperationsInput | number;
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number;
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number;
  canDownload?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  canComment?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  readRule?: Prisma.IntFieldUpdateOperationsInput | number;
  purchaseAmount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  seoTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  seoDescription?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  seoKeywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  recommendWeight?: Prisma.FloatFieldUpdateOperationsInput | number;
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isHot?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  comicAuthors?: Prisma.WorkComicAuthorUncheckedUpdateManyWithoutComicNestedInput;
  relatedChapters?: Prisma.WorkComicChapterUncheckedUpdateManyWithoutRelatedComicNestedInput;
  comicCategories?: Prisma.WorkComicCategoryUncheckedUpdateManyWithoutComicNestedInput;
  comicVersions?: Prisma.WorkComicVersionUncheckedUpdateManyWithoutComicNestedInput;
};

export type WorkComicCreateManyInput = {
  id?: number;
  name: string;
  alias?: string | null;
  cover: string;
  popularity?: number;
  popularityWeight?: number;
  language: string;
  region: string;
  ageRating?: string | null;
  isPublished?: boolean;
  publishAt?: Date | string | null;
  lastUpdated?: Date | string | null;
  description: string;
  publisher?: string | null;
  originalSource?: string | null;
  serialStatus?: number;
  totalChapters?: number;
  totalViews?: number;
  favoriteCount?: number;
  commentCount?: number;
  likeCount?: number;
  rating?: number | null;
  ratingCount?: number;
  canDownload?: boolean;
  canComment?: boolean;
  readRule?: number;
  purchaseAmount?: number | null;
  seoTitle?: string | null;
  seoDescription?: string | null;
  seoKeywords?: string | null;
  recommendWeight?: number;
  isRecommended?: boolean;
  isHot?: boolean;
  isNew?: boolean;
  copyright?: string | null;
  disclaimer?: string | null;
  remark?: string | null;
  deletedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type WorkComicUpdateManyMutationInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  alias?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  cover?: Prisma.StringFieldUpdateOperationsInput | string;
  popularity?: Prisma.IntFieldUpdateOperationsInput | number;
  popularityWeight?: Prisma.IntFieldUpdateOperationsInput | number;
  language?: Prisma.StringFieldUpdateOperationsInput | string;
  region?: Prisma.StringFieldUpdateOperationsInput | string;
  ageRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  publishAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastUpdated?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  publisher?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  originalSource?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  serialStatus?: Prisma.IntFieldUpdateOperationsInput | number;
  totalChapters?: Prisma.IntFieldUpdateOperationsInput | number;
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number;
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number;
  commentCount?: Prisma.IntFieldUpdateOperationsInput | number;
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number;
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number;
  canDownload?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  canComment?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  readRule?: Prisma.IntFieldUpdateOperationsInput | number;
  purchaseAmount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  seoTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  seoDescription?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  seoKeywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  recommendWeight?: Prisma.FloatFieldUpdateOperationsInput | number;
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isHot?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type WorkComicUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  alias?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  cover?: Prisma.StringFieldUpdateOperationsInput | string;
  popularity?: Prisma.IntFieldUpdateOperationsInput | number;
  popularityWeight?: Prisma.IntFieldUpdateOperationsInput | number;
  language?: Prisma.StringFieldUpdateOperationsInput | string;
  region?: Prisma.StringFieldUpdateOperationsInput | string;
  ageRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  publishAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastUpdated?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  publisher?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  originalSource?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  serialStatus?: Prisma.IntFieldUpdateOperationsInput | number;
  totalChapters?: Prisma.IntFieldUpdateOperationsInput | number;
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number;
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number;
  commentCount?: Prisma.IntFieldUpdateOperationsInput | number;
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number;
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number;
  canDownload?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  canComment?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  readRule?: Prisma.IntFieldUpdateOperationsInput | number;
  purchaseAmount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  seoTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  seoDescription?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  seoKeywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  recommendWeight?: Prisma.FloatFieldUpdateOperationsInput | number;
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isHot?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type WorkComicScalarRelationFilter = {
  is?: Prisma.WorkComicWhereInput;
  isNot?: Prisma.WorkComicWhereInput;
};

export type WorkComicCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  alias?: Prisma.SortOrder;
  cover?: Prisma.SortOrder;
  popularity?: Prisma.SortOrder;
  popularityWeight?: Prisma.SortOrder;
  language?: Prisma.SortOrder;
  region?: Prisma.SortOrder;
  ageRating?: Prisma.SortOrder;
  isPublished?: Prisma.SortOrder;
  publishAt?: Prisma.SortOrder;
  lastUpdated?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  publisher?: Prisma.SortOrder;
  originalSource?: Prisma.SortOrder;
  serialStatus?: Prisma.SortOrder;
  totalChapters?: Prisma.SortOrder;
  totalViews?: Prisma.SortOrder;
  favoriteCount?: Prisma.SortOrder;
  commentCount?: Prisma.SortOrder;
  likeCount?: Prisma.SortOrder;
  rating?: Prisma.SortOrder;
  ratingCount?: Prisma.SortOrder;
  canDownload?: Prisma.SortOrder;
  canComment?: Prisma.SortOrder;
  readRule?: Prisma.SortOrder;
  purchaseAmount?: Prisma.SortOrder;
  seoTitle?: Prisma.SortOrder;
  seoDescription?: Prisma.SortOrder;
  seoKeywords?: Prisma.SortOrder;
  recommendWeight?: Prisma.SortOrder;
  isRecommended?: Prisma.SortOrder;
  isHot?: Prisma.SortOrder;
  isNew?: Prisma.SortOrder;
  copyright?: Prisma.SortOrder;
  disclaimer?: Prisma.SortOrder;
  remark?: Prisma.SortOrder;
  deletedAt?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type WorkComicAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  popularity?: Prisma.SortOrder;
  popularityWeight?: Prisma.SortOrder;
  serialStatus?: Prisma.SortOrder;
  totalChapters?: Prisma.SortOrder;
  totalViews?: Prisma.SortOrder;
  favoriteCount?: Prisma.SortOrder;
  commentCount?: Prisma.SortOrder;
  likeCount?: Prisma.SortOrder;
  rating?: Prisma.SortOrder;
  ratingCount?: Prisma.SortOrder;
  readRule?: Prisma.SortOrder;
  purchaseAmount?: Prisma.SortOrder;
  recommendWeight?: Prisma.SortOrder;
};

export type WorkComicMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  alias?: Prisma.SortOrder;
  cover?: Prisma.SortOrder;
  popularity?: Prisma.SortOrder;
  popularityWeight?: Prisma.SortOrder;
  language?: Prisma.SortOrder;
  region?: Prisma.SortOrder;
  ageRating?: Prisma.SortOrder;
  isPublished?: Prisma.SortOrder;
  publishAt?: Prisma.SortOrder;
  lastUpdated?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  publisher?: Prisma.SortOrder;
  originalSource?: Prisma.SortOrder;
  serialStatus?: Prisma.SortOrder;
  totalChapters?: Prisma.SortOrder;
  totalViews?: Prisma.SortOrder;
  favoriteCount?: Prisma.SortOrder;
  commentCount?: Prisma.SortOrder;
  likeCount?: Prisma.SortOrder;
  rating?: Prisma.SortOrder;
  ratingCount?: Prisma.SortOrder;
  canDownload?: Prisma.SortOrder;
  canComment?: Prisma.SortOrder;
  readRule?: Prisma.SortOrder;
  purchaseAmount?: Prisma.SortOrder;
  seoTitle?: Prisma.SortOrder;
  seoDescription?: Prisma.SortOrder;
  seoKeywords?: Prisma.SortOrder;
  recommendWeight?: Prisma.SortOrder;
  isRecommended?: Prisma.SortOrder;
  isHot?: Prisma.SortOrder;
  isNew?: Prisma.SortOrder;
  copyright?: Prisma.SortOrder;
  disclaimer?: Prisma.SortOrder;
  remark?: Prisma.SortOrder;
  deletedAt?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type WorkComicMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  alias?: Prisma.SortOrder;
  cover?: Prisma.SortOrder;
  popularity?: Prisma.SortOrder;
  popularityWeight?: Prisma.SortOrder;
  language?: Prisma.SortOrder;
  region?: Prisma.SortOrder;
  ageRating?: Prisma.SortOrder;
  isPublished?: Prisma.SortOrder;
  publishAt?: Prisma.SortOrder;
  lastUpdated?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  publisher?: Prisma.SortOrder;
  originalSource?: Prisma.SortOrder;
  serialStatus?: Prisma.SortOrder;
  totalChapters?: Prisma.SortOrder;
  totalViews?: Prisma.SortOrder;
  favoriteCount?: Prisma.SortOrder;
  commentCount?: Prisma.SortOrder;
  likeCount?: Prisma.SortOrder;
  rating?: Prisma.SortOrder;
  ratingCount?: Prisma.SortOrder;
  canDownload?: Prisma.SortOrder;
  canComment?: Prisma.SortOrder;
  readRule?: Prisma.SortOrder;
  purchaseAmount?: Prisma.SortOrder;
  seoTitle?: Prisma.SortOrder;
  seoDescription?: Prisma.SortOrder;
  seoKeywords?: Prisma.SortOrder;
  recommendWeight?: Prisma.SortOrder;
  isRecommended?: Prisma.SortOrder;
  isHot?: Prisma.SortOrder;
  isNew?: Prisma.SortOrder;
  copyright?: Prisma.SortOrder;
  disclaimer?: Prisma.SortOrder;
  remark?: Prisma.SortOrder;
  deletedAt?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type WorkComicSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  popularity?: Prisma.SortOrder;
  popularityWeight?: Prisma.SortOrder;
  serialStatus?: Prisma.SortOrder;
  totalChapters?: Prisma.SortOrder;
  totalViews?: Prisma.SortOrder;
  favoriteCount?: Prisma.SortOrder;
  commentCount?: Prisma.SortOrder;
  likeCount?: Prisma.SortOrder;
  rating?: Prisma.SortOrder;
  ratingCount?: Prisma.SortOrder;
  readRule?: Prisma.SortOrder;
  purchaseAmount?: Prisma.SortOrder;
  recommendWeight?: Prisma.SortOrder;
};

export type WorkComicCreateNestedOneWithoutComicAuthorsInput = {
  create?: Prisma.XOR<
    Prisma.WorkComicCreateWithoutComicAuthorsInput,
    Prisma.WorkComicUncheckedCreateWithoutComicAuthorsInput
  >;
  connectOrCreate?: Prisma.WorkComicCreateOrConnectWithoutComicAuthorsInput;
  connect?: Prisma.WorkComicWhereUniqueInput;
};

export type WorkComicUpdateOneRequiredWithoutComicAuthorsNestedInput = {
  create?: Prisma.XOR<
    Prisma.WorkComicCreateWithoutComicAuthorsInput,
    Prisma.WorkComicUncheckedCreateWithoutComicAuthorsInput
  >;
  connectOrCreate?: Prisma.WorkComicCreateOrConnectWithoutComicAuthorsInput;
  upsert?: Prisma.WorkComicUpsertWithoutComicAuthorsInput;
  connect?: Prisma.WorkComicWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.WorkComicUpdateToOneWithWhereWithoutComicAuthorsInput,
      Prisma.WorkComicUpdateWithoutComicAuthorsInput
    >,
    Prisma.WorkComicUncheckedUpdateWithoutComicAuthorsInput
  >;
};

export type WorkComicCreateNestedOneWithoutComicCategoriesInput = {
  create?: Prisma.XOR<
    Prisma.WorkComicCreateWithoutComicCategoriesInput,
    Prisma.WorkComicUncheckedCreateWithoutComicCategoriesInput
  >;
  connectOrCreate?: Prisma.WorkComicCreateOrConnectWithoutComicCategoriesInput;
  connect?: Prisma.WorkComicWhereUniqueInput;
};

export type WorkComicUpdateOneRequiredWithoutComicCategoriesNestedInput = {
  create?: Prisma.XOR<
    Prisma.WorkComicCreateWithoutComicCategoriesInput,
    Prisma.WorkComicUncheckedCreateWithoutComicCategoriesInput
  >;
  connectOrCreate?: Prisma.WorkComicCreateOrConnectWithoutComicCategoriesInput;
  upsert?: Prisma.WorkComicUpsertWithoutComicCategoriesInput;
  connect?: Prisma.WorkComicWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.WorkComicUpdateToOneWithWhereWithoutComicCategoriesInput,
      Prisma.WorkComicUpdateWithoutComicCategoriesInput
    >,
    Prisma.WorkComicUncheckedUpdateWithoutComicCategoriesInput
  >;
};

export type WorkComicCreateNestedOneWithoutRelatedChaptersInput = {
  create?: Prisma.XOR<
    Prisma.WorkComicCreateWithoutRelatedChaptersInput,
    Prisma.WorkComicUncheckedCreateWithoutRelatedChaptersInput
  >;
  connectOrCreate?: Prisma.WorkComicCreateOrConnectWithoutRelatedChaptersInput;
  connect?: Prisma.WorkComicWhereUniqueInput;
};

export type WorkComicUpdateOneRequiredWithoutRelatedChaptersNestedInput = {
  create?: Prisma.XOR<
    Prisma.WorkComicCreateWithoutRelatedChaptersInput,
    Prisma.WorkComicUncheckedCreateWithoutRelatedChaptersInput
  >;
  connectOrCreate?: Prisma.WorkComicCreateOrConnectWithoutRelatedChaptersInput;
  upsert?: Prisma.WorkComicUpsertWithoutRelatedChaptersInput;
  connect?: Prisma.WorkComicWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.WorkComicUpdateToOneWithWhereWithoutRelatedChaptersInput,
      Prisma.WorkComicUpdateWithoutRelatedChaptersInput
    >,
    Prisma.WorkComicUncheckedUpdateWithoutRelatedChaptersInput
  >;
};

export type WorkComicCreateNestedOneWithoutComicVersionsInput = {
  create?: Prisma.XOR<
    Prisma.WorkComicCreateWithoutComicVersionsInput,
    Prisma.WorkComicUncheckedCreateWithoutComicVersionsInput
  >;
  connectOrCreate?: Prisma.WorkComicCreateOrConnectWithoutComicVersionsInput;
  connect?: Prisma.WorkComicWhereUniqueInput;
};

export type WorkComicUpdateOneRequiredWithoutComicVersionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.WorkComicCreateWithoutComicVersionsInput,
    Prisma.WorkComicUncheckedCreateWithoutComicVersionsInput
  >;
  connectOrCreate?: Prisma.WorkComicCreateOrConnectWithoutComicVersionsInput;
  upsert?: Prisma.WorkComicUpsertWithoutComicVersionsInput;
  connect?: Prisma.WorkComicWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.WorkComicUpdateToOneWithWhereWithoutComicVersionsInput,
      Prisma.WorkComicUpdateWithoutComicVersionsInput
    >,
    Prisma.WorkComicUncheckedUpdateWithoutComicVersionsInput
  >;
};

export type WorkComicCreateWithoutComicAuthorsInput = {
  name: string;
  alias?: string | null;
  cover: string;
  popularity?: number;
  popularityWeight?: number;
  language: string;
  region: string;
  ageRating?: string | null;
  isPublished?: boolean;
  publishAt?: Date | string | null;
  lastUpdated?: Date | string | null;
  description: string;
  publisher?: string | null;
  originalSource?: string | null;
  serialStatus?: number;
  totalChapters?: number;
  totalViews?: number;
  favoriteCount?: number;
  commentCount?: number;
  likeCount?: number;
  rating?: number | null;
  ratingCount?: number;
  canDownload?: boolean;
  canComment?: boolean;
  readRule?: number;
  purchaseAmount?: number | null;
  seoTitle?: string | null;
  seoDescription?: string | null;
  seoKeywords?: string | null;
  recommendWeight?: number;
  isRecommended?: boolean;
  isHot?: boolean;
  isNew?: boolean;
  copyright?: string | null;
  disclaimer?: string | null;
  remark?: string | null;
  deletedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  relatedChapters?: Prisma.WorkComicChapterCreateNestedManyWithoutRelatedComicInput;
  comicCategories?: Prisma.WorkComicCategoryCreateNestedManyWithoutComicInput;
  comicVersions?: Prisma.WorkComicVersionCreateNestedManyWithoutComicInput;
};

export type WorkComicUncheckedCreateWithoutComicAuthorsInput = {
  id?: number;
  name: string;
  alias?: string | null;
  cover: string;
  popularity?: number;
  popularityWeight?: number;
  language: string;
  region: string;
  ageRating?: string | null;
  isPublished?: boolean;
  publishAt?: Date | string | null;
  lastUpdated?: Date | string | null;
  description: string;
  publisher?: string | null;
  originalSource?: string | null;
  serialStatus?: number;
  totalChapters?: number;
  totalViews?: number;
  favoriteCount?: number;
  commentCount?: number;
  likeCount?: number;
  rating?: number | null;
  ratingCount?: number;
  canDownload?: boolean;
  canComment?: boolean;
  readRule?: number;
  purchaseAmount?: number | null;
  seoTitle?: string | null;
  seoDescription?: string | null;
  seoKeywords?: string | null;
  recommendWeight?: number;
  isRecommended?: boolean;
  isHot?: boolean;
  isNew?: boolean;
  copyright?: string | null;
  disclaimer?: string | null;
  remark?: string | null;
  deletedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  relatedChapters?: Prisma.WorkComicChapterUncheckedCreateNestedManyWithoutRelatedComicInput;
  comicCategories?: Prisma.WorkComicCategoryUncheckedCreateNestedManyWithoutComicInput;
  comicVersions?: Prisma.WorkComicVersionUncheckedCreateNestedManyWithoutComicInput;
};

export type WorkComicCreateOrConnectWithoutComicAuthorsInput = {
  where: Prisma.WorkComicWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WorkComicCreateWithoutComicAuthorsInput,
    Prisma.WorkComicUncheckedCreateWithoutComicAuthorsInput
  >;
};

export type WorkComicUpsertWithoutComicAuthorsInput = {
  update: Prisma.XOR<
    Prisma.WorkComicUpdateWithoutComicAuthorsInput,
    Prisma.WorkComicUncheckedUpdateWithoutComicAuthorsInput
  >;
  create: Prisma.XOR<
    Prisma.WorkComicCreateWithoutComicAuthorsInput,
    Prisma.WorkComicUncheckedCreateWithoutComicAuthorsInput
  >;
  where?: Prisma.WorkComicWhereInput;
};

export type WorkComicUpdateToOneWithWhereWithoutComicAuthorsInput = {
  where?: Prisma.WorkComicWhereInput;
  data: Prisma.XOR<
    Prisma.WorkComicUpdateWithoutComicAuthorsInput,
    Prisma.WorkComicUncheckedUpdateWithoutComicAuthorsInput
  >;
};

export type WorkComicUpdateWithoutComicAuthorsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  alias?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  cover?: Prisma.StringFieldUpdateOperationsInput | string;
  popularity?: Prisma.IntFieldUpdateOperationsInput | number;
  popularityWeight?: Prisma.IntFieldUpdateOperationsInput | number;
  language?: Prisma.StringFieldUpdateOperationsInput | string;
  region?: Prisma.StringFieldUpdateOperationsInput | string;
  ageRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  publishAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastUpdated?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  publisher?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  originalSource?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  serialStatus?: Prisma.IntFieldUpdateOperationsInput | number;
  totalChapters?: Prisma.IntFieldUpdateOperationsInput | number;
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number;
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number;
  commentCount?: Prisma.IntFieldUpdateOperationsInput | number;
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number;
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number;
  canDownload?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  canComment?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  readRule?: Prisma.IntFieldUpdateOperationsInput | number;
  purchaseAmount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  seoTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  seoDescription?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  seoKeywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  recommendWeight?: Prisma.FloatFieldUpdateOperationsInput | number;
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isHot?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  relatedChapters?: Prisma.WorkComicChapterUpdateManyWithoutRelatedComicNestedInput;
  comicCategories?: Prisma.WorkComicCategoryUpdateManyWithoutComicNestedInput;
  comicVersions?: Prisma.WorkComicVersionUpdateManyWithoutComicNestedInput;
};

export type WorkComicUncheckedUpdateWithoutComicAuthorsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  alias?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  cover?: Prisma.StringFieldUpdateOperationsInput | string;
  popularity?: Prisma.IntFieldUpdateOperationsInput | number;
  popularityWeight?: Prisma.IntFieldUpdateOperationsInput | number;
  language?: Prisma.StringFieldUpdateOperationsInput | string;
  region?: Prisma.StringFieldUpdateOperationsInput | string;
  ageRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  publishAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastUpdated?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  publisher?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  originalSource?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  serialStatus?: Prisma.IntFieldUpdateOperationsInput | number;
  totalChapters?: Prisma.IntFieldUpdateOperationsInput | number;
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number;
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number;
  commentCount?: Prisma.IntFieldUpdateOperationsInput | number;
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number;
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number;
  canDownload?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  canComment?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  readRule?: Prisma.IntFieldUpdateOperationsInput | number;
  purchaseAmount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  seoTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  seoDescription?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  seoKeywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  recommendWeight?: Prisma.FloatFieldUpdateOperationsInput | number;
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isHot?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  relatedChapters?: Prisma.WorkComicChapterUncheckedUpdateManyWithoutRelatedComicNestedInput;
  comicCategories?: Prisma.WorkComicCategoryUncheckedUpdateManyWithoutComicNestedInput;
  comicVersions?: Prisma.WorkComicVersionUncheckedUpdateManyWithoutComicNestedInput;
};

export type WorkComicCreateWithoutComicCategoriesInput = {
  name: string;
  alias?: string | null;
  cover: string;
  popularity?: number;
  popularityWeight?: number;
  language: string;
  region: string;
  ageRating?: string | null;
  isPublished?: boolean;
  publishAt?: Date | string | null;
  lastUpdated?: Date | string | null;
  description: string;
  publisher?: string | null;
  originalSource?: string | null;
  serialStatus?: number;
  totalChapters?: number;
  totalViews?: number;
  favoriteCount?: number;
  commentCount?: number;
  likeCount?: number;
  rating?: number | null;
  ratingCount?: number;
  canDownload?: boolean;
  canComment?: boolean;
  readRule?: number;
  purchaseAmount?: number | null;
  seoTitle?: string | null;
  seoDescription?: string | null;
  seoKeywords?: string | null;
  recommendWeight?: number;
  isRecommended?: boolean;
  isHot?: boolean;
  isNew?: boolean;
  copyright?: string | null;
  disclaimer?: string | null;
  remark?: string | null;
  deletedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  comicAuthors?: Prisma.WorkComicAuthorCreateNestedManyWithoutComicInput;
  relatedChapters?: Prisma.WorkComicChapterCreateNestedManyWithoutRelatedComicInput;
  comicVersions?: Prisma.WorkComicVersionCreateNestedManyWithoutComicInput;
};

export type WorkComicUncheckedCreateWithoutComicCategoriesInput = {
  id?: number;
  name: string;
  alias?: string | null;
  cover: string;
  popularity?: number;
  popularityWeight?: number;
  language: string;
  region: string;
  ageRating?: string | null;
  isPublished?: boolean;
  publishAt?: Date | string | null;
  lastUpdated?: Date | string | null;
  description: string;
  publisher?: string | null;
  originalSource?: string | null;
  serialStatus?: number;
  totalChapters?: number;
  totalViews?: number;
  favoriteCount?: number;
  commentCount?: number;
  likeCount?: number;
  rating?: number | null;
  ratingCount?: number;
  canDownload?: boolean;
  canComment?: boolean;
  readRule?: number;
  purchaseAmount?: number | null;
  seoTitle?: string | null;
  seoDescription?: string | null;
  seoKeywords?: string | null;
  recommendWeight?: number;
  isRecommended?: boolean;
  isHot?: boolean;
  isNew?: boolean;
  copyright?: string | null;
  disclaimer?: string | null;
  remark?: string | null;
  deletedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  comicAuthors?: Prisma.WorkComicAuthorUncheckedCreateNestedManyWithoutComicInput;
  relatedChapters?: Prisma.WorkComicChapterUncheckedCreateNestedManyWithoutRelatedComicInput;
  comicVersions?: Prisma.WorkComicVersionUncheckedCreateNestedManyWithoutComicInput;
};

export type WorkComicCreateOrConnectWithoutComicCategoriesInput = {
  where: Prisma.WorkComicWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WorkComicCreateWithoutComicCategoriesInput,
    Prisma.WorkComicUncheckedCreateWithoutComicCategoriesInput
  >;
};

export type WorkComicUpsertWithoutComicCategoriesInput = {
  update: Prisma.XOR<
    Prisma.WorkComicUpdateWithoutComicCategoriesInput,
    Prisma.WorkComicUncheckedUpdateWithoutComicCategoriesInput
  >;
  create: Prisma.XOR<
    Prisma.WorkComicCreateWithoutComicCategoriesInput,
    Prisma.WorkComicUncheckedCreateWithoutComicCategoriesInput
  >;
  where?: Prisma.WorkComicWhereInput;
};

export type WorkComicUpdateToOneWithWhereWithoutComicCategoriesInput = {
  where?: Prisma.WorkComicWhereInput;
  data: Prisma.XOR<
    Prisma.WorkComicUpdateWithoutComicCategoriesInput,
    Prisma.WorkComicUncheckedUpdateWithoutComicCategoriesInput
  >;
};

export type WorkComicUpdateWithoutComicCategoriesInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  alias?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  cover?: Prisma.StringFieldUpdateOperationsInput | string;
  popularity?: Prisma.IntFieldUpdateOperationsInput | number;
  popularityWeight?: Prisma.IntFieldUpdateOperationsInput | number;
  language?: Prisma.StringFieldUpdateOperationsInput | string;
  region?: Prisma.StringFieldUpdateOperationsInput | string;
  ageRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  publishAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastUpdated?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  publisher?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  originalSource?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  serialStatus?: Prisma.IntFieldUpdateOperationsInput | number;
  totalChapters?: Prisma.IntFieldUpdateOperationsInput | number;
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number;
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number;
  commentCount?: Prisma.IntFieldUpdateOperationsInput | number;
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number;
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number;
  canDownload?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  canComment?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  readRule?: Prisma.IntFieldUpdateOperationsInput | number;
  purchaseAmount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  seoTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  seoDescription?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  seoKeywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  recommendWeight?: Prisma.FloatFieldUpdateOperationsInput | number;
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isHot?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  comicAuthors?: Prisma.WorkComicAuthorUpdateManyWithoutComicNestedInput;
  relatedChapters?: Prisma.WorkComicChapterUpdateManyWithoutRelatedComicNestedInput;
  comicVersions?: Prisma.WorkComicVersionUpdateManyWithoutComicNestedInput;
};

export type WorkComicUncheckedUpdateWithoutComicCategoriesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  alias?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  cover?: Prisma.StringFieldUpdateOperationsInput | string;
  popularity?: Prisma.IntFieldUpdateOperationsInput | number;
  popularityWeight?: Prisma.IntFieldUpdateOperationsInput | number;
  language?: Prisma.StringFieldUpdateOperationsInput | string;
  region?: Prisma.StringFieldUpdateOperationsInput | string;
  ageRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  publishAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastUpdated?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  publisher?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  originalSource?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  serialStatus?: Prisma.IntFieldUpdateOperationsInput | number;
  totalChapters?: Prisma.IntFieldUpdateOperationsInput | number;
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number;
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number;
  commentCount?: Prisma.IntFieldUpdateOperationsInput | number;
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number;
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number;
  canDownload?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  canComment?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  readRule?: Prisma.IntFieldUpdateOperationsInput | number;
  purchaseAmount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  seoTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  seoDescription?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  seoKeywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  recommendWeight?: Prisma.FloatFieldUpdateOperationsInput | number;
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isHot?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  comicAuthors?: Prisma.WorkComicAuthorUncheckedUpdateManyWithoutComicNestedInput;
  relatedChapters?: Prisma.WorkComicChapterUncheckedUpdateManyWithoutRelatedComicNestedInput;
  comicVersions?: Prisma.WorkComicVersionUncheckedUpdateManyWithoutComicNestedInput;
};

export type WorkComicCreateWithoutRelatedChaptersInput = {
  name: string;
  alias?: string | null;
  cover: string;
  popularity?: number;
  popularityWeight?: number;
  language: string;
  region: string;
  ageRating?: string | null;
  isPublished?: boolean;
  publishAt?: Date | string | null;
  lastUpdated?: Date | string | null;
  description: string;
  publisher?: string | null;
  originalSource?: string | null;
  serialStatus?: number;
  totalChapters?: number;
  totalViews?: number;
  favoriteCount?: number;
  commentCount?: number;
  likeCount?: number;
  rating?: number | null;
  ratingCount?: number;
  canDownload?: boolean;
  canComment?: boolean;
  readRule?: number;
  purchaseAmount?: number | null;
  seoTitle?: string | null;
  seoDescription?: string | null;
  seoKeywords?: string | null;
  recommendWeight?: number;
  isRecommended?: boolean;
  isHot?: boolean;
  isNew?: boolean;
  copyright?: string | null;
  disclaimer?: string | null;
  remark?: string | null;
  deletedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  comicAuthors?: Prisma.WorkComicAuthorCreateNestedManyWithoutComicInput;
  comicCategories?: Prisma.WorkComicCategoryCreateNestedManyWithoutComicInput;
  comicVersions?: Prisma.WorkComicVersionCreateNestedManyWithoutComicInput;
};

export type WorkComicUncheckedCreateWithoutRelatedChaptersInput = {
  id?: number;
  name: string;
  alias?: string | null;
  cover: string;
  popularity?: number;
  popularityWeight?: number;
  language: string;
  region: string;
  ageRating?: string | null;
  isPublished?: boolean;
  publishAt?: Date | string | null;
  lastUpdated?: Date | string | null;
  description: string;
  publisher?: string | null;
  originalSource?: string | null;
  serialStatus?: number;
  totalChapters?: number;
  totalViews?: number;
  favoriteCount?: number;
  commentCount?: number;
  likeCount?: number;
  rating?: number | null;
  ratingCount?: number;
  canDownload?: boolean;
  canComment?: boolean;
  readRule?: number;
  purchaseAmount?: number | null;
  seoTitle?: string | null;
  seoDescription?: string | null;
  seoKeywords?: string | null;
  recommendWeight?: number;
  isRecommended?: boolean;
  isHot?: boolean;
  isNew?: boolean;
  copyright?: string | null;
  disclaimer?: string | null;
  remark?: string | null;
  deletedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  comicAuthors?: Prisma.WorkComicAuthorUncheckedCreateNestedManyWithoutComicInput;
  comicCategories?: Prisma.WorkComicCategoryUncheckedCreateNestedManyWithoutComicInput;
  comicVersions?: Prisma.WorkComicVersionUncheckedCreateNestedManyWithoutComicInput;
};

export type WorkComicCreateOrConnectWithoutRelatedChaptersInput = {
  where: Prisma.WorkComicWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WorkComicCreateWithoutRelatedChaptersInput,
    Prisma.WorkComicUncheckedCreateWithoutRelatedChaptersInput
  >;
};

export type WorkComicUpsertWithoutRelatedChaptersInput = {
  update: Prisma.XOR<
    Prisma.WorkComicUpdateWithoutRelatedChaptersInput,
    Prisma.WorkComicUncheckedUpdateWithoutRelatedChaptersInput
  >;
  create: Prisma.XOR<
    Prisma.WorkComicCreateWithoutRelatedChaptersInput,
    Prisma.WorkComicUncheckedCreateWithoutRelatedChaptersInput
  >;
  where?: Prisma.WorkComicWhereInput;
};

export type WorkComicUpdateToOneWithWhereWithoutRelatedChaptersInput = {
  where?: Prisma.WorkComicWhereInput;
  data: Prisma.XOR<
    Prisma.WorkComicUpdateWithoutRelatedChaptersInput,
    Prisma.WorkComicUncheckedUpdateWithoutRelatedChaptersInput
  >;
};

export type WorkComicUpdateWithoutRelatedChaptersInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  alias?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  cover?: Prisma.StringFieldUpdateOperationsInput | string;
  popularity?: Prisma.IntFieldUpdateOperationsInput | number;
  popularityWeight?: Prisma.IntFieldUpdateOperationsInput | number;
  language?: Prisma.StringFieldUpdateOperationsInput | string;
  region?: Prisma.StringFieldUpdateOperationsInput | string;
  ageRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  publishAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastUpdated?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  publisher?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  originalSource?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  serialStatus?: Prisma.IntFieldUpdateOperationsInput | number;
  totalChapters?: Prisma.IntFieldUpdateOperationsInput | number;
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number;
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number;
  commentCount?: Prisma.IntFieldUpdateOperationsInput | number;
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number;
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number;
  canDownload?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  canComment?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  readRule?: Prisma.IntFieldUpdateOperationsInput | number;
  purchaseAmount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  seoTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  seoDescription?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  seoKeywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  recommendWeight?: Prisma.FloatFieldUpdateOperationsInput | number;
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isHot?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  comicAuthors?: Prisma.WorkComicAuthorUpdateManyWithoutComicNestedInput;
  comicCategories?: Prisma.WorkComicCategoryUpdateManyWithoutComicNestedInput;
  comicVersions?: Prisma.WorkComicVersionUpdateManyWithoutComicNestedInput;
};

export type WorkComicUncheckedUpdateWithoutRelatedChaptersInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  alias?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  cover?: Prisma.StringFieldUpdateOperationsInput | string;
  popularity?: Prisma.IntFieldUpdateOperationsInput | number;
  popularityWeight?: Prisma.IntFieldUpdateOperationsInput | number;
  language?: Prisma.StringFieldUpdateOperationsInput | string;
  region?: Prisma.StringFieldUpdateOperationsInput | string;
  ageRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  publishAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastUpdated?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  publisher?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  originalSource?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  serialStatus?: Prisma.IntFieldUpdateOperationsInput | number;
  totalChapters?: Prisma.IntFieldUpdateOperationsInput | number;
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number;
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number;
  commentCount?: Prisma.IntFieldUpdateOperationsInput | number;
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number;
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number;
  canDownload?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  canComment?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  readRule?: Prisma.IntFieldUpdateOperationsInput | number;
  purchaseAmount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  seoTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  seoDescription?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  seoKeywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  recommendWeight?: Prisma.FloatFieldUpdateOperationsInput | number;
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isHot?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  comicAuthors?: Prisma.WorkComicAuthorUncheckedUpdateManyWithoutComicNestedInput;
  comicCategories?: Prisma.WorkComicCategoryUncheckedUpdateManyWithoutComicNestedInput;
  comicVersions?: Prisma.WorkComicVersionUncheckedUpdateManyWithoutComicNestedInput;
};

export type WorkComicCreateWithoutComicVersionsInput = {
  name: string;
  alias?: string | null;
  cover: string;
  popularity?: number;
  popularityWeight?: number;
  language: string;
  region: string;
  ageRating?: string | null;
  isPublished?: boolean;
  publishAt?: Date | string | null;
  lastUpdated?: Date | string | null;
  description: string;
  publisher?: string | null;
  originalSource?: string | null;
  serialStatus?: number;
  totalChapters?: number;
  totalViews?: number;
  favoriteCount?: number;
  commentCount?: number;
  likeCount?: number;
  rating?: number | null;
  ratingCount?: number;
  canDownload?: boolean;
  canComment?: boolean;
  readRule?: number;
  purchaseAmount?: number | null;
  seoTitle?: string | null;
  seoDescription?: string | null;
  seoKeywords?: string | null;
  recommendWeight?: number;
  isRecommended?: boolean;
  isHot?: boolean;
  isNew?: boolean;
  copyright?: string | null;
  disclaimer?: string | null;
  remark?: string | null;
  deletedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  comicAuthors?: Prisma.WorkComicAuthorCreateNestedManyWithoutComicInput;
  relatedChapters?: Prisma.WorkComicChapterCreateNestedManyWithoutRelatedComicInput;
  comicCategories?: Prisma.WorkComicCategoryCreateNestedManyWithoutComicInput;
};

export type WorkComicUncheckedCreateWithoutComicVersionsInput = {
  id?: number;
  name: string;
  alias?: string | null;
  cover: string;
  popularity?: number;
  popularityWeight?: number;
  language: string;
  region: string;
  ageRating?: string | null;
  isPublished?: boolean;
  publishAt?: Date | string | null;
  lastUpdated?: Date | string | null;
  description: string;
  publisher?: string | null;
  originalSource?: string | null;
  serialStatus?: number;
  totalChapters?: number;
  totalViews?: number;
  favoriteCount?: number;
  commentCount?: number;
  likeCount?: number;
  rating?: number | null;
  ratingCount?: number;
  canDownload?: boolean;
  canComment?: boolean;
  readRule?: number;
  purchaseAmount?: number | null;
  seoTitle?: string | null;
  seoDescription?: string | null;
  seoKeywords?: string | null;
  recommendWeight?: number;
  isRecommended?: boolean;
  isHot?: boolean;
  isNew?: boolean;
  copyright?: string | null;
  disclaimer?: string | null;
  remark?: string | null;
  deletedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  comicAuthors?: Prisma.WorkComicAuthorUncheckedCreateNestedManyWithoutComicInput;
  relatedChapters?: Prisma.WorkComicChapterUncheckedCreateNestedManyWithoutRelatedComicInput;
  comicCategories?: Prisma.WorkComicCategoryUncheckedCreateNestedManyWithoutComicInput;
};

export type WorkComicCreateOrConnectWithoutComicVersionsInput = {
  where: Prisma.WorkComicWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WorkComicCreateWithoutComicVersionsInput,
    Prisma.WorkComicUncheckedCreateWithoutComicVersionsInput
  >;
};

export type WorkComicUpsertWithoutComicVersionsInput = {
  update: Prisma.XOR<
    Prisma.WorkComicUpdateWithoutComicVersionsInput,
    Prisma.WorkComicUncheckedUpdateWithoutComicVersionsInput
  >;
  create: Prisma.XOR<
    Prisma.WorkComicCreateWithoutComicVersionsInput,
    Prisma.WorkComicUncheckedCreateWithoutComicVersionsInput
  >;
  where?: Prisma.WorkComicWhereInput;
};

export type WorkComicUpdateToOneWithWhereWithoutComicVersionsInput = {
  where?: Prisma.WorkComicWhereInput;
  data: Prisma.XOR<
    Prisma.WorkComicUpdateWithoutComicVersionsInput,
    Prisma.WorkComicUncheckedUpdateWithoutComicVersionsInput
  >;
};

export type WorkComicUpdateWithoutComicVersionsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  alias?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  cover?: Prisma.StringFieldUpdateOperationsInput | string;
  popularity?: Prisma.IntFieldUpdateOperationsInput | number;
  popularityWeight?: Prisma.IntFieldUpdateOperationsInput | number;
  language?: Prisma.StringFieldUpdateOperationsInput | string;
  region?: Prisma.StringFieldUpdateOperationsInput | string;
  ageRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  publishAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastUpdated?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  publisher?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  originalSource?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  serialStatus?: Prisma.IntFieldUpdateOperationsInput | number;
  totalChapters?: Prisma.IntFieldUpdateOperationsInput | number;
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number;
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number;
  commentCount?: Prisma.IntFieldUpdateOperationsInput | number;
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number;
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number;
  canDownload?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  canComment?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  readRule?: Prisma.IntFieldUpdateOperationsInput | number;
  purchaseAmount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  seoTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  seoDescription?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  seoKeywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  recommendWeight?: Prisma.FloatFieldUpdateOperationsInput | number;
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isHot?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  comicAuthors?: Prisma.WorkComicAuthorUpdateManyWithoutComicNestedInput;
  relatedChapters?: Prisma.WorkComicChapterUpdateManyWithoutRelatedComicNestedInput;
  comicCategories?: Prisma.WorkComicCategoryUpdateManyWithoutComicNestedInput;
};

export type WorkComicUncheckedUpdateWithoutComicVersionsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  alias?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  cover?: Prisma.StringFieldUpdateOperationsInput | string;
  popularity?: Prisma.IntFieldUpdateOperationsInput | number;
  popularityWeight?: Prisma.IntFieldUpdateOperationsInput | number;
  language?: Prisma.StringFieldUpdateOperationsInput | string;
  region?: Prisma.StringFieldUpdateOperationsInput | string;
  ageRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  publishAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastUpdated?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  publisher?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  originalSource?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  serialStatus?: Prisma.IntFieldUpdateOperationsInput | number;
  totalChapters?: Prisma.IntFieldUpdateOperationsInput | number;
  totalViews?: Prisma.IntFieldUpdateOperationsInput | number;
  favoriteCount?: Prisma.IntFieldUpdateOperationsInput | number;
  commentCount?: Prisma.IntFieldUpdateOperationsInput | number;
  likeCount?: Prisma.IntFieldUpdateOperationsInput | number;
  rating?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
  ratingCount?: Prisma.IntFieldUpdateOperationsInput | number;
  canDownload?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  canComment?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  readRule?: Prisma.IntFieldUpdateOperationsInput | number;
  purchaseAmount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  seoTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  seoDescription?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  seoKeywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  recommendWeight?: Prisma.FloatFieldUpdateOperationsInput | number;
  isRecommended?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isHot?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  copyright?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disclaimer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  remark?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  comicAuthors?: Prisma.WorkComicAuthorUncheckedUpdateManyWithoutComicNestedInput;
  relatedChapters?: Prisma.WorkComicChapterUncheckedUpdateManyWithoutRelatedComicNestedInput;
  comicCategories?: Prisma.WorkComicCategoryUncheckedUpdateManyWithoutComicNestedInput;
};

/**
 * Count Type WorkComicCountOutputType
 */

export type WorkComicCountOutputType = {
  comicAuthors: number;
  relatedChapters: number;
  comicCategories: number;
  comicVersions: number;
};

export type WorkComicCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  comicAuthors?: boolean | WorkComicCountOutputTypeCountComicAuthorsArgs;
  relatedChapters?: boolean | WorkComicCountOutputTypeCountRelatedChaptersArgs;
  comicCategories?: boolean | WorkComicCountOutputTypeCountComicCategoriesArgs;
  comicVersions?: boolean | WorkComicCountOutputTypeCountComicVersionsArgs;
};

/**
 * WorkComicCountOutputType without action
 */
export type WorkComicCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComicCountOutputType
   */
  select?: Prisma.WorkComicCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * WorkComicCountOutputType without action
 */
export type WorkComicCountOutputTypeCountComicAuthorsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.WorkComicAuthorWhereInput;
};

/**
 * WorkComicCountOutputType without action
 */
export type WorkComicCountOutputTypeCountRelatedChaptersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.WorkComicChapterWhereInput;
};

/**
 * WorkComicCountOutputType without action
 */
export type WorkComicCountOutputTypeCountComicCategoriesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.WorkComicCategoryWhereInput;
};

/**
 * WorkComicCountOutputType without action
 */
export type WorkComicCountOutputTypeCountComicVersionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.WorkComicVersionWhereInput;
};

export type WorkComicSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    alias?: boolean;
    cover?: boolean;
    popularity?: boolean;
    popularityWeight?: boolean;
    language?: boolean;
    region?: boolean;
    ageRating?: boolean;
    isPublished?: boolean;
    publishAt?: boolean;
    lastUpdated?: boolean;
    description?: boolean;
    publisher?: boolean;
    originalSource?: boolean;
    serialStatus?: boolean;
    totalChapters?: boolean;
    totalViews?: boolean;
    favoriteCount?: boolean;
    commentCount?: boolean;
    likeCount?: boolean;
    rating?: boolean;
    ratingCount?: boolean;
    canDownload?: boolean;
    canComment?: boolean;
    readRule?: boolean;
    purchaseAmount?: boolean;
    seoTitle?: boolean;
    seoDescription?: boolean;
    seoKeywords?: boolean;
    recommendWeight?: boolean;
    isRecommended?: boolean;
    isHot?: boolean;
    isNew?: boolean;
    copyright?: boolean;
    disclaimer?: boolean;
    remark?: boolean;
    deletedAt?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    comicAuthors?: boolean | Prisma.WorkComic$comicAuthorsArgs<ExtArgs>;
    relatedChapters?: boolean | Prisma.WorkComic$relatedChaptersArgs<ExtArgs>;
    comicCategories?: boolean | Prisma.WorkComic$comicCategoriesArgs<ExtArgs>;
    comicVersions?: boolean | Prisma.WorkComic$comicVersionsArgs<ExtArgs>;
    _count?: boolean | Prisma.WorkComicCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['workComic']
>;

export type WorkComicSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    alias?: boolean;
    cover?: boolean;
    popularity?: boolean;
    popularityWeight?: boolean;
    language?: boolean;
    region?: boolean;
    ageRating?: boolean;
    isPublished?: boolean;
    publishAt?: boolean;
    lastUpdated?: boolean;
    description?: boolean;
    publisher?: boolean;
    originalSource?: boolean;
    serialStatus?: boolean;
    totalChapters?: boolean;
    totalViews?: boolean;
    favoriteCount?: boolean;
    commentCount?: boolean;
    likeCount?: boolean;
    rating?: boolean;
    ratingCount?: boolean;
    canDownload?: boolean;
    canComment?: boolean;
    readRule?: boolean;
    purchaseAmount?: boolean;
    seoTitle?: boolean;
    seoDescription?: boolean;
    seoKeywords?: boolean;
    recommendWeight?: boolean;
    isRecommended?: boolean;
    isHot?: boolean;
    isNew?: boolean;
    copyright?: boolean;
    disclaimer?: boolean;
    remark?: boolean;
    deletedAt?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
  },
  ExtArgs['result']['workComic']
>;

export type WorkComicSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    alias?: boolean;
    cover?: boolean;
    popularity?: boolean;
    popularityWeight?: boolean;
    language?: boolean;
    region?: boolean;
    ageRating?: boolean;
    isPublished?: boolean;
    publishAt?: boolean;
    lastUpdated?: boolean;
    description?: boolean;
    publisher?: boolean;
    originalSource?: boolean;
    serialStatus?: boolean;
    totalChapters?: boolean;
    totalViews?: boolean;
    favoriteCount?: boolean;
    commentCount?: boolean;
    likeCount?: boolean;
    rating?: boolean;
    ratingCount?: boolean;
    canDownload?: boolean;
    canComment?: boolean;
    readRule?: boolean;
    purchaseAmount?: boolean;
    seoTitle?: boolean;
    seoDescription?: boolean;
    seoKeywords?: boolean;
    recommendWeight?: boolean;
    isRecommended?: boolean;
    isHot?: boolean;
    isNew?: boolean;
    copyright?: boolean;
    disclaimer?: boolean;
    remark?: boolean;
    deletedAt?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
  },
  ExtArgs['result']['workComic']
>;

export type WorkComicSelectScalar = {
  id?: boolean;
  name?: boolean;
  alias?: boolean;
  cover?: boolean;
  popularity?: boolean;
  popularityWeight?: boolean;
  language?: boolean;
  region?: boolean;
  ageRating?: boolean;
  isPublished?: boolean;
  publishAt?: boolean;
  lastUpdated?: boolean;
  description?: boolean;
  publisher?: boolean;
  originalSource?: boolean;
  serialStatus?: boolean;
  totalChapters?: boolean;
  totalViews?: boolean;
  favoriteCount?: boolean;
  commentCount?: boolean;
  likeCount?: boolean;
  rating?: boolean;
  ratingCount?: boolean;
  canDownload?: boolean;
  canComment?: boolean;
  readRule?: boolean;
  purchaseAmount?: boolean;
  seoTitle?: boolean;
  seoDescription?: boolean;
  seoKeywords?: boolean;
  recommendWeight?: boolean;
  isRecommended?: boolean;
  isHot?: boolean;
  isNew?: boolean;
  copyright?: boolean;
  disclaimer?: boolean;
  remark?: boolean;
  deletedAt?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type WorkComicOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'name'
  | 'alias'
  | 'cover'
  | 'popularity'
  | 'popularityWeight'
  | 'language'
  | 'region'
  | 'ageRating'
  | 'isPublished'
  | 'publishAt'
  | 'lastUpdated'
  | 'description'
  | 'publisher'
  | 'originalSource'
  | 'serialStatus'
  | 'totalChapters'
  | 'totalViews'
  | 'favoriteCount'
  | 'commentCount'
  | 'likeCount'
  | 'rating'
  | 'ratingCount'
  | 'canDownload'
  | 'canComment'
  | 'readRule'
  | 'purchaseAmount'
  | 'seoTitle'
  | 'seoDescription'
  | 'seoKeywords'
  | 'recommendWeight'
  | 'isRecommended'
  | 'isHot'
  | 'isNew'
  | 'copyright'
  | 'disclaimer'
  | 'remark'
  | 'deletedAt'
  | 'createdAt'
  | 'updatedAt',
  ExtArgs['result']['workComic']
>;
export type WorkComicInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  comicAuthors?: boolean | Prisma.WorkComic$comicAuthorsArgs<ExtArgs>;
  relatedChapters?: boolean | Prisma.WorkComic$relatedChaptersArgs<ExtArgs>;
  comicCategories?: boolean | Prisma.WorkComic$comicCategoriesArgs<ExtArgs>;
  comicVersions?: boolean | Prisma.WorkComic$comicVersionsArgs<ExtArgs>;
  _count?: boolean | Prisma.WorkComicCountOutputTypeDefaultArgs<ExtArgs>;
};
export type WorkComicIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {};
export type WorkComicIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {};

export type $WorkComicPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'WorkComic';
  objects: {
    /**
     * 作者关系 - 多对多关系通过中间表
     */
    comicAuthors: Prisma.$WorkComicAuthorPayload<ExtArgs>[];
    /**
     * 关联的章节（包含原版和各版本章节）
     */
    relatedChapters: Prisma.$WorkComicChapterPayload<ExtArgs>[];
    /**
     * 分类关系 - 多对多关系通过中间表
     */
    comicCategories: Prisma.$WorkComicCategoryPayload<ExtArgs>[];
    /**
     * 版本关系 - 一对多关系
     */
    comicVersions: Prisma.$WorkComicVersionPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      /**
       * 主键id
       */
      id: number;
      /**
       * 漫画名称
       */
      name: string;
      /**
       * 漫画别名（多个别名用逗号分隔）
       */
      alias: string | null;
      /**
       * 漫画封面URL
       */
      cover: string;
      /**
       * 热度（真实数据）
       */
      popularity: number;
      /**
       * 虚拟热度（用于运营调整）
       */
      popularityWeight: number;
      /**
       * 语言代码（如：zh-CN, en-US, ja-JP）
       */
      language: string;
      /**
       * 地区代码（如：CN, US, JP）
       */
      region: string;
      /**
       * 内容年龄分级（G=全年龄, PG=建议家长指导, PG-13=13岁以上, R=限制级, NC-17=17岁以下禁止）
       */
      ageRating: string | null;
      /**
       * 发布状态
       */
      isPublished: boolean;
      /**
       * 发布日期
       */
      publishAt: Date | null;
      /**
       * 最后更新时间（内容更新时间）
       */
      lastUpdated: Date | null;
      /**
       * 漫画简介
       */
      description: string;
      /**
       * 出版社
       */
      publisher: string | null;
      /**
       * 原作来源（如：小说改编、游戏改编等）
       */
      originalSource: string | null;
      /**
       * 连载状态（0=未开始, 1=连载中, 2=已完结, 3=暂停, 4=停更）
       */
      serialStatus: number;
      /**
       * 总章节数
       */
      totalChapters: number;
      /**
       * 总阅读次数
       */
      totalViews: number;
      /**
       * 收藏数
       */
      favoriteCount: number;
      /**
       * 评论总数
       */
      commentCount: number;
      /**
       * 点赞总数
       */
      likeCount: number;
      /**
       * 评分（1-10分，保留一位小数）
       */
      rating: number | null;
      /**
       * 评分人数
       */
      ratingCount: number;
      /**
       * 是否允许下载
       */
      canDownload: boolean;
      /**
       * 是否允许评论
       */
      canComment: boolean;
      /**
       * 查看规则（0=所有人, 1=登录用户, 2=会员, 3=积分购买）
       */
      readRule: number;
      /**
       * 购买需要消耗的积分
       */
      purchaseAmount: number | null;
      /**
       * SEO标题
       */
      seoTitle: string | null;
      /**
       * SEO描述
       */
      seoDescription: string | null;
      /**
       * SEO关键词（逗号分隔）
       */
      seoKeywords: string | null;
      /**
       * 推荐权重（影响推荐排序）
       */
      recommendWeight: number;
      /**
       * 是否推荐到首页
       */
      isRecommended: boolean;
      /**
       * 是否热门
       */
      isHot: boolean;
      /**
       * 是否新作
       */
      isNew: boolean;
      /**
       * 版权信息
       */
      copyright: string | null;
      /**
       * 免责声明
       */
      disclaimer: string | null;
      /**
       * 备注（内部使用）
       */
      remark: string | null;
      /**
       * 软删除时间（用于数据恢复或归档）
       */
      deletedAt: Date | null;
      /**
       * 创建时间
       */
      createdAt: Date;
      /**
       * 更新时间
       */
      updatedAt: Date;
    },
    ExtArgs['result']['workComic']
  >;
  composites: {};
};

export type WorkComicGetPayload<
  S extends boolean | null | undefined | WorkComicDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$WorkComicPayload, S>;

export type WorkComicCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  WorkComicFindManyArgs,
  'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'
> & {
  select?: WorkComicCountAggregateInputType | true;
};

export interface WorkComicDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['WorkComic'];
    meta: { name: 'WorkComic' };
  };
  /**
   * Find zero or one WorkComic that matches the filter.
   * @param {WorkComicFindUniqueArgs} args - Arguments to find a WorkComic
   * @example
   * // Get one WorkComic
   * const workComic = await prisma.workComic.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends WorkComicFindUniqueArgs>(
    args: Prisma.SelectSubset<T, WorkComicFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__WorkComicClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkComicPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one WorkComic that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {WorkComicFindUniqueOrThrowArgs} args - Arguments to find a WorkComic
   * @example
   * // Get one WorkComic
   * const workComic = await prisma.workComic.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends WorkComicFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, WorkComicFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__WorkComicClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkComicPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first WorkComic that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkComicFindFirstArgs} args - Arguments to find a WorkComic
   * @example
   * // Get one WorkComic
   * const workComic = await prisma.workComic.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends WorkComicFindFirstArgs>(
    args?: Prisma.SelectSubset<T, WorkComicFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__WorkComicClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkComicPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first WorkComic that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkComicFindFirstOrThrowArgs} args - Arguments to find a WorkComic
   * @example
   * // Get one WorkComic
   * const workComic = await prisma.workComic.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends WorkComicFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, WorkComicFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__WorkComicClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkComicPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more WorkComics that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkComicFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all WorkComics
   * const workComics = await prisma.workComic.findMany()
   *
   * // Get first 10 WorkComics
   * const workComics = await prisma.workComic.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const workComicWithIdOnly = await prisma.workComic.findMany({ select: { id: true } })
   *
   */
  findMany<T extends WorkComicFindManyArgs>(
    args?: Prisma.SelectSubset<T, WorkComicFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$WorkComicPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >;

  /**
   * Create a WorkComic.
   * @param {WorkComicCreateArgs} args - Arguments to create a WorkComic.
   * @example
   * // Create one WorkComic
   * const WorkComic = await prisma.workComic.create({
   *   data: {
   *     // ... data to create a WorkComic
   *   }
   * })
   *
   */
  create<T extends WorkComicCreateArgs>(
    args: Prisma.SelectSubset<T, WorkComicCreateArgs<ExtArgs>>
  ): Prisma.Prisma__WorkComicClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkComicPayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many WorkComics.
   * @param {WorkComicCreateManyArgs} args - Arguments to create many WorkComics.
   * @example
   * // Create many WorkComics
   * const workComic = await prisma.workComic.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends WorkComicCreateManyArgs>(
    args?: Prisma.SelectSubset<T, WorkComicCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many WorkComics and returns the data saved in the database.
   * @param {WorkComicCreateManyAndReturnArgs} args - Arguments to create many WorkComics.
   * @example
   * // Create many WorkComics
   * const workComic = await prisma.workComic.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many WorkComics and only return the `id`
   * const workComicWithIdOnly = await prisma.workComic.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends WorkComicCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, WorkComicCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$WorkComicPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a WorkComic.
   * @param {WorkComicDeleteArgs} args - Arguments to delete one WorkComic.
   * @example
   * // Delete one WorkComic
   * const WorkComic = await prisma.workComic.delete({
   *   where: {
   *     // ... filter to delete one WorkComic
   *   }
   * })
   *
   */
  delete<T extends WorkComicDeleteArgs>(
    args: Prisma.SelectSubset<T, WorkComicDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__WorkComicClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkComicPayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one WorkComic.
   * @param {WorkComicUpdateArgs} args - Arguments to update one WorkComic.
   * @example
   * // Update one WorkComic
   * const workComic = await prisma.workComic.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends WorkComicUpdateArgs>(
    args: Prisma.SelectSubset<T, WorkComicUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__WorkComicClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkComicPayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more WorkComics.
   * @param {WorkComicDeleteManyArgs} args - Arguments to filter WorkComics to delete.
   * @example
   * // Delete a few WorkComics
   * const { count } = await prisma.workComic.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends WorkComicDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, WorkComicDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more WorkComics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkComicUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many WorkComics
   * const workComic = await prisma.workComic.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends WorkComicUpdateManyArgs>(
    args: Prisma.SelectSubset<T, WorkComicUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more WorkComics and returns the data updated in the database.
   * @param {WorkComicUpdateManyAndReturnArgs} args - Arguments to update many WorkComics.
   * @example
   * // Update many WorkComics
   * const workComic = await prisma.workComic.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more WorkComics and only return the `id`
   * const workComicWithIdOnly = await prisma.workComic.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends WorkComicUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, WorkComicUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$WorkComicPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one WorkComic.
   * @param {WorkComicUpsertArgs} args - Arguments to update or create a WorkComic.
   * @example
   * // Update or create a WorkComic
   * const workComic = await prisma.workComic.upsert({
   *   create: {
   *     // ... data to create a WorkComic
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the WorkComic we want to update
   *   }
   * })
   */
  upsert<T extends WorkComicUpsertArgs>(
    args: Prisma.SelectSubset<T, WorkComicUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__WorkComicClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkComicPayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of WorkComics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkComicCountArgs} args - Arguments to filter WorkComics to count.
   * @example
   * // Count the number of WorkComics
   * const count = await prisma.workComic.count({
   *   where: {
   *     // ... the filter for the WorkComics we want to count
   *   }
   * })
   **/
  count<T extends WorkComicCountArgs>(
    args?: Prisma.Subset<T, WorkComicCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], WorkComicCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a WorkComic.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkComicAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends WorkComicAggregateArgs>(
    args: Prisma.Subset<T, WorkComicAggregateArgs>
  ): Prisma.PrismaPromise<GetWorkComicAggregateType<T>>;

  /**
   * Group by WorkComic.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkComicGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends WorkComicGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: WorkComicGroupByArgs['orderBy'] }
      : { orderBy?: WorkComicGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, WorkComicGroupByArgs, OrderByArg> &
      InputErrors
  ): {} extends InputErrors
    ? GetWorkComicGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the WorkComic model
   */
  readonly fields: WorkComicFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for WorkComic.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__WorkComicClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise';
  comicAuthors<T extends Prisma.WorkComic$comicAuthorsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.WorkComic$comicAuthorsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$WorkComicAuthorPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  relatedChapters<T extends Prisma.WorkComic$relatedChaptersArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.WorkComic$relatedChaptersArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$WorkComicChapterPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  comicCategories<T extends Prisma.WorkComic$comicCategoriesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.WorkComic$comicCategoriesArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$WorkComicCategoryPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  comicVersions<T extends Prisma.WorkComic$comicVersionsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.WorkComic$comicVersionsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$WorkComicVersionPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the WorkComic model
 */
export interface WorkComicFieldRefs {
  readonly id: Prisma.FieldRef<'WorkComic', 'Int'>;
  readonly name: Prisma.FieldRef<'WorkComic', 'String'>;
  readonly alias: Prisma.FieldRef<'WorkComic', 'String'>;
  readonly cover: Prisma.FieldRef<'WorkComic', 'String'>;
  readonly popularity: Prisma.FieldRef<'WorkComic', 'Int'>;
  readonly popularityWeight: Prisma.FieldRef<'WorkComic', 'Int'>;
  readonly language: Prisma.FieldRef<'WorkComic', 'String'>;
  readonly region: Prisma.FieldRef<'WorkComic', 'String'>;
  readonly ageRating: Prisma.FieldRef<'WorkComic', 'String'>;
  readonly isPublished: Prisma.FieldRef<'WorkComic', 'Boolean'>;
  readonly publishAt: Prisma.FieldRef<'WorkComic', 'DateTime'>;
  readonly lastUpdated: Prisma.FieldRef<'WorkComic', 'DateTime'>;
  readonly description: Prisma.FieldRef<'WorkComic', 'String'>;
  readonly publisher: Prisma.FieldRef<'WorkComic', 'String'>;
  readonly originalSource: Prisma.FieldRef<'WorkComic', 'String'>;
  readonly serialStatus: Prisma.FieldRef<'WorkComic', 'Int'>;
  readonly totalChapters: Prisma.FieldRef<'WorkComic', 'Int'>;
  readonly totalViews: Prisma.FieldRef<'WorkComic', 'Int'>;
  readonly favoriteCount: Prisma.FieldRef<'WorkComic', 'Int'>;
  readonly commentCount: Prisma.FieldRef<'WorkComic', 'Int'>;
  readonly likeCount: Prisma.FieldRef<'WorkComic', 'Int'>;
  readonly rating: Prisma.FieldRef<'WorkComic', 'Float'>;
  readonly ratingCount: Prisma.FieldRef<'WorkComic', 'Int'>;
  readonly canDownload: Prisma.FieldRef<'WorkComic', 'Boolean'>;
  readonly canComment: Prisma.FieldRef<'WorkComic', 'Boolean'>;
  readonly readRule: Prisma.FieldRef<'WorkComic', 'Int'>;
  readonly purchaseAmount: Prisma.FieldRef<'WorkComic', 'Int'>;
  readonly seoTitle: Prisma.FieldRef<'WorkComic', 'String'>;
  readonly seoDescription: Prisma.FieldRef<'WorkComic', 'String'>;
  readonly seoKeywords: Prisma.FieldRef<'WorkComic', 'String'>;
  readonly recommendWeight: Prisma.FieldRef<'WorkComic', 'Float'>;
  readonly isRecommended: Prisma.FieldRef<'WorkComic', 'Boolean'>;
  readonly isHot: Prisma.FieldRef<'WorkComic', 'Boolean'>;
  readonly isNew: Prisma.FieldRef<'WorkComic', 'Boolean'>;
  readonly copyright: Prisma.FieldRef<'WorkComic', 'String'>;
  readonly disclaimer: Prisma.FieldRef<'WorkComic', 'String'>;
  readonly remark: Prisma.FieldRef<'WorkComic', 'String'>;
  readonly deletedAt: Prisma.FieldRef<'WorkComic', 'DateTime'>;
  readonly createdAt: Prisma.FieldRef<'WorkComic', 'DateTime'>;
  readonly updatedAt: Prisma.FieldRef<'WorkComic', 'DateTime'>;
}

// Custom InputTypes
/**
 * WorkComic findUnique
 */
export type WorkComicFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComic
   */
  select?: Prisma.WorkComicSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComic
   */
  omit?: Prisma.WorkComicOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicInclude<ExtArgs> | null;
  /**
   * Filter, which WorkComic to fetch.
   */
  where: Prisma.WorkComicWhereUniqueInput;
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * WorkComic findUniqueOrThrow
 */
export type WorkComicFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComic
   */
  select?: Prisma.WorkComicSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComic
   */
  omit?: Prisma.WorkComicOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicInclude<ExtArgs> | null;
  /**
   * Filter, which WorkComic to fetch.
   */
  where: Prisma.WorkComicWhereUniqueInput;
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * WorkComic findFirst
 */
export type WorkComicFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComic
   */
  select?: Prisma.WorkComicSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComic
   */
  omit?: Prisma.WorkComicOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicInclude<ExtArgs> | null;
  /**
   * Filter, which WorkComic to fetch.
   */
  where?: Prisma.WorkComicWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkComics to fetch.
   */
  orderBy?:
    | Prisma.WorkComicOrderByWithRelationInput
    | Prisma.WorkComicOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for WorkComics.
   */
  cursor?: Prisma.WorkComicWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `±n` WorkComics from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkComics.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of WorkComics.
   */
  distinct?:
    | Prisma.WorkComicScalarFieldEnum
    | Prisma.WorkComicScalarFieldEnum[];
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * WorkComic findFirstOrThrow
 */
export type WorkComicFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComic
   */
  select?: Prisma.WorkComicSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComic
   */
  omit?: Prisma.WorkComicOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicInclude<ExtArgs> | null;
  /**
   * Filter, which WorkComic to fetch.
   */
  where?: Prisma.WorkComicWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkComics to fetch.
   */
  orderBy?:
    | Prisma.WorkComicOrderByWithRelationInput
    | Prisma.WorkComicOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for WorkComics.
   */
  cursor?: Prisma.WorkComicWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `±n` WorkComics from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkComics.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of WorkComics.
   */
  distinct?:
    | Prisma.WorkComicScalarFieldEnum
    | Prisma.WorkComicScalarFieldEnum[];
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * WorkComic findMany
 */
export type WorkComicFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComic
   */
  select?: Prisma.WorkComicSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComic
   */
  omit?: Prisma.WorkComicOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicInclude<ExtArgs> | null;
  /**
   * Filter, which WorkComics to fetch.
   */
  where?: Prisma.WorkComicWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkComics to fetch.
   */
  orderBy?:
    | Prisma.WorkComicOrderByWithRelationInput
    | Prisma.WorkComicOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing WorkComics.
   */
  cursor?: Prisma.WorkComicWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `±n` WorkComics from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkComics.
   */
  skip?: number;
  distinct?:
    | Prisma.WorkComicScalarFieldEnum
    | Prisma.WorkComicScalarFieldEnum[];
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * WorkComic create
 */
export type WorkComicCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComic
   */
  select?: Prisma.WorkComicSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComic
   */
  omit?: Prisma.WorkComicOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicInclude<ExtArgs> | null;
  /**
   * The data needed to create a WorkComic.
   */
  data: Prisma.XOR<
    Prisma.WorkComicCreateInput,
    Prisma.WorkComicUncheckedCreateInput
  >;
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * WorkComic createMany
 */
export type WorkComicCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many WorkComics.
   */
  data: Prisma.WorkComicCreateManyInput | Prisma.WorkComicCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * WorkComic createManyAndReturn
 */
export type WorkComicCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComic
   */
  select?: Prisma.WorkComicSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComic
   */
  omit?: Prisma.WorkComicOmit<ExtArgs> | null;
  /**
   * The data used to create many WorkComics.
   */
  data: Prisma.WorkComicCreateManyInput | Prisma.WorkComicCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * WorkComic update
 */
export type WorkComicUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComic
   */
  select?: Prisma.WorkComicSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComic
   */
  omit?: Prisma.WorkComicOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicInclude<ExtArgs> | null;
  /**
   * The data needed to update a WorkComic.
   */
  data: Prisma.XOR<
    Prisma.WorkComicUpdateInput,
    Prisma.WorkComicUncheckedUpdateInput
  >;
  /**
   * Choose, which WorkComic to update.
   */
  where: Prisma.WorkComicWhereUniqueInput;
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * WorkComic updateMany
 */
export type WorkComicUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update WorkComics.
   */
  data: Prisma.XOR<
    Prisma.WorkComicUpdateManyMutationInput,
    Prisma.WorkComicUncheckedUpdateManyInput
  >;
  /**
   * Filter which WorkComics to update
   */
  where?: Prisma.WorkComicWhereInput;
  /**
   * Limit how many WorkComics to update.
   */
  limit?: number;
};

/**
 * WorkComic updateManyAndReturn
 */
export type WorkComicUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComic
   */
  select?: Prisma.WorkComicSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComic
   */
  omit?: Prisma.WorkComicOmit<ExtArgs> | null;
  /**
   * The data used to update WorkComics.
   */
  data: Prisma.XOR<
    Prisma.WorkComicUpdateManyMutationInput,
    Prisma.WorkComicUncheckedUpdateManyInput
  >;
  /**
   * Filter which WorkComics to update
   */
  where?: Prisma.WorkComicWhereInput;
  /**
   * Limit how many WorkComics to update.
   */
  limit?: number;
};

/**
 * WorkComic upsert
 */
export type WorkComicUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComic
   */
  select?: Prisma.WorkComicSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComic
   */
  omit?: Prisma.WorkComicOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicInclude<ExtArgs> | null;
  /**
   * The filter to search for the WorkComic to update in case it exists.
   */
  where: Prisma.WorkComicWhereUniqueInput;
  /**
   * In case the WorkComic found by the `where` argument doesn't exist, create a new WorkComic with this data.
   */
  create: Prisma.XOR<
    Prisma.WorkComicCreateInput,
    Prisma.WorkComicUncheckedCreateInput
  >;
  /**
   * In case the WorkComic was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.WorkComicUpdateInput,
    Prisma.WorkComicUncheckedUpdateInput
  >;
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * WorkComic delete
 */
export type WorkComicDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComic
   */
  select?: Prisma.WorkComicSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComic
   */
  omit?: Prisma.WorkComicOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicInclude<ExtArgs> | null;
  /**
   * Filter which WorkComic to delete.
   */
  where: Prisma.WorkComicWhereUniqueInput;
  relationLoadStrategy?: Prisma.RelationLoadStrategy;
};

/**
 * WorkComic deleteMany
 */
export type WorkComicDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which WorkComics to delete
   */
  where?: Prisma.WorkComicWhereInput;
  /**
   * Limit how many WorkComics to delete.
   */
  limit?: number;
};

/**
 * WorkComic.comicAuthors
 */
export type WorkComic$comicAuthorsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComicAuthor
   */
  select?: Prisma.WorkComicAuthorSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComicAuthor
   */
  omit?: Prisma.WorkComicAuthorOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicAuthorInclude<ExtArgs> | null;
  where?: Prisma.WorkComicAuthorWhereInput;
  orderBy?:
    | Prisma.WorkComicAuthorOrderByWithRelationInput
    | Prisma.WorkComicAuthorOrderByWithRelationInput[];
  cursor?: Prisma.WorkComicAuthorWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.WorkComicAuthorScalarFieldEnum
    | Prisma.WorkComicAuthorScalarFieldEnum[];
};

/**
 * WorkComic.relatedChapters
 */
export type WorkComic$relatedChaptersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComicChapter
   */
  select?: Prisma.WorkComicChapterSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComicChapter
   */
  omit?: Prisma.WorkComicChapterOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicChapterInclude<ExtArgs> | null;
  where?: Prisma.WorkComicChapterWhereInput;
  orderBy?:
    | Prisma.WorkComicChapterOrderByWithRelationInput
    | Prisma.WorkComicChapterOrderByWithRelationInput[];
  cursor?: Prisma.WorkComicChapterWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.WorkComicChapterScalarFieldEnum
    | Prisma.WorkComicChapterScalarFieldEnum[];
};

/**
 * WorkComic.comicCategories
 */
export type WorkComic$comicCategoriesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComicCategory
   */
  select?: Prisma.WorkComicCategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComicCategory
   */
  omit?: Prisma.WorkComicCategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicCategoryInclude<ExtArgs> | null;
  where?: Prisma.WorkComicCategoryWhereInput;
  orderBy?:
    | Prisma.WorkComicCategoryOrderByWithRelationInput
    | Prisma.WorkComicCategoryOrderByWithRelationInput[];
  cursor?: Prisma.WorkComicCategoryWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.WorkComicCategoryScalarFieldEnum
    | Prisma.WorkComicCategoryScalarFieldEnum[];
};

/**
 * WorkComic.comicVersions
 */
export type WorkComic$comicVersionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComicVersion
   */
  select?: Prisma.WorkComicVersionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComicVersion
   */
  omit?: Prisma.WorkComicVersionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicVersionInclude<ExtArgs> | null;
  where?: Prisma.WorkComicVersionWhereInput;
  orderBy?:
    | Prisma.WorkComicVersionOrderByWithRelationInput
    | Prisma.WorkComicVersionOrderByWithRelationInput[];
  cursor?: Prisma.WorkComicVersionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.WorkComicVersionScalarFieldEnum
    | Prisma.WorkComicVersionScalarFieldEnum[];
};

/**
 * WorkComic without action
 */
export type WorkComicDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WorkComic
   */
  select?: Prisma.WorkComicSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkComic
   */
  omit?: Prisma.WorkComicOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkComicInclude<ExtArgs> | null;
};

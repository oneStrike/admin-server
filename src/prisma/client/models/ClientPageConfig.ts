
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ClientPageConfig` model and its related types.
 *
 * üü¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ClientPageConfig
 * ÂÆ¢Êà∑Á´ØÈ°µÈù¢ÈÖçÁΩÆ
 */
export type ClientPageConfigModel = runtime.Types.Result.DefaultSelection<Prisma.$ClientPageConfigPayload>

export type AggregateClientPageConfig = {
  _count: ClientPageConfigCountAggregateOutputType | null
  _avg: ClientPageConfigAvgAggregateOutputType | null
  _sum: ClientPageConfigSumAggregateOutputType | null
  _min: ClientPageConfigMinAggregateOutputType | null
  _max: ClientPageConfigMaxAggregateOutputType | null
}

export type ClientPageConfigAvgAggregateOutputType = {
  id: number | null
  accessLevel: number | null
  pageStatus: number | null
  accessCount: number | null
}

export type ClientPageConfigSumAggregateOutputType = {
  id: number | null
  accessLevel: number | null
  pageStatus: number | null
  accessCount: number | null
}

export type ClientPageConfigMinAggregateOutputType = {
  id: number | null
  pageCode: string | null
  pagePath: string | null
  pageName: string | null
  pageTitle: string | null
  accessLevel: number | null
  pageStatus: number | null
  description: string | null
  accessCount: number | null
  createdAt: Date | null
  updatedAt: Date | null
  deletedAt: Date | null
}

export type ClientPageConfigMaxAggregateOutputType = {
  id: number | null
  pageCode: string | null
  pagePath: string | null
  pageName: string | null
  pageTitle: string | null
  accessLevel: number | null
  pageStatus: number | null
  description: string | null
  accessCount: number | null
  createdAt: Date | null
  updatedAt: Date | null
  deletedAt: Date | null
}

export type ClientPageConfigCountAggregateOutputType = {
  id: number
  pageCode: number
  pagePath: number
  pageName: number
  pageTitle: number
  accessLevel: number
  pageStatus: number
  description: number
  accessCount: number
  createdAt: number
  updatedAt: number
  deletedAt: number
  _all: number
}


export type ClientPageConfigAvgAggregateInputType = {
  id?: true
  accessLevel?: true
  pageStatus?: true
  accessCount?: true
}

export type ClientPageConfigSumAggregateInputType = {
  id?: true
  accessLevel?: true
  pageStatus?: true
  accessCount?: true
}

export type ClientPageConfigMinAggregateInputType = {
  id?: true
  pageCode?: true
  pagePath?: true
  pageName?: true
  pageTitle?: true
  accessLevel?: true
  pageStatus?: true
  description?: true
  accessCount?: true
  createdAt?: true
  updatedAt?: true
  deletedAt?: true
}

export type ClientPageConfigMaxAggregateInputType = {
  id?: true
  pageCode?: true
  pagePath?: true
  pageName?: true
  pageTitle?: true
  accessLevel?: true
  pageStatus?: true
  description?: true
  accessCount?: true
  createdAt?: true
  updatedAt?: true
  deletedAt?: true
}

export type ClientPageConfigCountAggregateInputType = {
  id?: true
  pageCode?: true
  pagePath?: true
  pageName?: true
  pageTitle?: true
  accessLevel?: true
  pageStatus?: true
  description?: true
  accessCount?: true
  createdAt?: true
  updatedAt?: true
  deletedAt?: true
  _all?: true
}

export type ClientPageConfigAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ClientPageConfig to aggregate.
   */
  where?: Prisma.ClientPageConfigWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ClientPageConfigs to fetch.
   */
  orderBy?: Prisma.ClientPageConfigOrderByWithRelationInput | Prisma.ClientPageConfigOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ClientPageConfigWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `¬±n` ClientPageConfigs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ClientPageConfigs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ClientPageConfigs
  **/
  _count?: true | ClientPageConfigCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ClientPageConfigAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ClientPageConfigSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ClientPageConfigMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ClientPageConfigMaxAggregateInputType
}

export type GetClientPageConfigAggregateType<T extends ClientPageConfigAggregateArgs> = {
      [P in keyof T & keyof AggregateClientPageConfig]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateClientPageConfig[P]>
    : Prisma.GetScalarType<T[P], AggregateClientPageConfig[P]>
}




export type ClientPageConfigGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ClientPageConfigWhereInput
  orderBy?: Prisma.ClientPageConfigOrderByWithAggregationInput | Prisma.ClientPageConfigOrderByWithAggregationInput[]
  by: Prisma.ClientPageConfigScalarFieldEnum[] | Prisma.ClientPageConfigScalarFieldEnum
  having?: Prisma.ClientPageConfigScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ClientPageConfigCountAggregateInputType | true
  _avg?: ClientPageConfigAvgAggregateInputType
  _sum?: ClientPageConfigSumAggregateInputType
  _min?: ClientPageConfigMinAggregateInputType
  _max?: ClientPageConfigMaxAggregateInputType
}

export type ClientPageConfigGroupByOutputType = {
  id: number
  pageCode: string
  pagePath: string
  pageName: string
  pageTitle: string | null
  accessLevel: number
  pageStatus: number
  description: string | null
  accessCount: number
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  _count: ClientPageConfigCountAggregateOutputType | null
  _avg: ClientPageConfigAvgAggregateOutputType | null
  _sum: ClientPageConfigSumAggregateOutputType | null
  _min: ClientPageConfigMinAggregateOutputType | null
  _max: ClientPageConfigMaxAggregateOutputType | null
}

type GetClientPageConfigGroupByPayload<T extends ClientPageConfigGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ClientPageConfigGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ClientPageConfigGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ClientPageConfigGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ClientPageConfigGroupByOutputType[P]>
      }
    >
  >



export type ClientPageConfigWhereInput = {
  AND?: Prisma.ClientPageConfigWhereInput | Prisma.ClientPageConfigWhereInput[]
  OR?: Prisma.ClientPageConfigWhereInput[]
  NOT?: Prisma.ClientPageConfigWhereInput | Prisma.ClientPageConfigWhereInput[]
  id?: Prisma.IntFilter<"ClientPageConfig"> | number
  pageCode?: Prisma.StringFilter<"ClientPageConfig"> | string
  pagePath?: Prisma.StringFilter<"ClientPageConfig"> | string
  pageName?: Prisma.StringFilter<"ClientPageConfig"> | string
  pageTitle?: Prisma.StringNullableFilter<"ClientPageConfig"> | string | null
  accessLevel?: Prisma.IntFilter<"ClientPageConfig"> | number
  pageStatus?: Prisma.IntFilter<"ClientPageConfig"> | number
  description?: Prisma.StringNullableFilter<"ClientPageConfig"> | string | null
  accessCount?: Prisma.IntFilter<"ClientPageConfig"> | number
  createdAt?: Prisma.DateTimeFilter<"ClientPageConfig"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ClientPageConfig"> | Date | string
  deletedAt?: Prisma.DateTimeNullableFilter<"ClientPageConfig"> | Date | string | null
  notices?: Prisma.ClientNoticeListRelationFilter
}

export type ClientPageConfigOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  pageCode?: Prisma.SortOrder
  pagePath?: Prisma.SortOrder
  pageName?: Prisma.SortOrder
  pageTitle?: Prisma.SortOrderInput | Prisma.SortOrder
  accessLevel?: Prisma.SortOrder
  pageStatus?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  accessCount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  notices?: Prisma.ClientNoticeOrderByRelationAggregateInput
}

export type ClientPageConfigWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  pageCode?: string
  pagePath?: string
  AND?: Prisma.ClientPageConfigWhereInput | Prisma.ClientPageConfigWhereInput[]
  OR?: Prisma.ClientPageConfigWhereInput[]
  NOT?: Prisma.ClientPageConfigWhereInput | Prisma.ClientPageConfigWhereInput[]
  pageName?: Prisma.StringFilter<"ClientPageConfig"> | string
  pageTitle?: Prisma.StringNullableFilter<"ClientPageConfig"> | string | null
  accessLevel?: Prisma.IntFilter<"ClientPageConfig"> | number
  pageStatus?: Prisma.IntFilter<"ClientPageConfig"> | number
  description?: Prisma.StringNullableFilter<"ClientPageConfig"> | string | null
  accessCount?: Prisma.IntFilter<"ClientPageConfig"> | number
  createdAt?: Prisma.DateTimeFilter<"ClientPageConfig"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ClientPageConfig"> | Date | string
  deletedAt?: Prisma.DateTimeNullableFilter<"ClientPageConfig"> | Date | string | null
  notices?: Prisma.ClientNoticeListRelationFilter
}, "id" | "pageCode" | "pagePath">

export type ClientPageConfigOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  pageCode?: Prisma.SortOrder
  pagePath?: Prisma.SortOrder
  pageName?: Prisma.SortOrder
  pageTitle?: Prisma.SortOrderInput | Prisma.SortOrder
  accessLevel?: Prisma.SortOrder
  pageStatus?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  accessCount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.ClientPageConfigCountOrderByAggregateInput
  _avg?: Prisma.ClientPageConfigAvgOrderByAggregateInput
  _max?: Prisma.ClientPageConfigMaxOrderByAggregateInput
  _min?: Prisma.ClientPageConfigMinOrderByAggregateInput
  _sum?: Prisma.ClientPageConfigSumOrderByAggregateInput
}

export type ClientPageConfigScalarWhereWithAggregatesInput = {
  AND?: Prisma.ClientPageConfigScalarWhereWithAggregatesInput | Prisma.ClientPageConfigScalarWhereWithAggregatesInput[]
  OR?: Prisma.ClientPageConfigScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ClientPageConfigScalarWhereWithAggregatesInput | Prisma.ClientPageConfigScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"ClientPageConfig"> | number
  pageCode?: Prisma.StringWithAggregatesFilter<"ClientPageConfig"> | string
  pagePath?: Prisma.StringWithAggregatesFilter<"ClientPageConfig"> | string
  pageName?: Prisma.StringWithAggregatesFilter<"ClientPageConfig"> | string
  pageTitle?: Prisma.StringNullableWithAggregatesFilter<"ClientPageConfig"> | string | null
  accessLevel?: Prisma.IntWithAggregatesFilter<"ClientPageConfig"> | number
  pageStatus?: Prisma.IntWithAggregatesFilter<"ClientPageConfig"> | number
  description?: Prisma.StringNullableWithAggregatesFilter<"ClientPageConfig"> | string | null
  accessCount?: Prisma.IntWithAggregatesFilter<"ClientPageConfig"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ClientPageConfig"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ClientPageConfig"> | Date | string
  deletedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"ClientPageConfig"> | Date | string | null
}

export type ClientPageConfigCreateInput = {
  pageCode: string
  pagePath: string
  pageName: string
  pageTitle?: string | null
  accessLevel?: number
  pageStatus?: number
  description?: string | null
  accessCount?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  deletedAt?: Date | string | null
  notices?: Prisma.ClientNoticeCreateNestedManyWithoutClientPageInput
}

export type ClientPageConfigUncheckedCreateInput = {
  id?: number
  pageCode: string
  pagePath: string
  pageName: string
  pageTitle?: string | null
  accessLevel?: number
  pageStatus?: number
  description?: string | null
  accessCount?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  deletedAt?: Date | string | null
  notices?: Prisma.ClientNoticeUncheckedCreateNestedManyWithoutClientPageInput
}

export type ClientPageConfigUpdateInput = {
  pageCode?: Prisma.StringFieldUpdateOperationsInput | string
  pagePath?: Prisma.StringFieldUpdateOperationsInput | string
  pageName?: Prisma.StringFieldUpdateOperationsInput | string
  pageTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accessLevel?: Prisma.IntFieldUpdateOperationsInput | number
  pageStatus?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accessCount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notices?: Prisma.ClientNoticeUpdateManyWithoutClientPageNestedInput
}

export type ClientPageConfigUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  pageCode?: Prisma.StringFieldUpdateOperationsInput | string
  pagePath?: Prisma.StringFieldUpdateOperationsInput | string
  pageName?: Prisma.StringFieldUpdateOperationsInput | string
  pageTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accessLevel?: Prisma.IntFieldUpdateOperationsInput | number
  pageStatus?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accessCount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notices?: Prisma.ClientNoticeUncheckedUpdateManyWithoutClientPageNestedInput
}

export type ClientPageConfigCreateManyInput = {
  id?: number
  pageCode: string
  pagePath: string
  pageName: string
  pageTitle?: string | null
  accessLevel?: number
  pageStatus?: number
  description?: string | null
  accessCount?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  deletedAt?: Date | string | null
}

export type ClientPageConfigUpdateManyMutationInput = {
  pageCode?: Prisma.StringFieldUpdateOperationsInput | string
  pagePath?: Prisma.StringFieldUpdateOperationsInput | string
  pageName?: Prisma.StringFieldUpdateOperationsInput | string
  pageTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accessLevel?: Prisma.IntFieldUpdateOperationsInput | number
  pageStatus?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accessCount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type ClientPageConfigUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  pageCode?: Prisma.StringFieldUpdateOperationsInput | string
  pagePath?: Prisma.StringFieldUpdateOperationsInput | string
  pageName?: Prisma.StringFieldUpdateOperationsInput | string
  pageTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accessLevel?: Prisma.IntFieldUpdateOperationsInput | number
  pageStatus?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accessCount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type ClientPageConfigNullableScalarRelationFilter = {
  is?: Prisma.ClientPageConfigWhereInput | null
  isNot?: Prisma.ClientPageConfigWhereInput | null
}

export type ClientPageConfigCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  pageCode?: Prisma.SortOrder
  pagePath?: Prisma.SortOrder
  pageName?: Prisma.SortOrder
  pageTitle?: Prisma.SortOrder
  accessLevel?: Prisma.SortOrder
  pageStatus?: Prisma.SortOrder
  description?: Prisma.SortOrder
  accessCount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
}

export type ClientPageConfigAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  accessLevel?: Prisma.SortOrder
  pageStatus?: Prisma.SortOrder
  accessCount?: Prisma.SortOrder
}

export type ClientPageConfigMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  pageCode?: Prisma.SortOrder
  pagePath?: Prisma.SortOrder
  pageName?: Prisma.SortOrder
  pageTitle?: Prisma.SortOrder
  accessLevel?: Prisma.SortOrder
  pageStatus?: Prisma.SortOrder
  description?: Prisma.SortOrder
  accessCount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
}

export type ClientPageConfigMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  pageCode?: Prisma.SortOrder
  pagePath?: Prisma.SortOrder
  pageName?: Prisma.SortOrder
  pageTitle?: Prisma.SortOrder
  accessLevel?: Prisma.SortOrder
  pageStatus?: Prisma.SortOrder
  description?: Prisma.SortOrder
  accessCount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
}

export type ClientPageConfigSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  accessLevel?: Prisma.SortOrder
  pageStatus?: Prisma.SortOrder
  accessCount?: Prisma.SortOrder
}

export type ClientPageConfigCreateNestedOneWithoutNoticesInput = {
  create?: Prisma.XOR<Prisma.ClientPageConfigCreateWithoutNoticesInput, Prisma.ClientPageConfigUncheckedCreateWithoutNoticesInput>
  connectOrCreate?: Prisma.ClientPageConfigCreateOrConnectWithoutNoticesInput
  connect?: Prisma.ClientPageConfigWhereUniqueInput
}

export type ClientPageConfigUpdateOneWithoutNoticesNestedInput = {
  create?: Prisma.XOR<Prisma.ClientPageConfigCreateWithoutNoticesInput, Prisma.ClientPageConfigUncheckedCreateWithoutNoticesInput>
  connectOrCreate?: Prisma.ClientPageConfigCreateOrConnectWithoutNoticesInput
  upsert?: Prisma.ClientPageConfigUpsertWithoutNoticesInput
  disconnect?: Prisma.ClientPageConfigWhereInput | boolean
  delete?: Prisma.ClientPageConfigWhereInput | boolean
  connect?: Prisma.ClientPageConfigWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClientPageConfigUpdateToOneWithWhereWithoutNoticesInput, Prisma.ClientPageConfigUpdateWithoutNoticesInput>, Prisma.ClientPageConfigUncheckedUpdateWithoutNoticesInput>
}

export type ClientPageConfigCreateWithoutNoticesInput = {
  pageCode: string
  pagePath: string
  pageName: string
  pageTitle?: string | null
  accessLevel?: number
  pageStatus?: number
  description?: string | null
  accessCount?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  deletedAt?: Date | string | null
}

export type ClientPageConfigUncheckedCreateWithoutNoticesInput = {
  id?: number
  pageCode: string
  pagePath: string
  pageName: string
  pageTitle?: string | null
  accessLevel?: number
  pageStatus?: number
  description?: string | null
  accessCount?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  deletedAt?: Date | string | null
}

export type ClientPageConfigCreateOrConnectWithoutNoticesInput = {
  where: Prisma.ClientPageConfigWhereUniqueInput
  create: Prisma.XOR<Prisma.ClientPageConfigCreateWithoutNoticesInput, Prisma.ClientPageConfigUncheckedCreateWithoutNoticesInput>
}

export type ClientPageConfigUpsertWithoutNoticesInput = {
  update: Prisma.XOR<Prisma.ClientPageConfigUpdateWithoutNoticesInput, Prisma.ClientPageConfigUncheckedUpdateWithoutNoticesInput>
  create: Prisma.XOR<Prisma.ClientPageConfigCreateWithoutNoticesInput, Prisma.ClientPageConfigUncheckedCreateWithoutNoticesInput>
  where?: Prisma.ClientPageConfigWhereInput
}

export type ClientPageConfigUpdateToOneWithWhereWithoutNoticesInput = {
  where?: Prisma.ClientPageConfigWhereInput
  data: Prisma.XOR<Prisma.ClientPageConfigUpdateWithoutNoticesInput, Prisma.ClientPageConfigUncheckedUpdateWithoutNoticesInput>
}

export type ClientPageConfigUpdateWithoutNoticesInput = {
  pageCode?: Prisma.StringFieldUpdateOperationsInput | string
  pagePath?: Prisma.StringFieldUpdateOperationsInput | string
  pageName?: Prisma.StringFieldUpdateOperationsInput | string
  pageTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accessLevel?: Prisma.IntFieldUpdateOperationsInput | number
  pageStatus?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accessCount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type ClientPageConfigUncheckedUpdateWithoutNoticesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  pageCode?: Prisma.StringFieldUpdateOperationsInput | string
  pagePath?: Prisma.StringFieldUpdateOperationsInput | string
  pageName?: Prisma.StringFieldUpdateOperationsInput | string
  pageTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accessLevel?: Prisma.IntFieldUpdateOperationsInput | number
  pageStatus?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accessCount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}


/**
 * Count Type ClientPageConfigCountOutputType
 */

export type ClientPageConfigCountOutputType = {
  notices: number
}

export type ClientPageConfigCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  notices?: boolean | ClientPageConfigCountOutputTypeCountNoticesArgs
}

/**
 * ClientPageConfigCountOutputType without action
 */
export type ClientPageConfigCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientPageConfigCountOutputType
   */
  select?: Prisma.ClientPageConfigCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ClientPageConfigCountOutputType without action
 */
export type ClientPageConfigCountOutputTypeCountNoticesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ClientNoticeWhereInput
}


export type ClientPageConfigSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  pageCode?: boolean
  pagePath?: boolean
  pageName?: boolean
  pageTitle?: boolean
  accessLevel?: boolean
  pageStatus?: boolean
  description?: boolean
  accessCount?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  deletedAt?: boolean
  notices?: boolean | Prisma.ClientPageConfig$noticesArgs<ExtArgs>
  _count?: boolean | Prisma.ClientPageConfigCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["clientPageConfig"]>

export type ClientPageConfigSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  pageCode?: boolean
  pagePath?: boolean
  pageName?: boolean
  pageTitle?: boolean
  accessLevel?: boolean
  pageStatus?: boolean
  description?: boolean
  accessCount?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  deletedAt?: boolean
}, ExtArgs["result"]["clientPageConfig"]>

export type ClientPageConfigSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  pageCode?: boolean
  pagePath?: boolean
  pageName?: boolean
  pageTitle?: boolean
  accessLevel?: boolean
  pageStatus?: boolean
  description?: boolean
  accessCount?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  deletedAt?: boolean
}, ExtArgs["result"]["clientPageConfig"]>

export type ClientPageConfigSelectScalar = {
  id?: boolean
  pageCode?: boolean
  pagePath?: boolean
  pageName?: boolean
  pageTitle?: boolean
  accessLevel?: boolean
  pageStatus?: boolean
  description?: boolean
  accessCount?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  deletedAt?: boolean
}

export type ClientPageConfigOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "pageCode" | "pagePath" | "pageName" | "pageTitle" | "accessLevel" | "pageStatus" | "description" | "accessCount" | "createdAt" | "updatedAt" | "deletedAt", ExtArgs["result"]["clientPageConfig"]>
export type ClientPageConfigInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  notices?: boolean | Prisma.ClientPageConfig$noticesArgs<ExtArgs>
  _count?: boolean | Prisma.ClientPageConfigCountOutputTypeDefaultArgs<ExtArgs>
}
export type ClientPageConfigIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type ClientPageConfigIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $ClientPageConfigPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ClientPageConfig"
  objects: {
    /**
     * ÂÖ≥ËÅîÁöÑÈÄöÁü•ÂÖ¨Âëä
     */
    notices: Prisma.$ClientNoticePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    /**
     * ‰∏ªÈîÆid
     */
    id: number
    /**
     * È°µÈù¢ÁºñÁ†ÅÔºàÂîØ‰∏ÄÊ†áËØÜÔºâ
     */
    pageCode: string
    /**
     * È°µÈù¢Ë∑ØÂæÑÔºàURLË∑ØÂæÑÔºâ
     */
    pagePath: string
    /**
     * È°µÈù¢ÂêçÁß∞
     */
    pageName: string
    /**
     * È°µÈù¢Ê†áÈ¢òÔºàÁî®‰∫éSEOÔºâ
     */
    pageTitle: string | null
    /**
     * ËÆøÈóÆÊùÉÈôêÁ∫ßÂà´Ôºà0:Ê∏∏ÂÆ¢ÂèØËÆøÈóÆ, 1:ÈúÄË¶ÅÁôªÂΩï, 2:ÈúÄË¶Å‰ºöÂëò, 3:ÈúÄË¶ÅVIPÔºâ
     */
    accessLevel: number
    /**
     * È°µÈù¢Áä∂ÊÄÅÔºà0:Á¶ÅÁî®, 1:ÂêØÁî®, 2:ÂºÄÂèë‰∏≠, 3:Áª¥Êä§‰∏≠Ôºâ
     */
    pageStatus: number
    /**
     * È°µÈù¢ÊèèËø∞‰ø°ÊÅØ
     */
    description: string | null
    /**
     * ËÆøÈóÆÊ¨°Êï∞ÁªüËÆ°
     */
    accessCount: number
    /**
     * ÂàõÂª∫Êó∂Èó¥
     */
    createdAt: Date
    /**
     * Êõ¥Êñ∞Êó∂Èó¥
     */
    updatedAt: Date
    /**
     * ËΩØÂà†Èô§Êó∂Èó¥
     */
    deletedAt: Date | null
  }, ExtArgs["result"]["clientPageConfig"]>
  composites: {}
}

export type ClientPageConfigGetPayload<S extends boolean | null | undefined | ClientPageConfigDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ClientPageConfigPayload, S>

export type ClientPageConfigCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ClientPageConfigFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
    select?: ClientPageConfigCountAggregateInputType | true
  }

export interface ClientPageConfigDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ClientPageConfig'], meta: { name: 'ClientPageConfig' } }
  /**
   * Find zero or one ClientPageConfig that matches the filter.
   * @param {ClientPageConfigFindUniqueArgs} args - Arguments to find a ClientPageConfig
   * @example
   * // Get one ClientPageConfig
   * const clientPageConfig = await prisma.clientPageConfig.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ClientPageConfigFindUniqueArgs>(args: Prisma.SelectSubset<T, ClientPageConfigFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ClientPageConfigClient<runtime.Types.Result.GetResult<Prisma.$ClientPageConfigPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ClientPageConfig that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ClientPageConfigFindUniqueOrThrowArgs} args - Arguments to find a ClientPageConfig
   * @example
   * // Get one ClientPageConfig
   * const clientPageConfig = await prisma.clientPageConfig.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ClientPageConfigFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ClientPageConfigFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ClientPageConfigClient<runtime.Types.Result.GetResult<Prisma.$ClientPageConfigPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ClientPageConfig that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientPageConfigFindFirstArgs} args - Arguments to find a ClientPageConfig
   * @example
   * // Get one ClientPageConfig
   * const clientPageConfig = await prisma.clientPageConfig.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ClientPageConfigFindFirstArgs>(args?: Prisma.SelectSubset<T, ClientPageConfigFindFirstArgs<ExtArgs>>): Prisma.Prisma__ClientPageConfigClient<runtime.Types.Result.GetResult<Prisma.$ClientPageConfigPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ClientPageConfig that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientPageConfigFindFirstOrThrowArgs} args - Arguments to find a ClientPageConfig
   * @example
   * // Get one ClientPageConfig
   * const clientPageConfig = await prisma.clientPageConfig.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ClientPageConfigFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ClientPageConfigFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ClientPageConfigClient<runtime.Types.Result.GetResult<Prisma.$ClientPageConfigPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ClientPageConfigs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientPageConfigFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ClientPageConfigs
   * const clientPageConfigs = await prisma.clientPageConfig.findMany()
   * 
   * // Get first 10 ClientPageConfigs
   * const clientPageConfigs = await prisma.clientPageConfig.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const clientPageConfigWithIdOnly = await prisma.clientPageConfig.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ClientPageConfigFindManyArgs>(args?: Prisma.SelectSubset<T, ClientPageConfigFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClientPageConfigPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ClientPageConfig.
   * @param {ClientPageConfigCreateArgs} args - Arguments to create a ClientPageConfig.
   * @example
   * // Create one ClientPageConfig
   * const ClientPageConfig = await prisma.clientPageConfig.create({
   *   data: {
   *     // ... data to create a ClientPageConfig
   *   }
   * })
   * 
   */
  create<T extends ClientPageConfigCreateArgs>(args: Prisma.SelectSubset<T, ClientPageConfigCreateArgs<ExtArgs>>): Prisma.Prisma__ClientPageConfigClient<runtime.Types.Result.GetResult<Prisma.$ClientPageConfigPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ClientPageConfigs.
   * @param {ClientPageConfigCreateManyArgs} args - Arguments to create many ClientPageConfigs.
   * @example
   * // Create many ClientPageConfigs
   * const clientPageConfig = await prisma.clientPageConfig.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ClientPageConfigCreateManyArgs>(args?: Prisma.SelectSubset<T, ClientPageConfigCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ClientPageConfigs and returns the data saved in the database.
   * @param {ClientPageConfigCreateManyAndReturnArgs} args - Arguments to create many ClientPageConfigs.
   * @example
   * // Create many ClientPageConfigs
   * const clientPageConfig = await prisma.clientPageConfig.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ClientPageConfigs and only return the `id`
   * const clientPageConfigWithIdOnly = await prisma.clientPageConfig.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ClientPageConfigCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ClientPageConfigCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClientPageConfigPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ClientPageConfig.
   * @param {ClientPageConfigDeleteArgs} args - Arguments to delete one ClientPageConfig.
   * @example
   * // Delete one ClientPageConfig
   * const ClientPageConfig = await prisma.clientPageConfig.delete({
   *   where: {
   *     // ... filter to delete one ClientPageConfig
   *   }
   * })
   * 
   */
  delete<T extends ClientPageConfigDeleteArgs>(args: Prisma.SelectSubset<T, ClientPageConfigDeleteArgs<ExtArgs>>): Prisma.Prisma__ClientPageConfigClient<runtime.Types.Result.GetResult<Prisma.$ClientPageConfigPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ClientPageConfig.
   * @param {ClientPageConfigUpdateArgs} args - Arguments to update one ClientPageConfig.
   * @example
   * // Update one ClientPageConfig
   * const clientPageConfig = await prisma.clientPageConfig.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ClientPageConfigUpdateArgs>(args: Prisma.SelectSubset<T, ClientPageConfigUpdateArgs<ExtArgs>>): Prisma.Prisma__ClientPageConfigClient<runtime.Types.Result.GetResult<Prisma.$ClientPageConfigPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ClientPageConfigs.
   * @param {ClientPageConfigDeleteManyArgs} args - Arguments to filter ClientPageConfigs to delete.
   * @example
   * // Delete a few ClientPageConfigs
   * const { count } = await prisma.clientPageConfig.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ClientPageConfigDeleteManyArgs>(args?: Prisma.SelectSubset<T, ClientPageConfigDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ClientPageConfigs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientPageConfigUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ClientPageConfigs
   * const clientPageConfig = await prisma.clientPageConfig.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ClientPageConfigUpdateManyArgs>(args: Prisma.SelectSubset<T, ClientPageConfigUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ClientPageConfigs and returns the data updated in the database.
   * @param {ClientPageConfigUpdateManyAndReturnArgs} args - Arguments to update many ClientPageConfigs.
   * @example
   * // Update many ClientPageConfigs
   * const clientPageConfig = await prisma.clientPageConfig.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ClientPageConfigs and only return the `id`
   * const clientPageConfigWithIdOnly = await prisma.clientPageConfig.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ClientPageConfigUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ClientPageConfigUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClientPageConfigPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ClientPageConfig.
   * @param {ClientPageConfigUpsertArgs} args - Arguments to update or create a ClientPageConfig.
   * @example
   * // Update or create a ClientPageConfig
   * const clientPageConfig = await prisma.clientPageConfig.upsert({
   *   create: {
   *     // ... data to create a ClientPageConfig
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ClientPageConfig we want to update
   *   }
   * })
   */
  upsert<T extends ClientPageConfigUpsertArgs>(args: Prisma.SelectSubset<T, ClientPageConfigUpsertArgs<ExtArgs>>): Prisma.Prisma__ClientPageConfigClient<runtime.Types.Result.GetResult<Prisma.$ClientPageConfigPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ClientPageConfigs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientPageConfigCountArgs} args - Arguments to filter ClientPageConfigs to count.
   * @example
   * // Count the number of ClientPageConfigs
   * const count = await prisma.clientPageConfig.count({
   *   where: {
   *     // ... the filter for the ClientPageConfigs we want to count
   *   }
   * })
  **/
  count<T extends ClientPageConfigCountArgs>(
    args?: Prisma.Subset<T, ClientPageConfigCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ClientPageConfigCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ClientPageConfig.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientPageConfigAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ClientPageConfigAggregateArgs>(args: Prisma.Subset<T, ClientPageConfigAggregateArgs>): Prisma.PrismaPromise<GetClientPageConfigAggregateType<T>>

  /**
   * Group by ClientPageConfig.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientPageConfigGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ClientPageConfigGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ClientPageConfigGroupByArgs['orderBy'] }
      : { orderBy?: ClientPageConfigGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ClientPageConfigGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientPageConfigGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ClientPageConfig model
 */
readonly fields: ClientPageConfigFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ClientPageConfig.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ClientPageConfigClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  notices<T extends Prisma.ClientPageConfig$noticesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ClientPageConfig$noticesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClientNoticePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ClientPageConfig model
 */
export interface ClientPageConfigFieldRefs {
  readonly id: Prisma.FieldRef<"ClientPageConfig", 'Int'>
  readonly pageCode: Prisma.FieldRef<"ClientPageConfig", 'String'>
  readonly pagePath: Prisma.FieldRef<"ClientPageConfig", 'String'>
  readonly pageName: Prisma.FieldRef<"ClientPageConfig", 'String'>
  readonly pageTitle: Prisma.FieldRef<"ClientPageConfig", 'String'>
  readonly accessLevel: Prisma.FieldRef<"ClientPageConfig", 'Int'>
  readonly pageStatus: Prisma.FieldRef<"ClientPageConfig", 'Int'>
  readonly description: Prisma.FieldRef<"ClientPageConfig", 'String'>
  readonly accessCount: Prisma.FieldRef<"ClientPageConfig", 'Int'>
  readonly createdAt: Prisma.FieldRef<"ClientPageConfig", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ClientPageConfig", 'DateTime'>
  readonly deletedAt: Prisma.FieldRef<"ClientPageConfig", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ClientPageConfig findUnique
 */
export type ClientPageConfigFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientPageConfig
   */
  select?: Prisma.ClientPageConfigSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClientPageConfig
   */
  omit?: Prisma.ClientPageConfigOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientPageConfigInclude<ExtArgs> | null
  /**
   * Filter, which ClientPageConfig to fetch.
   */
  where: Prisma.ClientPageConfigWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ClientPageConfig findUniqueOrThrow
 */
export type ClientPageConfigFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientPageConfig
   */
  select?: Prisma.ClientPageConfigSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClientPageConfig
   */
  omit?: Prisma.ClientPageConfigOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientPageConfigInclude<ExtArgs> | null
  /**
   * Filter, which ClientPageConfig to fetch.
   */
  where: Prisma.ClientPageConfigWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ClientPageConfig findFirst
 */
export type ClientPageConfigFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientPageConfig
   */
  select?: Prisma.ClientPageConfigSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClientPageConfig
   */
  omit?: Prisma.ClientPageConfigOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientPageConfigInclude<ExtArgs> | null
  /**
   * Filter, which ClientPageConfig to fetch.
   */
  where?: Prisma.ClientPageConfigWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ClientPageConfigs to fetch.
   */
  orderBy?: Prisma.ClientPageConfigOrderByWithRelationInput | Prisma.ClientPageConfigOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ClientPageConfigs.
   */
  cursor?: Prisma.ClientPageConfigWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `¬±n` ClientPageConfigs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ClientPageConfigs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ClientPageConfigs.
   */
  distinct?: Prisma.ClientPageConfigScalarFieldEnum | Prisma.ClientPageConfigScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ClientPageConfig findFirstOrThrow
 */
export type ClientPageConfigFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientPageConfig
   */
  select?: Prisma.ClientPageConfigSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClientPageConfig
   */
  omit?: Prisma.ClientPageConfigOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientPageConfigInclude<ExtArgs> | null
  /**
   * Filter, which ClientPageConfig to fetch.
   */
  where?: Prisma.ClientPageConfigWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ClientPageConfigs to fetch.
   */
  orderBy?: Prisma.ClientPageConfigOrderByWithRelationInput | Prisma.ClientPageConfigOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ClientPageConfigs.
   */
  cursor?: Prisma.ClientPageConfigWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `¬±n` ClientPageConfigs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ClientPageConfigs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ClientPageConfigs.
   */
  distinct?: Prisma.ClientPageConfigScalarFieldEnum | Prisma.ClientPageConfigScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ClientPageConfig findMany
 */
export type ClientPageConfigFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientPageConfig
   */
  select?: Prisma.ClientPageConfigSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClientPageConfig
   */
  omit?: Prisma.ClientPageConfigOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientPageConfigInclude<ExtArgs> | null
  /**
   * Filter, which ClientPageConfigs to fetch.
   */
  where?: Prisma.ClientPageConfigWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ClientPageConfigs to fetch.
   */
  orderBy?: Prisma.ClientPageConfigOrderByWithRelationInput | Prisma.ClientPageConfigOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ClientPageConfigs.
   */
  cursor?: Prisma.ClientPageConfigWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `¬±n` ClientPageConfigs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ClientPageConfigs.
   */
  skip?: number
  distinct?: Prisma.ClientPageConfigScalarFieldEnum | Prisma.ClientPageConfigScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ClientPageConfig create
 */
export type ClientPageConfigCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientPageConfig
   */
  select?: Prisma.ClientPageConfigSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClientPageConfig
   */
  omit?: Prisma.ClientPageConfigOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientPageConfigInclude<ExtArgs> | null
  /**
   * The data needed to create a ClientPageConfig.
   */
  data: Prisma.XOR<Prisma.ClientPageConfigCreateInput, Prisma.ClientPageConfigUncheckedCreateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ClientPageConfig createMany
 */
export type ClientPageConfigCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ClientPageConfigs.
   */
  data: Prisma.ClientPageConfigCreateManyInput | Prisma.ClientPageConfigCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ClientPageConfig createManyAndReturn
 */
export type ClientPageConfigCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientPageConfig
   */
  select?: Prisma.ClientPageConfigSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ClientPageConfig
   */
  omit?: Prisma.ClientPageConfigOmit<ExtArgs> | null
  /**
   * The data used to create many ClientPageConfigs.
   */
  data: Prisma.ClientPageConfigCreateManyInput | Prisma.ClientPageConfigCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ClientPageConfig update
 */
export type ClientPageConfigUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientPageConfig
   */
  select?: Prisma.ClientPageConfigSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClientPageConfig
   */
  omit?: Prisma.ClientPageConfigOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientPageConfigInclude<ExtArgs> | null
  /**
   * The data needed to update a ClientPageConfig.
   */
  data: Prisma.XOR<Prisma.ClientPageConfigUpdateInput, Prisma.ClientPageConfigUncheckedUpdateInput>
  /**
   * Choose, which ClientPageConfig to update.
   */
  where: Prisma.ClientPageConfigWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ClientPageConfig updateMany
 */
export type ClientPageConfigUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ClientPageConfigs.
   */
  data: Prisma.XOR<Prisma.ClientPageConfigUpdateManyMutationInput, Prisma.ClientPageConfigUncheckedUpdateManyInput>
  /**
   * Filter which ClientPageConfigs to update
   */
  where?: Prisma.ClientPageConfigWhereInput
  /**
   * Limit how many ClientPageConfigs to update.
   */
  limit?: number
}

/**
 * ClientPageConfig updateManyAndReturn
 */
export type ClientPageConfigUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientPageConfig
   */
  select?: Prisma.ClientPageConfigSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ClientPageConfig
   */
  omit?: Prisma.ClientPageConfigOmit<ExtArgs> | null
  /**
   * The data used to update ClientPageConfigs.
   */
  data: Prisma.XOR<Prisma.ClientPageConfigUpdateManyMutationInput, Prisma.ClientPageConfigUncheckedUpdateManyInput>
  /**
   * Filter which ClientPageConfigs to update
   */
  where?: Prisma.ClientPageConfigWhereInput
  /**
   * Limit how many ClientPageConfigs to update.
   */
  limit?: number
}

/**
 * ClientPageConfig upsert
 */
export type ClientPageConfigUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientPageConfig
   */
  select?: Prisma.ClientPageConfigSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClientPageConfig
   */
  omit?: Prisma.ClientPageConfigOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientPageConfigInclude<ExtArgs> | null
  /**
   * The filter to search for the ClientPageConfig to update in case it exists.
   */
  where: Prisma.ClientPageConfigWhereUniqueInput
  /**
   * In case the ClientPageConfig found by the `where` argument doesn't exist, create a new ClientPageConfig with this data.
   */
  create: Prisma.XOR<Prisma.ClientPageConfigCreateInput, Prisma.ClientPageConfigUncheckedCreateInput>
  /**
   * In case the ClientPageConfig was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ClientPageConfigUpdateInput, Prisma.ClientPageConfigUncheckedUpdateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ClientPageConfig delete
 */
export type ClientPageConfigDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientPageConfig
   */
  select?: Prisma.ClientPageConfigSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClientPageConfig
   */
  omit?: Prisma.ClientPageConfigOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientPageConfigInclude<ExtArgs> | null
  /**
   * Filter which ClientPageConfig to delete.
   */
  where: Prisma.ClientPageConfigWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ClientPageConfig deleteMany
 */
export type ClientPageConfigDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ClientPageConfigs to delete
   */
  where?: Prisma.ClientPageConfigWhereInput
  /**
   * Limit how many ClientPageConfigs to delete.
   */
  limit?: number
}

/**
 * ClientPageConfig.notices
 */
export type ClientPageConfig$noticesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientNotice
   */
  select?: Prisma.ClientNoticeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClientNotice
   */
  omit?: Prisma.ClientNoticeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientNoticeInclude<ExtArgs> | null
  where?: Prisma.ClientNoticeWhereInput
  orderBy?: Prisma.ClientNoticeOrderByWithRelationInput | Prisma.ClientNoticeOrderByWithRelationInput[]
  cursor?: Prisma.ClientNoticeWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ClientNoticeScalarFieldEnum | Prisma.ClientNoticeScalarFieldEnum[]
}

/**
 * ClientPageConfig without action
 */
export type ClientPageConfigDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientPageConfig
   */
  select?: Prisma.ClientPageConfigSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClientPageConfig
   */
  omit?: Prisma.ClientPageConfigOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientPageConfigInclude<ExtArgs> | null
}
